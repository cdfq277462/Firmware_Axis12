Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.LMS_Load) refers to main.o(.text.LMS_Load) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LMS_Save) refers to main.o(.text.LMS_Save) for [Anonymous Symbol]
    main.o(.text.HAL_Delay) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_Delay) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.HAL_Delay) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.HAL_Delay) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    main.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    main.o(.text.HAL_Delay) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    main.o(.ARM.exidx.text.HAL_Delay) refers to main.o(.text.HAL_Delay) for [Anonymous Symbol]
    main.o(.text.__aeabi_assert) refers to main.o(.text.ErrorHandler) for ErrorHandler
    main.o(.ARM.exidx.text.__aeabi_assert) refers to main.o(.text.__aeabi_assert) for [Anonymous Symbol]
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(.text.HAL_GetTick) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.HAL_GetTick) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_InitTick) refers to main.o(.text.HAL_InitTick) for [Anonymous Symbol]
    main.o(.text.ErrorHandler) refers to led_stm32h7.o(.rodata.LED0) for LED0
    main.o(.text.ErrorHandler) refers to led_stm32h7.o(.rodata.LED1) for LED1
    main.o(.ARM.exidx.text.ErrorHandler) refers to main.o(.text.ErrorHandler) for [Anonymous Symbol]
    main.o(.text.assert_failed) refers to main.o(.text.ErrorHandler) for ErrorHandler
    main.o(.ARM.exidx.text.assert_failed) refers to main.o(.text.assert_failed) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ActivateNotification) for HAL_HSEM_ActivateNotification
    main.o(.text.main) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearPendingEvent) for HAL_PWREx_ClearPendingEvent
    main.o(.text.main) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode) for HAL_PWREx_EnterSTOPMode
    main.o(.text.main) refers to stm32h7xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.1
    main.o(.text.main) refers to main.o(.text.ErrorHandler) for ErrorHandler
    main.o(.text.main) refers to task.o(.text.app_main_task) for app_main_task
    main.o(.text.main) refers to task.o(.rodata.app_main_attr) for app_main_attr
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    task.o(.text.netDHCP_Notify) refers to main.o(.bss.LocalMS) for LocalMS
    task.o(.text.netDHCP_Notify) refers to net_sys.o(i.netIF_GetOption) for netIF_GetOption
    task.o(.ARM.exidx.text.netDHCP_Notify) refers to task.o(.text.netDHCP_Notify) for [Anonymous Symbol]
    task.o(.text.app_main_task) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    task.o(.text.app_main_task) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    task.o(.text.app_main_task) refers to task.o(.bss.app_main_tid) for app_main_tid
    task.o(.text.app_main_task) refers to task.o(.rodata.str1.1) for .L.str.4
    task.o(.text.app_main_task) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    task.o(.text.app_main_task) refers to main.o(.bss.LocalMS) for LocalMS
    task.o(.text.app_main_task) refers to main.o(.text.LMS_Load) for LMS_Load
    task.o(.text.app_main_task) refers to adc_stm32h7.o(.text.ADC_Init) for ADC_Init
    task.o(.text.app_main_task) refers to eep_stm32h7.o(.text.EEP_Init) for EEP_Init
    task.o(.text.app_main_task) refers to eep_stm32h7.o(.text.EEP_ReadVariable) for EEP_ReadVariable
    task.o(.text.app_main_task) refers to net_sys.o(i.netInitialize) for netInitialize
    task.o(.text.app_main_task) refers to net_sys.o(i.netIF_GetOption) for netIF_GetOption
    task.o(.text.app_main_task) refers to sock.o(.text.app_sock_task) for app_sock_task
    task.o(.text.app_main_task) refers to task.o(.rodata.app_sock_attr) for app_sock_attr
    task.o(.text.app_main_task) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    task.o(.text.app_main_task) refers to test.o(.text.app_test_task) for app_test_task
    task.o(.text.app_main_task) refers to task.o(.rodata.app_test_attr) for app_test_attr
    task.o(.text.app_main_task) refers to idle.o(.text.app_idle_task) for app_idle_task
    task.o(.text.app_main_task) refers to task.o(.rodata.app_idle_attr) for app_idle_attr
    task.o(.text.app_main_task) refers to task.o(.text.udp_cb_func) for udp_cb_func
    task.o(.text.app_main_task) refers to net_udp.o(i.netUDP_GetSocket) for netUDP_GetSocket
    task.o(.text.app_main_task) refers to net_udp.o(i.netUDP_Open) for netUDP_Open
    task.o(.text.app_main_task) refers to rtx_thread.o(.text.osThreadFlagsGet) for osThreadFlagsGet
    task.o(.text.app_main_task) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    task.o(.text.app_main_task) refers to eep_stm32h7.o(.text.EEP_WriteVariable) for EEP_WriteVariable
    task.o(.text.app_main_task) refers to led_stm32h7.o(.rodata.LED1) for LED1
    task.o(.text.app_main_task) refers to rtx_delay.o(.text.osDelay) for osDelay
    task.o(.text.app_main_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    task.o(.ARM.exidx.text.app_main_task) refers to task.o(.text.app_main_task) for [Anonymous Symbol]
    task.o(.text.udp_cb_func) refers to net_udp.o(i.netUDP_GetBuffer) for netUDP_GetBuffer
    task.o(.text.udp_cb_func) refers to rt_memclr.o(.text) for __aeabi_memclr
    task.o(.text.udp_cb_func) refers to main.o(.bss.LocalMS) for LocalMS
    task.o(.text.udp_cb_func) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    task.o(.text.udp_cb_func) refers to net_udp.o(i.netUDP_Send) for netUDP_Send
    task.o(.text.udp_cb_func) refers to task.o(.rodata.str1.1) for .L.str.19
    task.o(.text.udp_cb_func) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    task.o(.text.udp_cb_func) refers to memcmp.o(.text) for memcmp
    task.o(.text.udp_cb_func) refers to task.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    task.o(.ARM.exidx.text.udp_cb_func) refers to task.o(.text.udp_cb_func) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.__NVIC_SystemReset) refers to task.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    task.o(.rodata.app_main_attr) refers to task.o(.rodata.str1.1) for [Anonymous Symbol]
    task.o(.rodata.app_sock_attr) refers to task.o(.rodata.str1.1) for [Anonymous Symbol]
    task.o(.rodata.app_test_attr) refers to task.o(.rodata.str1.1) for [Anonymous Symbol]
    task.o(.rodata.app_idle_attr) refers to task.o(.rodata.str1.1) for [Anonymous Symbol]
    sock.o(.text.app_sock_task) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    sock.o(.text.app_sock_task) refers to task.o(.bss.app_sock_tid) for app_sock_tid
    sock.o(.text.app_sock_task) refers to sock.o(.rodata.str1.1) for .L.str
    sock.o(.text.app_sock_task) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    sock.o(.text.app_sock_task) refers to sock.o(.text.udp_cb_func) for udp_cb_func
    sock.o(.text.app_sock_task) refers to net_udp.o(i.netUDP_GetSocket) for netUDP_GetSocket
    sock.o(.text.app_sock_task) refers to sock.o(.data.udp_soc) for udp_soc
    sock.o(.text.app_sock_task) refers to net_udp.o(i.netUDP_Open) for netUDP_Open
    sock.o(.text.app_sock_task) refers to sock.o(.text.tcp_cb_func) for tcp_cb_func
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_GetSocket) for netTCP_GetSocket
    sock.o(.text.app_sock_task) refers to sock.o(.data.tcp_soc) for tcp_soc
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_SetOption) for netTCP_SetOption
    sock.o(.text.app_sock_task) refers to sock.o(.bss.TCP_QueueStruct) for TCP_QueueStruct
    sock.o(.text.app_sock_task) refers to sock.o(.bss.TCP_QueueSpaces) for TCP_QueueSpaces
    sock.o(.text.app_sock_task) refers to fifo.o(.text.FIFO_InitQueue) for FIFO_InitQueue
    sock.o(.text.app_sock_task) refers to task.o(.bss.app_main_tid) for app_main_tid
    sock.o(.text.app_sock_task) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_GetState) for netTCP_GetState
    sock.o(.text.app_sock_task) refers to fifo.o(.text.FIFO_FlushQueue) for FIFO_FlushQueue
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_Listen) for netTCP_Listen
    sock.o(.text.app_sock_task) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_SendReady) for netTCP_SendReady
    sock.o(.text.app_sock_task) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    sock.o(.text.app_sock_task) refers to fifo.o(.text.FIFO_PullQueue) for FIFO_PullQueue
    sock.o(.text.app_sock_task) refers to modbus.o(.text.MODBUS_ReplyToQuery) for MODBUS_ReplyToQuery
    sock.o(.text.app_sock_task) refers to sock.o(.text.tcp_sock_send) for tcp_sock_send
    sock.o(.text.app_sock_task) refers to net_tcp.o(i.netTCP_Abort) for netTCP_Abort
    sock.o(.text.app_sock_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    sock.o(.ARM.exidx.text.app_sock_task) refers to sock.o(.text.app_sock_task) for [Anonymous Symbol]
    sock.o(.text.udp_cb_func) refers to sock.o(.rodata.str1.1) for .L.str.1
    sock.o(.text.udp_cb_func) refers to main.o(.text.assert_failed) for assert_failed
    sock.o(.text.udp_cb_func) refers to net_udp.o(i.netUDP_GetBuffer) for netUDP_GetBuffer
    sock.o(.text.udp_cb_func) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    sock.o(.text.udp_cb_func) refers to modbus.o(.text.MODBUS_ReplyToQuery) for MODBUS_ReplyToQuery
    sock.o(.text.udp_cb_func) refers to net_udp.o(i.netUDP_Send) for netUDP_Send
    sock.o(.text.udp_cb_func) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    sock.o(.ARM.exidx.text.udp_cb_func) refers to sock.o(.text.udp_cb_func) for [Anonymous Symbol]
    sock.o(.text.tcp_cb_func) refers to task.o(.bss.app_sock_tid) for app_sock_tid
    sock.o(.text.tcp_cb_func) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    sock.o(.text.tcp_cb_func) refers to sock.o(.rodata.str1.1) for .L.str.78
    sock.o(.text.tcp_cb_func) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    sock.o(.text.tcp_cb_func) refers to sock.o(.data.tcp_soc) for tcp_soc
    sock.o(.text.tcp_cb_func) refers to sock.o(.bss.TCP_QueueStruct) for TCP_QueueStruct
    sock.o(.text.tcp_cb_func) refers to fifo.o(.text.FIFO_PushQueue) for FIFO_PushQueue
    sock.o(.text.tcp_cb_func) refers to net_tcp.o(i.netTCP_Abort) for netTCP_Abort
    sock.o(.ARM.exidx.text.tcp_cb_func) refers to sock.o(.text.tcp_cb_func) for [Anonymous Symbol]
    sock.o(.text.tcp_sock_send) refers to sock.o(.rodata.str1.1) for .L.str.1
    sock.o(.text.tcp_sock_send) refers to main.o(.text.assert_failed) for assert_failed
    sock.o(.text.tcp_sock_send) refers to net_tcp.o(i.netTCP_SendReady) for netTCP_SendReady
    sock.o(.text.tcp_sock_send) refers to net_tcp.o(i.netTCP_GetBuffer) for netTCP_GetBuffer
    sock.o(.text.tcp_sock_send) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    sock.o(.text.tcp_sock_send) refers to net_tcp.o(i.netTCP_Send) for netTCP_Send
    sock.o(.ARM.exidx.text.tcp_sock_send) refers to sock.o(.text.tcp_sock_send) for [Anonymous Symbol]
    test.o(.text.app_test_task) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    test.o(.text.app_test_task) refers to task.o(.bss.app_test_tid) for app_test_tid
    test.o(.text.app_test_task) refers to test.o(.rodata.str1.1) for .L.str
    test.o(.text.app_test_task) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    test.o(.text.app_test_task) refers to task.o(.bss.app_main_tid) for app_main_tid
    test.o(.text.app_test_task) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    test.o(.text.app_test_task) refers to rtx_delay.o(.text.osDelay) for osDelay
    test.o(.text.app_test_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    test.o(.ARM.exidx.text.app_test_task) refers to test.o(.text.app_test_task) for [Anonymous Symbol]
    idle.o(.text.app_idle_task) refers to idle.o(.rodata..L__const.app_idle_task.addr) for .L__const.app_idle_task.addr
    idle.o(.text.app_idle_task) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    idle.o(.text.app_idle_task) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    idle.o(.text.app_idle_task) refers to task.o(.bss.app_idle_tid) for app_idle_tid
    idle.o(.text.app_idle_task) refers to idle.o(.rodata.str1.1) for .L.str
    idle.o(.text.app_idle_task) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    idle.o(.text.app_idle_task) refers to idle.o(.text.udp_cb_func) for udp_cb_func
    idle.o(.text.app_idle_task) refers to net_udp.o(i.netUDP_GetSocket) for netUDP_GetSocket
    idle.o(.text.app_idle_task) refers to net_udp.o(i.netUDP_Open) for netUDP_Open
    idle.o(.text.app_idle_task) refers to task.o(.bss.app_main_tid) for app_main_tid
    idle.o(.text.app_idle_task) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    idle.o(.text.app_idle_task) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    idle.o(.text.app_idle_task) refers to net_udp.o(i.netUDP_GetBuffer) for netUDP_GetBuffer
    idle.o(.text.app_idle_task) refers to fifo.o(.text.FIFO_PullQueue) for FIFO_PullQueue
    idle.o(.text.app_idle_task) refers to net_udp.o(i.netUDP_Send) for netUDP_Send
    idle.o(.text.app_idle_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    idle.o(.ARM.exidx.text.app_idle_task) refers to idle.o(.text.app_idle_task) for [Anonymous Symbol]
    idle.o(.ARM.exidx.text.udp_cb_func) refers to idle.o(.text.udp_cb_func) for [Anonymous Symbol]
    bsp_stm32h7.o(.text.osRtxErrorNotify) refers to bsp_stm32h7.o(.rodata.str1.1) for .L.str
    bsp_stm32h7.o(.text.osRtxErrorNotify) refers to main.o(.text.ErrorHandler) for ErrorHandler
    bsp_stm32h7.o(.ARM.exidx.text.osRtxErrorNotify) refers to bsp_stm32h7.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    bsp_stm32h7.o(.text.net_sys_error) refers to bsp_stm32h7.o(.rodata.str1.1) for .L.str
    bsp_stm32h7.o(.text.net_sys_error) refers to main.o(.text.ErrorHandler) for ErrorHandler
    bsp_stm32h7.o(.ARM.exidx.text.net_sys_error) refers to bsp_stm32h7.o(.text.net_sys_error) for [Anonymous Symbol]
    irq_stm32h7.o(.text.NMI_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.NMI_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.NMI_Handler) refers to irq_stm32h7.o(.text.NMI_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.HardFault_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.HardFault_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.HardFault_Handler) refers to irq_stm32h7.o(.text.HardFault_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.MemManage_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.MemManage_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.MemManage_Handler) refers to irq_stm32h7.o(.text.MemManage_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.BusFault_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.BusFault_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.BusFault_Handler) refers to irq_stm32h7.o(.text.BusFault_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.UsageFault_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.UsageFault_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.UsageFault_Handler) refers to irq_stm32h7.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.DebugMon_Handler) refers to irq_stm32h7.o(.rodata.str1.1) for .L.str
    irq_stm32h7.o(.text.DebugMon_Handler) refers to main.o(.text.ErrorHandler) for ErrorHandler
    irq_stm32h7.o(.ARM.exidx.text.DebugMon_Handler) refers to irq_stm32h7.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler) refers to adc_stm32h7.o(.data.hADC1) for hADC1
    irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.DMA2_Stream2_IRQHandler) refers to irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.USART1_IRQHandler) refers to com_stm32h7.o(.data.hUART1) for hUART1
    irq_stm32h7.o(.text.USART1_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.USART1_IRQHandler) refers to irq_stm32h7.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.USART2_IRQHandler) refers to com_stm32h7.o(.data.hUART2) for hUART2
    irq_stm32h7.o(.text.USART2_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.USART2_IRQHandler) refers to irq_stm32h7.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.USART3_IRQHandler) refers to com_stm32h7.o(.data.hUART3) for hUART3
    irq_stm32h7.o(.text.USART3_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.USART3_IRQHandler) refers to irq_stm32h7.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.UART4_IRQHandler) refers to com_stm32h7.o(.data.hUART4) for hUART4
    irq_stm32h7.o(.text.UART4_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.UART4_IRQHandler) refers to irq_stm32h7.o(.text.UART4_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.UART5_IRQHandler) refers to com_stm32h7.o(.data.hUART5) for hUART5
    irq_stm32h7.o(.text.UART5_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.UART5_IRQHandler) refers to irq_stm32h7.o(.text.UART5_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.USART6_IRQHandler) refers to com_stm32h7.o(.data.hUART6) for hUART6
    irq_stm32h7.o(.text.USART6_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.USART6_IRQHandler) refers to irq_stm32h7.o(.text.USART6_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.UART7_IRQHandler) refers to com_stm32h7.o(.data.hUART7) for hUART7
    irq_stm32h7.o(.text.UART7_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.UART7_IRQHandler) refers to irq_stm32h7.o(.text.UART7_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.UART8_IRQHandler) refers to com_stm32h7.o(.data.hUART8) for hUART8
    irq_stm32h7.o(.text.UART8_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.UART8_IRQHandler) refers to irq_stm32h7.o(.text.UART8_IRQHandler) for [Anonymous Symbol]
    irq_stm32h7.o(.text.HSEM2_IRQHandler) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IRQHandler) for HAL_HSEM_IRQHandler
    irq_stm32h7.o(.ARM.exidx.text.HSEM2_IRQHandler) refers to irq_stm32h7.o(.text.HSEM2_IRQHandler) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    msp_stm32h7.o(.ARM.exidx.text.HAL_MspInit) refers to msp_stm32h7.o(.text.HAL_MspInit) for [Anonymous Symbol]
    msp_stm32h7.o(.ARM.exidx.text.HAL_MspDeInit) refers to msp_stm32h7.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_ETH_MspInit) refers to msp_stm32h7.o(.rodata..L__const.HAL_ETH_MspInit.GPIO_InitStruct) for .L__const.HAL_ETH_MspInit.GPIO_InitStruct
    msp_stm32h7.o(.text.HAL_ETH_MspInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    msp_stm32h7.o(.text.HAL_ETH_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    msp_stm32h7.o(.text.HAL_ETH_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    msp_stm32h7.o(.ARM.exidx.text.HAL_ETH_MspInit) refers to msp_stm32h7.o(.text.HAL_ETH_MspInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_ETH_MspDeInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    msp_stm32h7.o(.text.HAL_ETH_MspDeInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    msp_stm32h7.o(.ARM.exidx.text.HAL_ETH_MspDeInit) refers to msp_stm32h7.o(.text.HAL_ETH_MspDeInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_UART_MspInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    msp_stm32h7.o(.text.HAL_UART_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    msp_stm32h7.o(.text.HAL_UART_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    msp_stm32h7.o(.ARM.exidx.text.HAL_UART_MspInit) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_UART_MspDeInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    msp_stm32h7.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to msp_stm32h7.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to msp_stm32h7.o(.bss.HAL_ADC_MspInit.DMA_HandleStruct) for HAL_ADC_MspInit.DMA_HandleStruct
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) for HAL_DMA_Init
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    msp_stm32h7.o(.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    msp_stm32h7.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to msp_stm32h7.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    msp_stm32h7.o(.text.HAL_ADC_MspDeInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    msp_stm32h7.o(.text.HAL_ADC_MspDeInit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    msp_stm32h7.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to msp_stm32h7.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    led_stm32h7.o(.text.LED_Init) refers to led_stm32h7.o(.rodata.LED_Struct) for LED_Struct
    led_stm32h7.o(.text.LED_Init) refers to led_stm32h7.o(.rodata.str1.1) for .L.str
    led_stm32h7.o(.text.LED_Init) refers to main.o(.text.assert_failed) for assert_failed
    led_stm32h7.o(.text.LED_Init) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_stm32h7.o(.text.LED_Init) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    led_stm32h7.o(.ARM.exidx.text.LED_Init) refers to led_stm32h7.o(.text.LED_Init) for [Anonymous Symbol]
    led_stm32h7.o(.text.LED_DeInit) refers to led_stm32h7.o(.rodata.LED_Struct) for LED_Struct
    led_stm32h7.o(.text.LED_DeInit) refers to led_stm32h7.o(.rodata.str1.1) for .L.str
    led_stm32h7.o(.text.LED_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    led_stm32h7.o(.text.LED_DeInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_stm32h7.o(.text.LED_DeInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    led_stm32h7.o(.ARM.exidx.text.LED_DeInit) refers to led_stm32h7.o(.text.LED_DeInit) for [Anonymous Symbol]
    led_stm32h7.o(.rodata.LED0) refers to led_stm32h7.o(.rodata.LED_Struct) for [Anonymous Symbol]
    led_stm32h7.o(.rodata.LED1) refers to led_stm32h7.o(.rodata.LED_Struct) for [Anonymous Symbol]
    led_stm32h7.o(.rodata.LED2) refers to led_stm32h7.o(.rodata.LED_Struct) for [Anonymous Symbol]
    eth_stm32h7.o(.text.ETH_IRQHandler) refers to eth_stm32h7.o(.bss.hETH) for hETH
    eth_stm32h7.o(.text.ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) for HAL_ETH_IRQHandler
    eth_stm32h7.o(.ARM.exidx.text.ETH_IRQHandler) refers to eth_stm32h7.o(.text.ETH_IRQHandler) for [Anonymous Symbol]
    eth_stm32h7.o(.text.HAL_ETH_TxCpltCallback) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_TxCpltCallback) refers to eth_stm32h7.o(.text.HAL_ETH_TxCpltCallback) for [Anonymous Symbol]
    eth_stm32h7.o(.text.HAL_ETH_RxCpltCallback) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_RxCpltCallback) refers to eth_stm32h7.o(.text.HAL_ETH_RxCpltCallback) for [Anonymous Symbol]
    eth_stm32h7.o(.text.HAL_ETH_PMTCallback) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_PMTCallback) refers to eth_stm32h7.o(.text.HAL_ETH_PMTCallback) for [Anonymous Symbol]
    eth_stm32h7.o(.text.GetVersion) refers to eth_stm32h7.o(.rodata.DriverVersion) for DriverVersion
    eth_stm32h7.o(.ARM.exidx.text.GetVersion) refers to eth_stm32h7.o(.text.GetVersion) for [Anonymous Symbol]
    eth_stm32h7.o(.text.GetCapabilities) refers to eth_stm32h7.o(.rodata.DriverCapabilities) for DriverCapabilities
    eth_stm32h7.o(.ARM.exidx.text.GetCapabilities) refers to eth_stm32h7.o(.text.GetCapabilities) for [Anonymous Symbol]
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.bss.hETH) for hETH
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.bss.DMATxDscrTab) for DMATxDscrTab
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.bss.DMARxDscrTab) for DMARxDscrTab
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.rodata.Initialize.mac_def) for Initialize.mac_def
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.bss.TX_Config) for TX_Config
    eth_stm32h7.o(.text.Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eth_stm32h7.o(.text.Initialize) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.Initialize) refers to eth_stm32h7.o(.text.Initialize) for [Anonymous Symbol]
    eth_stm32h7.o(.text.Uninitialize) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.Uninitialize) refers to eth_stm32h7.o(.bss.hETH) for hETH
    eth_stm32h7.o(.ARM.exidx.text.Uninitialize) refers to eth_stm32h7.o(.text.Uninitialize) for [Anonymous Symbol]
    eth_stm32h7.o(.text.PowerControl) refers to eth_stm32h7.o(.bss.hETH) for hETH
    eth_stm32h7.o(.text.PowerControl) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DeInit) for HAL_ETH_DeInit
    eth_stm32h7.o(.text.PowerControl) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.PowerControl) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) for HAL_ETH_Init
    eth_stm32h7.o(.text.PowerControl) refers to eth_stm32h7.o(.bss.Rx_Buff) for Rx_Buff
    eth_stm32h7.o(.text.PowerControl) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DescAssignMemory) for HAL_ETH_DescAssignMemory
    eth_stm32h7.o(.ARM.exidx.text.PowerControl) refers to eth_stm32h7.o(.text.PowerControl) for [Anonymous Symbol]
    eth_stm32h7.o(.text.GetMacAddress) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.GetMacAddress) refers to eth_stm32h7.o(.text.GetMacAddress) for [Anonymous Symbol]
    eth_stm32h7.o(.text.SetMacAddress) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.ARM.exidx.text.SetMacAddress) refers to eth_stm32h7.o(.text.SetMacAddress) for [Anonymous Symbol]
    eth_stm32h7.o(.text.SetAddressFilter) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.SetAddressFilter) refers to eth_stm32h7.o(.text.crc32_data) for crc32_data
    eth_stm32h7.o(.ARM.exidx.text.SetAddressFilter) refers to eth_stm32h7.o(.text.SetAddressFilter) for [Anonymous Symbol]
    eth_stm32h7.o(.text.SendFrame) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.SendFrame) refers to eth_stm32h7.o(.bss.hETH) for hETH
    eth_stm32h7.o(.text.SendFrame) refers to eth_stm32h7.o(.bss.TX_Buff) for TX_Buff
    eth_stm32h7.o(.text.SendFrame) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eth_stm32h7.o(.text.SendFrame) refers to eth_stm32h7.o(.bss.TX_Config) for TX_Config
    eth_stm32h7.o(.text.SendFrame) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit_IT) for HAL_ETH_Transmit_IT
    eth_stm32h7.o(.ARM.exidx.text.SendFrame) refers to eth_stm32h7.o(.text.SendFrame) for [Anonymous Symbol]
    eth_stm32h7.o(.text.ReadFrame) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.ReadFrame) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eth_stm32h7.o(.text.ReadFrame) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_BuildRxDescriptors) for HAL_ETH_BuildRxDescriptors
    eth_stm32h7.o(.ARM.exidx.text.ReadFrame) refers to eth_stm32h7.o(.text.ReadFrame) for [Anonymous Symbol]
    eth_stm32h7.o(.text.GetRxFrameSize) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.GetRxFrameSize) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataBuffer) for HAL_ETH_GetRxDataBuffer
    eth_stm32h7.o(.text.GetRxFrameSize) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataLength) for HAL_ETH_GetRxDataLength
    eth_stm32h7.o(.ARM.exidx.text.GetRxFrameSize) refers to eth_stm32h7.o(.text.GetRxFrameSize) for [Anonymous Symbol]
    eth_stm32h7.o(.ARM.exidx.text.GetRxFrameTime) refers to eth_stm32h7.o(.text.GetRxFrameTime) for [Anonymous Symbol]
    eth_stm32h7.o(.ARM.exidx.text.GetTxFrameTime) refers to eth_stm32h7.o(.text.GetTxFrameTime) for [Anonymous Symbol]
    eth_stm32h7.o(.ARM.exidx.text.ControlTimer) refers to eth_stm32h7.o(.text.ControlTimer) for [Anonymous Symbol]
    eth_stm32h7.o(.text.Control) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.Control) refers to eth_stm32h7.o(.bss.MAC_Config) for MAC_Config
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACConfig) for HAL_ETH_GetMACConfig
    eth_stm32h7.o(.text.Control) refers to eth_stm32h7.o(.bss.MAC_Filter) for MAC_Filter
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACFilterConfig) for HAL_ETH_GetMACFilterConfig
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACConfig) for HAL_ETH_SetMACConfig
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACFilterConfig) for HAL_ETH_SetMACFilterConfig
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Start_IT) for HAL_ETH_Start_IT
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop_IT) for HAL_ETH_Stop_IT
    eth_stm32h7.o(.text.Control) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetRxVLANIdentifier) for HAL_ETH_SetRxVLANIdentifier
    eth_stm32h7.o(.ARM.exidx.text.Control) refers to eth_stm32h7.o(.text.Control) for [Anonymous Symbol]
    eth_stm32h7.o(.text.PHY_Read) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.PHY_Read) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_ReadPHYRegister) for HAL_ETH_ReadPHYRegister
    eth_stm32h7.o(.ARM.exidx.text.PHY_Read) refers to eth_stm32h7.o(.text.PHY_Read) for [Anonymous Symbol]
    eth_stm32h7.o(.text.PHY_Write) refers to eth_stm32h7.o(.bss.Emac) for Emac
    eth_stm32h7.o(.text.PHY_Write) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_WritePHYRegister) for HAL_ETH_WritePHYRegister
    eth_stm32h7.o(.ARM.exidx.text.PHY_Write) refers to eth_stm32h7.o(.text.PHY_Write) for [Anonymous Symbol]
    eth_stm32h7.o(.text.crc32_data) refers to eth_stm32h7.o(.text.crc32_8bit_rev) for crc32_8bit_rev
    eth_stm32h7.o(.ARM.exidx.text.crc32_data) refers to eth_stm32h7.o(.text.crc32_data) for [Anonymous Symbol]
    eth_stm32h7.o(.ARM.exidx.text.crc32_8bit_rev) refers to eth_stm32h7.o(.text.crc32_8bit_rev) for [Anonymous Symbol]
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetVersion) for GetVersion
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetCapabilities) for GetCapabilities
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.Initialize) for Initialize
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.Uninitialize) for Uninitialize
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.PowerControl) for PowerControl
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetMacAddress) for GetMacAddress
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.SetMacAddress) for SetMacAddress
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.SetAddressFilter) for SetAddressFilter
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.SendFrame) for SendFrame
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.ReadFrame) for ReadFrame
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetRxFrameSize) for GetRxFrameSize
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetRxFrameTime) for GetRxFrameTime
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.GetTxFrameTime) for GetTxFrameTime
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.ControlTimer) for ControlTimer
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.Control) for Control
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.PHY_Read) for PHY_Read
    eth_stm32h7.o(.rodata.Driver_ETH_MAC0) refers to eth_stm32h7.o(.text.PHY_Write) for PHY_Write
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.HAL_UART_TxCpltCallback) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to com_stm32h7.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.data.hMOT1) for hMOT1
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    com_stm32h7.o(.text.HAL_UART_RxCpltCallback) refers to main.o(.text.ErrorHandler) for ErrorHandler
    com_stm32h7.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.HAL_UART_ErrorCallback) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.UART_Init) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.UART_Init) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.UART_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) for HAL_UART_DeInit
    com_stm32h7.o(.text.UART_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    com_stm32h7.o(.text.UART_Init) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode) for HAL_UARTEx_EnableFifoMode
    com_stm32h7.o(.text.UART_Init) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold) for HAL_UARTEx_SetTxFifoThreshold
    com_stm32h7.o(.text.UART_Init) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold) for HAL_UARTEx_SetRxFifoThreshold
    com_stm32h7.o(.ARM.exidx.text.UART_Init) refers to com_stm32h7.o(.text.UART_Init) for [Anonymous Symbol]
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.UART_DeInit) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.UART_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.UART_DeInit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) for HAL_UART_DeInit
    com_stm32h7.o(.ARM.exidx.text.UART_DeInit) refers to com_stm32h7.o(.text.UART_DeInit) for [Anonymous Symbol]
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT1) for hMOT1
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT2) for hMOT2
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT3) for hMOT3
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT4) for hMOT4
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT5) for hMOT5
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.data.hMOT6) for hMOT6
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.MOT_Read) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.MOT_Read) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    com_stm32h7.o(.text.MOT_Read) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    com_stm32h7.o(.text.MOT_Read) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    com_stm32h7.o(.text.MOT_Read) refers to com_stm32h7.o(.text.UART_TransmitReceive) for UART_TransmitReceive
    com_stm32h7.o(.ARM.exidx.text.MOT_Read) refers to com_stm32h7.o(.text.MOT_Read) for [Anonymous Symbol]
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART2) for hUART2
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART3) for hUART3
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART4) for hUART4
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART5) for hUART5
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART6) for hUART6
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART7) for hUART7
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.data.hUART8) for hUART8
    com_stm32h7.o(.text.UART_TransmitReceive) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.UART_TransmitReceive) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.UART_TransmitReceive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_IT) for HAL_UART_Receive_IT
    com_stm32h7.o(.text.UART_TransmitReceive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for HAL_UART_AbortReceive_IT
    com_stm32h7.o(.text.UART_TransmitReceive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for HAL_UART_Transmit_IT
    com_stm32h7.o(.text.UART_TransmitReceive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for HAL_UART_AbortTransmit_IT
    com_stm32h7.o(.ARM.exidx.text.UART_TransmitReceive) refers to com_stm32h7.o(.text.UART_TransmitReceive) for [Anonymous Symbol]
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT1) for hMOT1
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT2) for hMOT2
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT3) for hMOT3
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT4) for hMOT4
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT5) for hMOT5
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.data.hMOT6) for hMOT6
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.MOT_Write) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.MOT_Write) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    com_stm32h7.o(.text.MOT_Write) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    com_stm32h7.o(.text.MOT_Write) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    com_stm32h7.o(.text.MOT_Write) refers to com_stm32h7.o(.text.UART_TransmitReceive) for UART_TransmitReceive
    com_stm32h7.o(.ARM.exidx.text.MOT_Write) refers to com_stm32h7.o(.text.MOT_Write) for [Anonymous Symbol]
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT1) for hMOT1
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT2) for hMOT2
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT3) for hMOT3
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT4) for hMOT4
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT5) for hMOT5
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.data.hMOT6) for hMOT6
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.rodata.str1.1) for .L.str
    com_stm32h7.o(.text.MOT_Init) refers to main.o(.text.assert_failed) for assert_failed
    com_stm32h7.o(.text.MOT_Init) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    com_stm32h7.o(.text.MOT_Init) refers to rt_memclr.o(.text) for __aeabi_memclr
    com_stm32h7.o(.text.MOT_Init) refers to com_stm32h7.o(.text.UART_Init) for UART_Init
    com_stm32h7.o(.ARM.exidx.text.MOT_Init) refers to com_stm32h7.o(.text.MOT_Init) for [Anonymous Symbol]
    com_stm32h7.o(.data.hMOT1) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.data.hMOT2) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.data.hMOT3) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.data.hMOT4) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.data.hMOT5) refers to com_stm32h7.o(.data.hUART1) for hUART1
    com_stm32h7.o(.data.hMOT6) refers to com_stm32h7.o(.data.hUART1) for hUART1
    adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) refers to adc_stm32h7.o(.bss.ARM.__at_0x30046000) for ADC1_Values
    adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) refers to dfixu.o(x$fpl$dfixu) for __aeabi_d2uiz
    adc_stm32h7.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback) refers to adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) for [Anonymous Symbol]
    adc_stm32h7.o(.text.ADC_Init) refers to adc_stm32h7.o(.data.hADC1) for hADC1
    adc_stm32h7.o(.text.ADC_Init) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) for HAL_ADC_Init
    adc_stm32h7.o(.text.ADC_Init) refers to adc_stm32h7.o(.rodata.str1.1) for .L.str
    adc_stm32h7.o(.text.ADC_Init) refers to main.o(.text.ErrorHandler) for ErrorHandler
    adc_stm32h7.o(.text.ADC_Init) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) for HAL_ADCEx_Calibration_Start
    adc_stm32h7.o(.text.ADC_Init) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for HAL_ADC_ConfigChannel
    adc_stm32h7.o(.text.ADC_Init) refers to adc_stm32h7.o(.bss.ARM.__at_0x30046000) for ADC1_Values
    adc_stm32h7.o(.text.ADC_Init) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) for HAL_ADC_Start_DMA
    adc_stm32h7.o(.ARM.exidx.text.ADC_Init) refers to adc_stm32h7.o(.text.ADC_Init) for [Anonymous Symbol]
    eep_stm32h7.o(.text.EEP_Init) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock) for HAL_FLASH_Unlock
    eep_stm32h7.o(.text.EEP_Init) refers to eep_stm32h7.o(.rodata.str1.1) for .L.str
    eep_stm32h7.o(.text.EEP_Init) refers to main.o(.text.ErrorHandler) for ErrorHandler
    eep_stm32h7.o(.text.EEP_Init) refers to eeprom.o(.text.EE_Init) for EE_Init
    eep_stm32h7.o(.text.EEP_Init) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Lock) for HAL_FLASH_Lock
    eep_stm32h7.o(.ARM.exidx.text.EEP_Init) refers to eep_stm32h7.o(.text.EEP_Init) for [Anonymous Symbol]
    eep_stm32h7.o(.ARM.exidx.text.EEP_DeInit) refers to eep_stm32h7.o(.text.EEP_DeInit) for [Anonymous Symbol]
    eep_stm32h7.o(.text.EEP_ReadVariable) refers to eeprom.o(.text.EE_ReadVariable) for EE_ReadVariable
    eep_stm32h7.o(.ARM.exidx.text.EEP_ReadVariable) refers to eep_stm32h7.o(.text.EEP_ReadVariable) for [Anonymous Symbol]
    eep_stm32h7.o(.text.EEP_WriteVariable) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock) for HAL_FLASH_Unlock
    eep_stm32h7.o(.text.EEP_WriteVariable) refers to eeprom.o(.text.EE_WriteVariable) for EE_WriteVariable
    eep_stm32h7.o(.text.EEP_WriteVariable) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Lock) for HAL_FLASH_Lock
    eep_stm32h7.o(.ARM.exidx.text.EEP_WriteVariable) refers to eep_stm32h7.o(.text.EEP_WriteVariable) for [Anonymous Symbol]
    fifo.o(.text.FIFO_InitQueue) refers to fifo.o(.rodata.str1.1) for .L.str
    fifo.o(.text.FIFO_InitQueue) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    fifo.o(.ARM.exidx.text.FIFO_InitQueue) refers to fifo.o(.text.FIFO_InitQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_FlushQueue) refers to fifo.o(.rodata.str1.1) for .L.str
    fifo.o(.text.FIFO_FlushQueue) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    fifo.o(.ARM.exidx.text.FIFO_FlushQueue) refers to fifo.o(.text.FIFO_FlushQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_GetCount) refers to fifo.o(.rodata.str1.1) for .L.str
    fifo.o(.text.FIFO_GetCount) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    fifo.o(.ARM.exidx.text.FIFO_GetCount) refers to fifo.o(.text.FIFO_GetCount) for [Anonymous Symbol]
    fifo.o(.text.FIFO_GetAvailable) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    fifo.o(.ARM.exidx.text.FIFO_GetAvailable) refers to fifo.o(.text.FIFO_GetAvailable) for [Anonymous Symbol]
    fifo.o(.text.FIFO_IsEmpty) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    fifo.o(.ARM.exidx.text.FIFO_IsEmpty) refers to fifo.o(.text.FIFO_IsEmpty) for [Anonymous Symbol]
    fifo.o(.text.FIFO_IsFull) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    fifo.o(.ARM.exidx.text.FIFO_IsFull) refers to fifo.o(.text.FIFO_IsFull) for [Anonymous Symbol]
    fifo.o(.text.FIFO_GetQueue) refers to fifo.o(.text.FIFO_IsEmpty) for FIFO_IsEmpty
    fifo.o(.ARM.exidx.text.FIFO_GetQueue) refers to fifo.o(.text.FIFO_GetQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_PeekQueue) refers to fifo.o(.text.FIFO_IsEmpty) for FIFO_IsEmpty
    fifo.o(.ARM.exidx.text.FIFO_PeekQueue) refers to fifo.o(.text.FIFO_PeekQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_PutQueue) refers to fifo.o(.text.FIFO_IsFull) for FIFO_IsFull
    fifo.o(.ARM.exidx.text.FIFO_PutQueue) refers to fifo.o(.text.FIFO_PutQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_PushQueue) refers to fifo.o(.rodata.str1.1) for .L.str
    fifo.o(.text.FIFO_PushQueue) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    fifo.o(.text.FIFO_PushQueue) refers to fifo.o(.text.FIFO_GetAvailable) for FIFO_GetAvailable
    fifo.o(.ARM.exidx.text.FIFO_PushQueue) refers to fifo.o(.text.FIFO_PushQueue) for [Anonymous Symbol]
    fifo.o(.text.FIFO_PullQueue) refers to fifo.o(.rodata.str1.1) for .L.str
    fifo.o(.text.FIFO_PullQueue) refers to main.o(.text.__aeabi_assert) for __aeabi_assert
    fifo.o(.text.FIFO_PullQueue) refers to fifo.o(.text.FIFO_GetCount) for FIFO_GetCount
    fifo.o(.ARM.exidx.text.FIFO_PullQueue) refers to fifo.o(.text.FIFO_PullQueue) for [Anonymous Symbol]
    crc.o(.text.CRC_Calculate16) refers to crc.o(.rodata.CRCHI) for CRCHI
    crc.o(.text.CRC_Calculate16) refers to crc.o(.rodata.CRCLO) for CRCLO
    crc.o(.ARM.exidx.text.CRC_Calculate16) refers to crc.o(.text.CRC_Calculate16) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MODBUS_GetStatus) refers to modbus.o(.text.MODBUS_GetStatus) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MODBUS_SetStatus) refers to modbus.o(.text.MODBUS_SetStatus) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_GetRegister) refers to modbus.o(.rodata.R_Registers) for R_Registers
    modbus.o(.ARM.exidx.text.MODBUS_GetRegister) refers to modbus.o(.text.MODBUS_GetRegister) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue) for MODBUS_SetRegister.lValue
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.1) for MODBUS_SetRegister.lValue.1
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.2) for MODBUS_SetRegister.lValue.2
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.3) for MODBUS_SetRegister.lValue.3
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.4) for MODBUS_SetRegister.lValue.4
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.5) for MODBUS_SetRegister.lValue.5
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.bss.MODBUS_SetRegister.lValue.6) for MODBUS_SetRegister.lValue.6
    modbus.o(.text.MODBUS_SetRegister) refers to modbus.o(.rodata.W_Registers) for W_Registers
    modbus.o(.ARM.exidx.text.MODBUS_SetRegister) refers to modbus.o(.text.MODBUS_SetRegister) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.__NVIC_SystemReset) refers to modbus.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ReadCoilStatus) for MODBUS_ReadCoilStatus
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ReadInputStatus) for MODBUS_ReadInputStatus
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ReadHoldingRegisters) for MODBUS_ReadHoldingRegisters
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ReadInputRegisters) for MODBUS_ReadInputRegisters
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ForceSingleCoil) for MODBUS_ForceSingleCoil
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_PresetSingleRegister) for MODBUS_PresetSingleRegister
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ForceMultipleCoils) for MODBUS_ForceMultipleCoils
    modbus.o(.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_PresetMultipleRegisters) for MODBUS_PresetMultipleRegisters
    modbus.o(.ARM.exidx.text.MODBUS_ReplyToQuery) refers to modbus.o(.text.MODBUS_ReplyToQuery) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ReadCoilStatus) refers to modbus.o(.text.MODBUS_GetStatus) for MODBUS_GetStatus
    modbus.o(.ARM.exidx.text.MODBUS_ReadCoilStatus) refers to modbus.o(.text.MODBUS_ReadCoilStatus) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ReadInputStatus) refers to modbus.o(.text.MODBUS_GetStatus) for MODBUS_GetStatus
    modbus.o(.ARM.exidx.text.MODBUS_ReadInputStatus) refers to modbus.o(.text.MODBUS_ReadInputStatus) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ReadHoldingRegisters) refers to modbus.o(.text.MODBUS_GetRegister) for MODBUS_GetRegister
    modbus.o(.ARM.exidx.text.MODBUS_ReadHoldingRegisters) refers to modbus.o(.text.MODBUS_ReadHoldingRegisters) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ReadInputRegisters) refers to modbus.o(.text.MODBUS_GetRegister) for MODBUS_GetRegister
    modbus.o(.ARM.exidx.text.MODBUS_ReadInputRegisters) refers to modbus.o(.text.MODBUS_ReadInputRegisters) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ForceSingleCoil) refers to modbus.o(.text.MODBUS_SetStatus) for MODBUS_SetStatus
    modbus.o(.ARM.exidx.text.MODBUS_ForceSingleCoil) refers to modbus.o(.text.MODBUS_ForceSingleCoil) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_PresetSingleRegister) refers to modbus.o(.text.MODBUS_SetRegister) for MODBUS_SetRegister
    modbus.o(.ARM.exidx.text.MODBUS_PresetSingleRegister) refers to modbus.o(.text.MODBUS_PresetSingleRegister) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_ForceMultipleCoils) refers to modbus.o(.text.MODBUS_SetStatus) for MODBUS_SetStatus
    modbus.o(.ARM.exidx.text.MODBUS_ForceMultipleCoils) refers to modbus.o(.text.MODBUS_ForceMultipleCoils) for [Anonymous Symbol]
    modbus.o(.text.MODBUS_PresetMultipleRegisters) refers to modbus.o(.text.MODBUS_SetRegister) for MODBUS_SetRegister
    modbus.o(.ARM.exidx.text.MODBUS_PresetMultipleRegisters) refers to modbus.o(.text.MODBUS_PresetMultipleRegisters) for [Anonymous Symbol]
    eeprom.o(.text.EE_Init) refers to eeprom.o(.text.EE_VerifyPageFullyErased) for EE_VerifyPageFullyErased
    eeprom.o(.text.EE_Init) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for HAL_FLASHEx_Erase
    eeprom.o(.text.EE_Init) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) for HAL_FLASH_Program
    eeprom.o(.text.EE_Init) refers to eeprom.o(.text.EE_Format) for EE_Format
    eeprom.o(.text.EE_Init) refers to eeprom.o(.bss.DataVar) for DataVar
    eeprom.o(.text.EE_Init) refers to eeprom.o(.text.EE_ReadVariable) for EE_ReadVariable
    eeprom.o(.text.EE_Init) refers to eeprom.o(.text.EE_VerifyPageFullWriteVariable) for EE_VerifyPageFullWriteVariable
    eeprom.o(.ARM.exidx.text.EE_Init) refers to eeprom.o(.text.EE_Init) for [Anonymous Symbol]
    eeprom.o(.ARM.exidx.text.EE_VerifyPageFullyErased) refers to eeprom.o(.text.EE_VerifyPageFullyErased) for [Anonymous Symbol]
    eeprom.o(.text.EE_Format) refers to eeprom.o(.text.EE_VerifyPageFullyErased) for EE_VerifyPageFullyErased
    eeprom.o(.text.EE_Format) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for HAL_FLASHEx_Erase
    eeprom.o(.text.EE_Format) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) for HAL_FLASH_Program
    eeprom.o(.ARM.exidx.text.EE_Format) refers to eeprom.o(.text.EE_Format) for [Anonymous Symbol]
    eeprom.o(.text.EE_ReadVariable) refers to eeprom.o(.text.EE_FindValidPage) for EE_FindValidPage
    eeprom.o(.ARM.exidx.text.EE_ReadVariable) refers to eeprom.o(.text.EE_ReadVariable) for [Anonymous Symbol]
    eeprom.o(.text.EE_VerifyPageFullWriteVariable) refers to eeprom.o(.text.EE_FindValidPage) for EE_FindValidPage
    eeprom.o(.text.EE_VerifyPageFullWriteVariable) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) for HAL_FLASH_Program
    eeprom.o(.ARM.exidx.text.EE_VerifyPageFullWriteVariable) refers to eeprom.o(.text.EE_VerifyPageFullWriteVariable) for [Anonymous Symbol]
    eeprom.o(.ARM.exidx.text.EE_FindValidPage) refers to eeprom.o(.text.EE_FindValidPage) for [Anonymous Symbol]
    eeprom.o(.text.EE_WriteVariable) refers to eeprom.o(.text.EE_VerifyPageFullWriteVariable) for EE_VerifyPageFullWriteVariable
    eeprom.o(.text.EE_WriteVariable) refers to eeprom.o(.text.EE_PageTransfer) for EE_PageTransfer
    eeprom.o(.ARM.exidx.text.EE_WriteVariable) refers to eeprom.o(.text.EE_WriteVariable) for [Anonymous Symbol]
    eeprom.o(.text.EE_PageTransfer) refers to eeprom.o(.rodata.cst32) for .L__const.EE_PageTransfer.receive
    eeprom.o(.text.EE_PageTransfer) refers to eeprom.o(.text.EE_FindValidPage) for EE_FindValidPage
    eeprom.o(.text.EE_PageTransfer) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) for HAL_FLASH_Program
    eeprom.o(.text.EE_PageTransfer) refers to eeprom.o(.text.EE_VerifyPageFullWriteVariable) for EE_VerifyPageFullWriteVariable
    eeprom.o(.text.EE_PageTransfer) refers to eeprom.o(.bss.DataVar) for DataVar
    eeprom.o(.text.EE_PageTransfer) refers to eeprom.o(.text.EE_ReadVariable) for EE_ReadVariable
    eeprom.o(.text.EE_PageTransfer) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock) for HAL_FLASH_Unlock
    eeprom.o(.text.EE_PageTransfer) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for HAL_FLASHEx_Erase
    eeprom.o(.ARM.exidx.text.EE_PageTransfer) refers to eeprom.o(.text.EE_PageTransfer) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.evr_initialize) for evr_initialize
    rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    rtx_lib.o(.ARM.exidx.text.evr_initialize) refers to rtx_lib.o(.text.evr_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.thread.mpi) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    phy_lan8742a.o(.text.GetVersion) refers to phy_lan8742a.o(.rodata.DriverVersion) for DriverVersion
    phy_lan8742a.o(.ARM.exidx.text.GetVersion) refers to phy_lan8742a.o(.text.GetVersion) for [Anonymous Symbol]
    phy_lan8742a.o(.text.Initialize) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.Initialize) refers to phy_lan8742a.o(.text.Initialize) for [Anonymous Symbol]
    phy_lan8742a.o(.text.Uninitialize) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.Uninitialize) refers to phy_lan8742a.o(.text.Uninitialize) for [Anonymous Symbol]
    phy_lan8742a.o(.text.PowerControl) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.PowerControl) refers to phy_lan8742a.o(.text.PowerControl) for [Anonymous Symbol]
    phy_lan8742a.o(.text.SetInterface) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.SetInterface) refers to phy_lan8742a.o(.text.SetInterface) for [Anonymous Symbol]
    phy_lan8742a.o(.text.SetMode) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.SetMode) refers to phy_lan8742a.o(.text.SetMode) for [Anonymous Symbol]
    phy_lan8742a.o(.text.GetLinkState) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.GetLinkState) refers to phy_lan8742a.o(.text.GetLinkState) for [Anonymous Symbol]
    phy_lan8742a.o(.text.GetLinkInfo) refers to phy_lan8742a.o(.bss.PHY) for PHY
    phy_lan8742a.o(.ARM.exidx.text.GetLinkInfo) refers to phy_lan8742a.o(.text.GetLinkInfo) for [Anonymous Symbol]
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.GetVersion) for GetVersion
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.Initialize) for Initialize
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.Uninitialize) for Uninitialize
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.PowerControl) for PowerControl
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.SetInterface) for SetInterface
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.SetMode) for SetMode
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.GetLinkState) for GetLinkState
    phy_lan8742a.o(.rodata.Driver_ETH_PHY0) refers to phy_lan8742a.o(.text.GetLinkInfo) for GetLinkInfo
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text._sys_open) refers to strcmpv7em.o(.text) for strcmp
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.index) for stdout_putchar.index
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.buffer) for stdout_putchar.buffer
    retarget_io.o(.text.stdout_putchar) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_Init) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32h7xx_hal.o(.text.HAL_Init) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32h7xx_hal.o(.text.HAL_Init) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal.o(.text.HAL_Init) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    stm32h7xx_hal.o(.text.HAL_Init) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal.o(.text.HAL_Init) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32h7xx_hal.o(.text.HAL_Init) refers to msp_stm32h7.o(.text.HAL_MspInit) for HAL_MspInit
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32h7xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_InitTick) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32h7xx_hal.o(.text.HAL_InitTick) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal.o(.text.HAL_InitTick) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32h7xx_hal.o(.text.HAL_InitTick) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32h7xx_hal.o(.text.HAL_InitTick) refers to stm32h7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32h7xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32h7xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_DeInit) refers to msp_stm32h7.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32h7xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32h7xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_IncTick) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32h7xx_hal.o(.text.HAL_IncTick) refers to stm32h7xx_hal.o(.bss.uwTick) for uwTick
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32h7xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_GetTick) refers to stm32h7xx_hal.o(.bss.uwTick) for uwTick
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32h7xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_GetTickPrio) refers to stm32h7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32h7xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32h7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32h7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32h7xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32h7xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_GetTickFreq) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32h7xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal.o(.text.HAL_Delay) refers to stm32h7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32h7xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32h7xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32h7xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32h7xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32h7xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32h7xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32h7xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32h7xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_ETHInterfaceSelect) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_AnalogSwitchConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_AnalogSwitchConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_AnalogSwitchConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_AnalogSwitchConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableBOOST) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableBOOST) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableBOOST) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableBOOST) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CM7BootAddConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CM7BootAddConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CM7BootAddConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_CM7BootAddConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CM4BootAddConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CM4BootAddConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CM4BootAddConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_CM4BootAddConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableCM7BOOT) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableCM7BOOT) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableCM7BOOT) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableCM7BOOT) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableCM4BOOT) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableCM4BOOT) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableCM4BOOT) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableCM4BOOT) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32h7xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32h7xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOSpeedOptimize) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableIOSpeedOptimize) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOSpeedOptimize) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableIOSpeedOptimize) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeSelect) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeSelect) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CompensationCodeSelect) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeSelect) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CompensationCodeConfig) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGSleepMode) refers to stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGSleepMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGSleepMode) refers to stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGSleepMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGStopMode) refers to stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGStopMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGStopMode) refers to stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGStopMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGStandbyMode) refers to stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGStandbyMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGStandbyMode) refers to stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGStandbyMode) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_SetFMCMemorySwappingConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_SetFMCMemorySwappingConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_SetFMCMemorySwappingConfig) refers to stm32h7xx_hal.o(.text.HAL_SetFMCMemorySwappingConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetFMCMemorySwappingConfig) refers to stm32h7xx_hal.o(.text.HAL_GetFMCMemorySwappingConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_EdgeConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_EdgeConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_EdgeConfig) refers to stm32h7xx_hal.o(.text.HAL_EXTI_EdgeConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_GenerateSWInterrupt) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_GenerateSWInterrupt) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_GenerateSWInterrupt) refers to stm32h7xx_hal.o(.text.HAL_EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_D1_ClearFlag) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_D1_ClearFlag) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D1_ClearFlag) refers to stm32h7xx_hal.o(.text.HAL_EXTI_D1_ClearFlag) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_D2_ClearFlag) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_D2_ClearFlag) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D2_ClearFlag) refers to stm32h7xx_hal.o(.text.HAL_EXTI_D2_ClearFlag) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_D1_EventInputConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_D1_EventInputConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D1_EventInputConfig) refers to stm32h7xx_hal.o(.text.HAL_EXTI_D1_EventInputConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_D2_EventInputConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_D2_EventInputConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D2_EventInputConfig) refers to stm32h7xx_hal.o(.text.HAL_EXTI_D2_EventInputConfig) for [Anonymous Symbol]
    stm32h7xx_hal.o(.text.HAL_EXTI_D3_EventInputConfig) refers to stm32h7xx_hal.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal.o(.text.HAL_EXTI_D3_EventInputConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D3_EventInputConfig) refers to stm32h7xx_hal.o(.text.HAL_EXTI_D3_EventInputConfig) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to msp_stm32h7.o(.text.HAL_ADC_MspInit) for HAL_ADC_MspInit
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsDeepPowerDownEnabled) for LL_ADC_IsDeepPowerDownEnabled
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableDeepPowerDown) for LL_ADC_DisableDeepPowerDown
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsInternalRegulatorEnabled) for LL_ADC_IsInternalRegulatorEnabled
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableInternalRegulator) for LL_ADC_EnableInternalRegulator
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonClock) for LL_ADC_SetCommonClock
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode) for ADC_ConfigureBoostMode
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Init) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsDeepPowerDownEnabled) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsDeepPowerDownEnabled) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableDeepPowerDown) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableDeepPowerDown) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsInternalRegulatorEnabled) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsInternalRegulatorEnabled) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableInternalRegulator) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetCommonClock) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonClock) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_IsConversionOngoing) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for HAL_RCCEx_GetPeriphCLKFreq
    stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_ConfigureBoostMode) refers to stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to msp_stm32h7.o(.text.HAL_ADC_MspDeInit) for HAL_ADC_MspDeInit
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsDisableOngoing) for LL_ADC_IsDisableOngoing
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StopConversion) for LL_ADC_REG_StopConversion
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_StopConversion) for LL_ADC_INJ_StopConversion
    stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_ConversionStop) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_Disable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsDisableOngoing) for LL_ADC_IsDisableOngoing
    stm32h7xx_hal_adc.o(.text.ADC_Disable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc.o(.text.ADC_Disable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_Disable) for LL_ADC_Disable
    stm32h7xx_hal_adc.o(.text.ADC_Disable) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_Disable) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Start) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetMultimode) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_Enable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc.o(.text.ADC_Enable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_Enable) for LL_ADC_Enable
    stm32h7xx_hal_adc.o(.text.ADC_Enable) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc.o(.text.ADC_Enable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_Enable) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultiDMATransfer) for LL_ADC_GetMultiDMATransfer
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for LL_ADC_REG_IsTriggerSourceSWStart
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetMultiDMATransfer) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultiDMATransfer) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_IsTriggerSourceSWStart) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetDataTransferMode) for LL_ADC_REG_SetDataTransferMode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for LL_ADC_REG_IsTriggerSourceSWStart
    stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.ADC_DMAError) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAError) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_SetDataTransferMode) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetDataTransferMode) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetValue) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_GetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback) for HAL_ADCEx_EndOfSamplingCallback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for LL_ADC_REG_IsTriggerSourceSWStart
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart) for LL_ADC_INJ_IsTriggerSourceSWStart
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for HAL_ADCEx_InjectedConvCpltCallback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for HAL_ADC_LevelOutOfWindowCallback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback) for HAL_ADCEx_LevelOutOfWindow2Callback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback) for HAL_ADCEx_LevelOutOfWindow3Callback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultiDMATransfer) for LL_ADC_GetMultiDMATransfer
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback) for HAL_ADCEx_InjectedQueueOverflowCallback
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_IsTriggerSourceSWStart) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetResolution) for LL_ADC_GetResolution
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetSequencerRanks) for LL_ADC_REG_SetSequencerRanks
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSamplingTime) for LL_ADC_SetChannelSamplingTime
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffset) for LL_ADC_SetOffset
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffsetSignedSaturation) for LL_ADC_SetOffsetSignedSaturation
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetDataRightShift) for LL_ADC_SetDataRightShift
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSingleDiff) for LL_ADC_SetChannelSingleDiff
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetCommonPathInternalCh) for LL_ADC_GetCommonPathInternalCh
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonPathInternalCh) for LL_ADC_SetCommonPathInternalCh
    stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetResolution) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetResolution) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetSequencerRanks) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSamplingTime) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetOffset) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffset) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetOffsetSignedSaturation) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffsetSignedSaturation) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetDataRightShift) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetDataRightShift) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetChannelSingleDiff) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSingleDiff) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetCommonPathInternalCh) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetCommonPathInternalCh) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonPathInternalCh) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_GetResolution) for LL_ADC_GetResolution
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetAnalogWDMonitChannels) for LL_ADC_SetAnalogWDMonitChannels
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD1) for LL_ADC_ClearFlag_AWD1
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD1) for LL_ADC_EnableIT_AWD1
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD1) for LL_ADC_DisableIT_AWD1
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD2) for LL_ADC_ClearFlag_AWD2
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD2) for LL_ADC_EnableIT_AWD2
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD2) for LL_ADC_DisableIT_AWD2
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD3) for LL_ADC_ClearFlag_AWD3
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD3) for LL_ADC_EnableIT_AWD3
    stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD3) for LL_ADC_DisableIT_AWD3
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetAnalogWDMonitChannels) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_SetAnalogWDMonitChannels) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD1) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD1) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD1) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD1) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD1) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD1) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD2) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD2) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD2) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD2) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD2) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD2) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD3) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD3) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD3) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD3) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD3) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD3) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetState) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetState) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetError) refers to stm32h7xx_hal_adc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc.o(.text.HAL_ADC_GetError) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError) refers to stm32h7xx_hal_adc.o(.text.HAL_ADC_GetError) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsDisableOngoing) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_IsDisableOngoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StopConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_StopConversion) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_StopConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_Enable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_Enable) for [Anonymous Symbol]
    stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_Disable) refers to stm32h7xx_hal_adc.o(.text.LL_ADC_Disable) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_StartCalibration) for LL_ADC_StartCalibration
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsCalibrationOnGoing) for LL_ADC_IsCalibrationOnGoing
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_Start) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_StartCalibration) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_StartCalibration) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsCalibrationOnGoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationOffsetFactor) for LL_ADC_GetCalibrationOffsetFactor
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCalibrationOffsetFactor) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationOffsetFactor) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StopConversion) for LL_ADC_REG_StopConversion
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationLinearFactor) for LL_ADC_GetCalibrationLinearFactor
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_GetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_StopConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StopConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCalibrationLinearFactor) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationLinearFactor) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationOffsetFactor) for LL_ADC_SetCalibrationOffsetFactor
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_IsConversionOngoing) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCalibrationOffsetFactor) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationOffsetFactor) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationLinearFactor) for LL_ADC_SetCalibrationLinearFactor
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StopConversion) for LL_ADC_REG_StopConversion
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_SetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCalibrationLinearFactor) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationLinearFactor) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_FactorLoad) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue) for HAL_ADCEx_LinearCalibration_SetValue
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_FactorLoad) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_FactorLoad) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_GetTrigAuto) for LL_ADC_INJ_GetTrigAuto
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_StartConversion) for LL_ADC_INJ_StartConversion
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetMultimode) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetMultimode) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_GetTrigAuto) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_GetTrigAuto) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_StartConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_StartConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart) for LL_ADC_INJ_IsTriggerSourceSWStart
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for LL_ADC_REG_IsTriggerSourceSWStart
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_IsTriggerSourceSWStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_IsTriggerSourceSWStart) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsTriggerSourceSWStart) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetMultimode) for LL_ADC_GetMultimode
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_GetTrigAuto) for LL_ADC_INJ_GetTrigAuto
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_StartConversion) for LL_ADC_INJ_StartConversion
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedQueueOverflowCallback) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow2Callback) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow3Callback) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EndOfSamplingCallback) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_IT) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetResolution) for LL_ADC_GetResolution
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSamplingTime) for LL_ADC_SetChannelSamplingTime
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffset) for LL_ADC_SetOffset
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffsetSignedSaturation) for LL_ADC_SetOffsetSignedSaturation
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetOffsetChannel) for LL_ADC_GetOffsetChannel
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSingleDiff) for LL_ADC_SetChannelSingleDiff
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCommonPathInternalCh) for LL_ADC_GetCommonPathInternalCh
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCommonPathInternalCh) for LL_ADC_SetCommonPathInternalCh
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetResolution) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetResolution) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSamplingTime) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetOffset) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffset) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetOffsetSignedSaturation) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffsetSignedSaturation) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetOffsetChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetOffsetChannel) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetChannelSingleDiff) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSingleDiff) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCommonPathInternalCh) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCommonPathInternalCh) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCommonPathInternalCh) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing) for LL_ADC_INJ_IsConversionOngoing
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_SetQueueMode) for LL_ADC_INJ_SetQueueMode
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_SetQueueMode) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_SetQueueMode) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_DisableInternalRegulator) for LL_ADC_DisableInternalRegulator
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableVoltageRegulator) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_DisableInternalRegulator) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_DisableInternalRegulator) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to stm32h7xx_hal_adc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_EnableDeepPowerDown) for LL_ADC_EnableDeepPowerDown
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) for [Anonymous Symbol]
    stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_EnableDeepPowerDown) refers to stm32h7xx_hal_adc_ex.o(.text.LL_ADC_EnableDeepPowerDown) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32h7xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32h7xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.SysTick_Config) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32h7xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32h7xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32h7xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32h7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32h7xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32h7xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32h7xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32h7xx_hal_cortex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_GetCurrentCPUID) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask) for DMA_CalcDMAMUXChannelBaseAndMask
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask) for DMA_CalcDMAMUXRequestGenBaseAndMask
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32h7xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) refers to stm32h7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset) for DMA_CalcBaseAndBitshift.flagBitshiftOffset
    stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcDMAMUXChannelBaseAndMask) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcDMAMUXRequestGenBaseAndMask) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask) for DMA_CalcDMAMUXChannelBaseAndMask
    stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask) for DMA_CalcDMAMUXRequestGenBaseAndMask
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32h7xx_hal_dma.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32h7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32h7xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32h7xx_hal_dma.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32h7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32h7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32h7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32h7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) for [Anonymous Symbol]
    stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler) refers to stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to msp_stm32h7.o(.text.HAL_ETH_MspInit) for HAL_ETH_MspInit
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect) for HAL_SYSCFG_ETHInterfaceSelect
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal_eth.o(.text.ETH_MAC_MDIO_ClkConfig) for ETH_MAC_MDIO_ClkConfig
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig) for ETH_MACDMAConfig
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal_eth.o(.text.ETH_DMATxDescListInit) for ETH_DMATxDescListInit
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) refers to stm32h7xx_hal_eth.o(.text.ETH_DMARxDescListInit) for ETH_DMARxDescListInit
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Init) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Init) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MspInit) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.ETH_MAC_MDIO_ClkConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_MAC_MDIO_ClkConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_MAC_MDIO_ClkConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetMACConfig) for ETH_SetMACConfig
    stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetDMAConfig) for ETH_SetDMAConfig
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_MACDMAConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_DMATxDescListInit) refers to stm32h7xx_hal_eth.o(.text.ETH_DMATxDescListInit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_DMARxDescListInit) refers to stm32h7xx_hal_eth.o(.text.ETH_DMARxDescListInit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_DeInit) refers to msp_stm32h7.o(.text.HAL_ETH_MspDeInit) for HAL_ETH_MspDeInit
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DeInit) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MspDeInit) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DescAssignMemory) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DescAssignMemory) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Start) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Start) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Start_IT) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Stop) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Stop_IT) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit) refers to stm32h7xx_hal_eth.o(.text.ETH_Prepare_Tx_Descriptors) for ETH_Prepare_Tx_Descriptors
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Transmit) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_Prepare_Tx_Descriptors) refers to stm32h7xx_hal_eth.o(.text.ETH_Prepare_Tx_Descriptors) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit_IT) refers to stm32h7xx_hal_eth.o(.text.ETH_Prepare_Tx_Descriptors) for ETH_Prepare_Tx_Descriptors
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Transmit_IT) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit_IT) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_IsRxDataAvailable) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataBuffer) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable) for HAL_ETH_IsRxDataAvailable
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataBuffer) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataBuffer) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataLength) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable) for HAL_ETH_IsRxDataAvailable
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataLength) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataLength) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataInfo) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable) for HAL_ETH_IsRxDataAvailable
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataInfo) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataInfo) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_BuildRxDescriptors) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_BuildRxDescriptors) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to eth_stm32h7.o(.text.HAL_ETH_RxCpltCallback) for HAL_ETH_RxCpltCallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to eth_stm32h7.o(.text.HAL_ETH_TxCpltCallback) for HAL_ETH_TxCpltCallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DMAErrorCallback) for HAL_ETH_DMAErrorCallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_MACErrorCallback) for HAL_ETH_MACErrorCallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to eth_stm32h7.o(.text.HAL_ETH_PMTCallback) for HAL_ETH_PMTCallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_EEECallback) for HAL_ETH_EEECallback
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_WakeUpCallback) for HAL_ETH_WakeUpCallback
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_IRQHandler) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_RxCpltCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_RxCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_TxCpltCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_TxCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DMAErrorCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_DMAErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MACErrorCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_MACErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_PMTCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_PMTCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_EEECallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_EEECallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_WakeUpCallback) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_WakeUpCallback) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_ReadPHYRegister) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_ReadPHYRegister) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_ReadPHYRegister) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_WritePHYRegister) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_WritePHYRegister) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_WritePHYRegister) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetDMAConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetDMAConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetMACConfig) for ETH_SetMACConfig
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMACConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_SetMACConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetMACConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_SetDMAConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetDMAConfig) for ETH_SetDMAConfig
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetDMAConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetDMAConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_SetDMAConfig) refers to stm32h7xx_hal_eth.o(.text.ETH_SetDMAConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMDIOClockRange) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMDIOClockRange) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMDIOClockRange) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMACFilterConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACFilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACFilterConfig) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACFilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetSourceMACAddrMatch) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetSourceMACAddrMatch) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetHashTable) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetHashTable) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetRxVLANIdentifier) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetRxVLANIdentifier) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_EnterPowerDownMode) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_EnterPowerDownMode) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_ExitPowerDownMode) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_ExitPowerDownMode) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetWakeUpFilter) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_SetWakeUpFilter) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetState) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetError) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetError) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetDMAError) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetDMAError) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACError) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACError) for [Anonymous Symbol]
    stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACWakeUpSource) refers to stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACWakeUpSource) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableARPOffload) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableARPOffload) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableARPOffload) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableARPOffload) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetARPAddressMatch) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetARPAddressMatch) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetL4FilterConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetL4FilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetL4FilterConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetL4FilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetL3FilterConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetL3FilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetL3FilterConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetL3FilterConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableL3L4Filtering) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableL3L4Filtering) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableL3L4Filtering) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableL3L4Filtering) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetRxVLANConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetRxVLANConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetRxVLANConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetRxVLANConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetVLANHashTable) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetVLANHashTable) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetTxVLANConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetTxVLANConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetTxVLANConfig) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetTxVLANConfig) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetTxVLANIdentifier) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetTxVLANIdentifier) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableVLANProcessing) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableVLANProcessing) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableVLANProcessing) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableVLANProcessing) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnterLPIMode) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnterLPIMode) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_ExitLPIMode) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_ExitLPIMode) for [Anonymous Symbol]
    stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetMACLPIEvent) refers to stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetMACLPIEvent) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32h7xx_hal_flash.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32h7xx_hal_flash.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) for FLASH_CRC_WaitForLastOperation
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation) for FLASH_OB_WaitForLastOperation
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_CRC_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_OB_WaitForLastOperation) refers to stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation) for [Anonymous Symbol]
    stm32h7xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32h7xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) for FLASH_OB_EnableWRP
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) for FLASH_OB_DisableWRP
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_RDPConfig) for FLASH_OB_RDPConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) for FLASH_OB_UserConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_PCROPConfig) for FLASH_OB_PCROPConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) for FLASH_OB_BOR_LevelConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BootAddConfig) for FLASH_OB_BootAddConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_CM4BootAddConfig) for FLASH_OB_CM4BootAddConfig
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_SecureAreaConfig) for FLASH_OB_SecureAreaConfig
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnableWRP) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisableWRP) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_RDPConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_RDPConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_PCROPConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_PCROPConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_PCROPConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_PCROPConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BOR_LevelConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BootAddConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BootAddConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BootAddConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BootAddConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_CM4BootAddConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_CM4BootAddConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_CM4BootAddConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_CM4BootAddConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_SecureAreaConfig) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_SecureAreaConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_SecureAreaConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_SecureAreaConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP) for FLASH_OB_GetRDP
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetUser) for FLASH_OB_GetUser
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR) for FLASH_OB_GetBOR
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP) for FLASH_OB_GetWRP
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetPCROP) for FLASH_OB_GetPCROP
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetSecureArea) for FLASH_OB_GetSecureArea
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBootAdd) for FLASH_OB_GetBootAdd
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetCM4BootAdd) for FLASH_OB_GetCM4BootAdd
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBOR) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetPCROP) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetPCROP) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetSecureArea) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetSecureArea) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBootAdd) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBootAdd) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetCM4BootAdd) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetCM4BootAdd) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Unlock_Bank1) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Unlock_Bank1) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Lock_Bank1) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Lock_Bank1) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Unlock_Bank2) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Unlock_Bank2) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Lock_Bank2) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Lock_Bank2) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation) for FLASH_OB_WaitForLastOperation
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_AddSector) for FLASH_CRC_AddSector
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_SelectAddress) for FLASH_CRC_SelectAddress
    stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation) for FLASH_CRC_WaitForLastOperation
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ComputeCRC) refers to stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_AddSector) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_AddSector) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_CRC_AddSector) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_AddSector) for [Anonymous Symbol]
    stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_SelectAddress) refers to stm32h7xx_hal_flash_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_SelectAddress) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_CRC_SelectAddress) refers to stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_SelectAddress) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) refers to stm32h7xx_hal_gpio.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Take) refers to stm32h7xx_hal_hsem.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Take) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_Take) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Take) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FastTake) refers to stm32h7xx_hal_hsem.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FastTake) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_FastTake) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FastTake) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_IsSemTaken) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IsSemTaken) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Release) refers to stm32h7xx_hal_hsem.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Release) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_Release) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Release) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ReleaseAll) refers to stm32h7xx_hal_hsem.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ReleaseAll) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_ReleaseAll) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ReleaseAll) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_SetClearKey) refers to stm32h7xx_hal_hsem.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_SetClearKey) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_SetClearKey) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_SetClearKey) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_GetClearKey) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_GetClearKey) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_ActivateNotification) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ActivateNotification) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_DeactivateNotification) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_DeactivateNotification) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IRQHandler) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FreeCallback) for HAL_HSEM_FreeCallback
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_IRQHandler) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_FreeCallback) refers to stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FreeCallback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) refers to stm32h7xx_hal_pwr.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) refers to stm32h7xx_hal_pwr.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) refers to stm32h7xx_hal_pwr.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32h7xx_hal_pwr.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32h7xx_hal_pwr.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigSupply) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetSupplyConfig) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetSupplyConfig) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlStopModeVoltageScaling) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlStopModeVoltageScaling) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlStopModeVoltageScaling) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlStopModeVoltageScaling) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetStopModeVoltageRange) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetStopModeVoltageRange) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOPMode) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearPendingEvent) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearPendingEvent) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearPendingEvent) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTANDBYMode) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTANDBYMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTANDBYMode) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTANDBYMode) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigD3Domain) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigD3Domain) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigD3Domain) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigD3Domain) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearDomainFlags) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearDomainFlags) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearDomainFlags) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearDomainFlags) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_HoldCore) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_HoldCore) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_HoldCore) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_HoldCore) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ReleaseCore) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ReleaseCore) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ReleaseCore) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ReleaseCore) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableWakeUpPin) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableWakeUpPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableWakeUpPin) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableWakeUpPin) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableWakeUpPin) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableWakeUpPin) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableWakeUpPin) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableWakeUpPin) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetWakeupFlag) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetWakeupFlag) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetWakeupFlag) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetWakeupFlag) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearWakeupFlag) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearWakeupFlag) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearWakeupFlag) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearWakeupFlag) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP1_Callback) for HAL_PWREx_WKUP1_Callback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP2_Callback) for HAL_PWREx_WKUP2_Callback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP3_Callback) for HAL_PWREx_WKUP3_Callback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP4_Callback) for HAL_PWREx_WKUP4_Callback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP5_Callback) for HAL_PWREx_WKUP5_Callback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP6_Callback) for HAL_PWREx_WKUP6_Callback
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP1_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP1_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP2_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP2_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP3_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP3_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP4_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP4_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP5_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP5_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP6_Callback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP6_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUSBReg) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBReg) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUSBReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUSBReg) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUSBReg) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUSBVoltageDetector) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBVoltageDetector) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUSBVoltageDetector) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUSBVoltageDetector) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMonitoring) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMonitoring) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMonitoring) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMonitoring) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetTemperatureLevel) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetTemperatureLevel) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVBATLevel) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVBATLevel) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigAVD) refers to stm32h7xx_hal_pwr_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigAVD) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigAVD) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigAVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableAVD) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableAVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableAVD) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableAVD) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_AVD_IRQHandler) refers to stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID) for HAL_GetCurrentCPUID
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_AVD_IRQHandler) refers to stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_AVD_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_AVDCallback) for HAL_PWREx_AVDCallback
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_AVD_IRQHandler) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_AVD_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_AVDCallback) refers to stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_AVDCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32h7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32h7xx_hal_rcc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32h7xx_hal_rcc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32h7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32h7xx_hal_rcc.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config) for RCCEx_PLL2_Config
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config) for RCCEx_PLL3_Config
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLL2_Config) refers to stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLL3_Config) refers to stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL1ClockFreq) for HAL_RCCEx_GetPLL1ClockFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq) for HAL_RCCEx_GetPLL2ClockFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq) for HAL_RCCEx_GetPLL3ClockFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq) for HAL_RCCEx_GetD3PCLK1Freq
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL1ClockFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL1ClockFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL2ClockFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL3ClockFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD3PCLK1Freq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1PCLK1Freq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1PCLK1Freq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD1PCLK1Freq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1PCLK1Freq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD1SysClockFreq) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_KerWakeUpStopCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_KerWakeUpStopCLKConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_KerWakeUpStopCLKConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_KerWakeUpStopCLKConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableBootCore) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableBootCore) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableBootCore) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableBootCore) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WWDGxSysResetConfig) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WWDGxSysResetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WWDGxSysResetConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WWDGxSysResetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSConfig) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSConfig) refers to stm32h7xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSConfig) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSGetSynchronizationInfo) refers to stm32h7xx_hal_rcc_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSGetSynchronizationInfo) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSGetSynchronizationInfo) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSGetSynchronizationInfo) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSWaitSynchronization) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSWaitSynchronization) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSWaitSynchronization) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncOkCallback) for HAL_RCCEx_CRS_SyncOkCallback
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncWarnCallback) for HAL_RCCEx_CRS_SyncWarnCallback
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ExpectedSyncCallback) for HAL_RCCEx_CRS_ExpectedSyncCallback
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ErrorCallback) for HAL_RCCEx_CRS_ErrorCallback
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_SyncOkCallback) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncOkCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_SyncWarnCallback) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncWarnCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_ExpectedSyncCallback) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ExpectedSyncCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_ErrorCallback) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for HAL_RCCEx_LSECSS_Callback
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMAError) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for TIM_TI3_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for TIM_TI4_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to stm32h7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for TIM_ITRx_SetConfig
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_GetChannelState) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_GetChannelState) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurstState) refers to stm32h7xx_hal_tim.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurstState) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32h7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32h7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) refers to stm32h7xx_hal_tim_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32h7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq) for HAL_RCCEx_GetD3PCLK1Freq
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq) for HAL_RCCEx_GetPLL2ClockFreq
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq) for HAL_RCCEx_GetPLL3ClockFreq
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_uart.o(.rodata.UARTPrescTable) for UARTPrescTable
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32h7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) refers to msp_stm32h7.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT_FIFOEN) for UART_TxISR_16BIT_FIFOEN
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT_FIFOEN) for UART_TxISR_8BIT_FIFOEN
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT) for UART_TxISR_16BIT
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT) for UART_TxISR_8BIT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT_FIFOEN) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT_FIFOEN) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT) refers to stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) for UART_RxISR_16BIT_FIFOEN
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) for UART_RxISR_8BIT_FIFOEN
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT) for UART_RxISR_16BIT
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT) for UART_RxISR_8BIT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMATransmitCplt) refers to com_stm32h7.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32h7xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMATxHalfCplt) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMAError) refers to stm32h7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32h7xx_hal_uart.o(.text.UART_DMAError) refers to stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32h7xx_hal_uart.o(.text.UART_DMAError) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32h7xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32h7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer) refers to stm32h7xx_hal_uart.o(.text.UART_EndTxTransfer) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer) refers to stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMATxAbortCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMARxAbortCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32h7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback) for HAL_UARTEx_WakeupCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.UART_EndTransmit_IT) for UART_EndTransmit_IT
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback) for HAL_UARTEx_TxFifoEmptyCallback
    stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback) for HAL_UARTEx_RxFifoFullCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMAAbortOnError) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32h7xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_EndTransmit_IT) refers to com_stm32h7.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT) refers to stm32h7xx_hal_uart.o(.text.UART_EndTransmit_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.HAL_LIN_SendBreak) refers to stm32h7xx_hal_uart.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart.o(.text.HAL_LIN_SendBreak) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32h7xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT) for UART_RxISR_16BIT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) refers to com_stm32h7.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT) for UART_RxISR_8BIT
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT_FIFOEN) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT) refers to stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to com_stm32h7.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32h7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32h7xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32h7xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32h7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32h7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to msp_stm32h7.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_WakeupCallback) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_RxFifoFullCallback) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_TxFifoEmptyCallback) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32h7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_Wakeup_AddressConfig) for UARTEx_Wakeup_AddressConfig
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.UARTEx_Wakeup_AddressConfig) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.UARTEx_Wakeup_AddressConfig) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.UARTEx_Wakeup_AddressConfig) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_Wakeup_AddressConfig) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableStopMode) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableStopMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableStopMode) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableStopMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) for UARTEx_SetNbDataToProcess
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableFifoMode) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) refers to stm32h7xx_hal_uart_ex.o(.rodata.UARTEx_SetNbDataToProcess.numerator) for UARTEx_SetNbDataToProcess.numerator
    stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) refers to stm32h7xx_hal_uart_ex.o(.rodata.UARTEx_SetNbDataToProcess.denominator) for UARTEx_SetNbDataToProcess.denominator
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.UARTEx_SetNbDataToProcess) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableFifoMode) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) for UARTEx_SetNbDataToProcess
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_SetTxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.rodata.str1.1) for .L.str
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold) refers to main.o(.text.assert_failed) for assert_failed
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess) for UARTEx_SetNbDataToProcess
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_SetRxFifoThreshold) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) for [Anonymous Symbol]
    stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) for [Anonymous Symbol]
    startup_stm32h755xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h755xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h755xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h755xx.o(RESET) refers to startup_stm32h755xx.o(STACK) for __initial_sp
    startup_stm32h755xx.o(RESET) refers to startup_stm32h755xx.o(.text) for Reset_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32h755xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.UART4_IRQHandler) for UART4_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.UART5_IRQHandler) for UART5_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler) for DMA2_Stream2_IRQHandler
    startup_stm32h755xx.o(RESET) refers to eth_stm32h7.o(.text.ETH_IRQHandler) for ETH_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.USART6_IRQHandler) for USART6_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.UART7_IRQHandler) for UART7_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.UART8_IRQHandler) for UART8_IRQHandler
    startup_stm32h755xx.o(RESET) refers to irq_stm32h7.o(.text.HSEM2_IRQHandler) for HSEM2_IRQHandler
    startup_stm32h755xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h755xx.o(.text) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemInit) for SystemInit
    startup_stm32h755xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32h755xx.o(.text) refers to startup_stm32h755xx.o(HEAP) for Heap_Mem
    startup_stm32h755xx.o(.text) refers to startup_stm32h755xx.o(STACK) for Stack_Mem
    system_stm32h7xx_dualcore_boot_cm4_cm7.o(.ARM.exidx.text.SystemInit) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemCoreClockUpdate) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable) for D1CorePrescTable
    system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemCoreClockUpdate) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock) for SystemD2Clock
    system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemCoreClockUpdate) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32h7xx_dualcore_boot_cm4_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    net_config.o(.text.netos_init) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    net_config.o(.text.netos_init) refers to net_config.o(.bss.k_mul) for k_mul
    net_config.o(.ARM.exidx.text.netos_init) refers to net_config.o(.text.netos_init) for [Anonymous Symbol]
    net_config.o(.text.netos_thread_create) refers to net_sys.o(i.netCore_Thread) for netCore_Thread
    net_config.o(.text.netos_thread_create) refers to net_config.o(.rodata.net_thread_attr) for net_thread_attr
    net_config.o(.text.netos_thread_create) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    net_config.o(.ARM.exidx.text.netos_thread_create) refers to net_config.o(.text.netos_thread_create) for [Anonymous Symbol]
    net_config.o(.text.netos_thread_delete) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    net_config.o(.ARM.exidx.text.netos_thread_delete) refers to net_config.o(.text.netos_thread_delete) for [Anonymous Symbol]
    net_config.o(.text.netos_thread_id) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    net_config.o(.ARM.exidx.text.netos_thread_id) refers to net_config.o(.text.netos_thread_id) for [Anonymous Symbol]
    net_config.o(.text.netos_thread_pass) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    net_config.o(.ARM.exidx.text.netos_thread_pass) refers to net_config.o(.text.netos_thread_pass) for [Anonymous Symbol]
    net_config.o(.text.netos_timer_create) refers to net_sys.o(i.net_sys_tick) for net_sys_tick
    net_config.o(.text.netos_timer_create) refers to net_config.o(.rodata.net_timer_attr) for net_timer_attr
    net_config.o(.text.netos_timer_create) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    net_config.o(.ARM.exidx.text.netos_timer_create) refers to net_config.o(.text.netos_timer_create) for [Anonymous Symbol]
    net_config.o(.text.netos_timer_delete) refers to rtx_timer.o(.text.osTimerDelete) for osTimerDelete
    net_config.o(.ARM.exidx.text.netos_timer_delete) refers to net_config.o(.text.netos_timer_delete) for [Anonymous Symbol]
    net_config.o(.text.netos_timer_start) refers to net_config.o(.text.ms2tick) for ms2tick
    net_config.o(.text.netos_timer_start) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    net_config.o(.ARM.exidx.text.netos_timer_start) refers to net_config.o(.text.netos_timer_start) for [Anonymous Symbol]
    net_config.o(.text.ms2tick) refers to net_config.o(.bss.k_mul) for k_mul
    net_config.o(.ARM.exidx.text.ms2tick) refers to net_config.o(.text.ms2tick) for [Anonymous Symbol]
    net_config.o(.text.netos_mutex_create) refers to net_config.o(.rodata.net_lock_attr) for net_lock_attr
    net_config.o(.text.netos_mutex_create) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    net_config.o(.text.netos_mutex_create) refers to net_config.o(.rodata.mem_lock_attr) for mem_lock_attr
    net_config.o(.ARM.exidx.text.netos_mutex_create) refers to net_config.o(.text.netos_mutex_create) for [Anonymous Symbol]
    net_config.o(.text.netos_mutex_delete) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    net_config.o(.ARM.exidx.text.netos_mutex_delete) refers to net_config.o(.text.netos_mutex_delete) for [Anonymous Symbol]
    net_config.o(.text.netos_lock) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    net_config.o(.ARM.exidx.text.netos_lock) refers to net_config.o(.text.netos_lock) for [Anonymous Symbol]
    net_config.o(.text.netos_unlock) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    net_config.o(.ARM.exidx.text.netos_unlock) refers to net_config.o(.text.netos_unlock) for [Anonymous Symbol]
    net_config.o(.text.netos_flag_wait) refers to net_config.o(.text.ms2tick) for ms2tick
    net_config.o(.text.netos_flag_wait) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    net_config.o(.ARM.exidx.text.netos_flag_wait) refers to net_config.o(.text.netos_flag_wait) for [Anonymous Symbol]
    net_config.o(.text.netos_flag_set) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    net_config.o(.ARM.exidx.text.netos_flag_set) refers to net_config.o(.text.netos_flag_set) for [Anonymous Symbol]
    net_config.o(.text.netos_flag_clear) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    net_config.o(.ARM.exidx.text.netos_flag_clear) refers to net_config.o(.text.netos_flag_clear) for [Anonymous Symbol]
    net_config.o(.text.netos_delay) refers to net_config.o(.text.ms2tick) for ms2tick
    net_config.o(.text.netos_delay) refers to rtx_delay.o(.text.osDelay) for osDelay
    net_config.o(.ARM.exidx.text.netos_delay) refers to net_config.o(.text.netos_delay) for [Anonymous Symbol]
    net_config.o(.text.netif_create) refers to net_config.o(.rodata.eth0_lock_attr) for eth0_lock_attr
    net_config.o(.text.netif_create) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    net_config.o(.text.netif_create) refers to net_eth.o(i.netETH_Thread) for netETH_Thread
    net_config.o(.text.netif_create) refers to net_config.o(.rodata.eth0_ll_config) for eth0_ll_config
    net_config.o(.text.netif_create) refers to net_config.o(.rodata.eth0_thread_attr) for eth0_thread_attr
    net_config.o(.text.netif_create) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    net_config.o(.ARM.exidx.text.netif_create) refers to net_config.o(.text.netif_create) for [Anonymous Symbol]
    net_config.o(.text.netif_delete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for osSemaphoreDelete
    net_config.o(.text.netif_delete) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    net_config.o(.ARM.exidx.text.netif_delete) refers to net_config.o(.text.netif_delete) for [Anonymous Symbol]
    net_config.o(.text.netif_lock) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    net_config.o(.ARM.exidx.text.netif_lock) refers to net_config.o(.text.netif_lock) for [Anonymous Symbol]
    net_config.o(.text.netif_unlock) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    net_config.o(.ARM.exidx.text.netif_unlock) refers to net_config.o(.text.netif_unlock) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netIGMP_Join) refers to net_config.o(.text.netIGMP_Join) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netIGMP_Leave) refers to net_config.o(.text.netIGMP_Leave) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.net_igmp_is_member) refers to net_config.o(.text.net_igmp_is_member) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.net_igmp_collect_mcast) refers to net_config.o(.text.net_igmp_collect_mcast) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.net_igmp_process) refers to net_config.o(.text.net_igmp_process) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netDHCP_Enable) refers to net_config.o(.text.netDHCP_Enable) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netDHCP_Disable) refers to net_config.o(.text.netDHCP_Disable) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netDHCP_SetOption) refers to net_config.o(.text.netDHCP_SetOption) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.netSNTPc_GetTime) refers to net_config.o(.text.netSNTPc_GetTime) for [Anonymous Symbol]
    net_config.o(.ARM.exidx.text.net_sys_error) refers to net_config.o(.text.net_sys_error) for [Anonymous Symbol]
    net_config.o(.text.eth0_callback) refers to net_eth.o(.bss) for net_eth0_if_control
    net_config.o(.text.eth0_callback) refers to net_eth.o(i.net_eth_callback) for net_eth_callback
    net_config.o(.ARM.exidx.text.eth0_callback) refers to net_config.o(.text.eth0_callback) for [Anonymous Symbol]
    net_config.o(.rodata.net_thread_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.net_thread_attr) refers to net_config.o(.bss.os.thread.cb) for [Anonymous Symbol]
    net_config.o(.rodata.net_thread_attr) refers to net_config.o(.bss.net_stack) for [Anonymous Symbol]
    net_config.o(.rodata.net_timer_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.net_timer_attr) refers to net_config.o(.bss.os.timer.cb) for [Anonymous Symbol]
    net_config.o(.rodata.net_lock_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.net_lock_attr) refers to net_config.o(.bss.os.mutex.cb) for [Anonymous Symbol]
    net_config.o(.rodata.mem_lock_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.mem_lock_attr) refers to net_config.o(.bss.os.mutex.cb) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_lock_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_lock_attr) refers to net_config.o(.bss.os.semaphore.cb) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ll_config) refers to net_eth.o(.bss) for net_eth0_if_control
    net_config.o(.rodata.eth0_ll_config) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.eth0_ll_config) refers to eth_stm32h7.o(.rodata.Driver_ETH_MAC0) for Driver_ETH_MAC0
    net_config.o(.rodata.eth0_ll_config) refers to phy_lan8742a.o(.rodata.Driver_ETH_PHY0) for Driver_ETH_PHY0
    net_config.o(.rodata.eth0_ll_config) refers to net_config.o(.bss.eth0_mac_addr) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ll_config) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ll_config) refers to net_config.o(.text.eth0_callback) for eth0_callback
    net_config.o(.rodata.eth0_thread_attr) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_thread_attr) refers to net_config.o(.bss.os.thread.cb) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_thread_attr) refers to net_config.o(.bss.eth0_stack) for [Anonymous Symbol]
    net_config.o(.rodata.net_sys_config) refers to net_config.o(.bss.mem_pool) for [Anonymous Symbol]
    net_config.o(.rodata.net_sys_config) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.net_sys_config) refers to net_config.o(.rodata.sys_fn_init) for [Anonymous Symbol]
    net_config.o(.rodata.net_sys_config) refers to net_config.o(.rodata.sys_fn_run) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ip4_config) refers to net_config.o(.rodata.str1.1) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ip4_config) refers to net_config.o(.rodata.eth0_arp_config) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_ip4_config) refers to net_config.o(.rodata.eth0_icmp_config) for [Anonymous Symbol]
    net_config.o(.rodata.net_eth0_if_config) refers to net_config.o(.bss.eth0_state) for [Anonymous Symbol]
    net_config.o(.rodata.net_eth0_if_config) refers to net_config.o(.bss.eth0_mac_addr) for [Anonymous Symbol]
    net_config.o(.rodata.net_eth0_if_config) refers to net_config.o(.bss.eth0_localm) for [Anonymous Symbol]
    net_config.o(.rodata.net_eth0_if_config) refers to net_config.o(.rodata.eth0_ip4_config) for [Anonymous Symbol]
    net_config.o(.rodata.net_eth0_if_config) refers to net_eth.o(i.net_eth_send_frame) for net_eth_send_frame
    net_config.o(.rodata.net_eth0_if_config) refers to net_eth.o(i.net_eth_config_mcast) for net_eth_config_mcast
    net_config.o(.rodata.net_eth0_if_config) refers to net_eth.o(i.net_eth_output) for net_eth_output
    net_config.o(.rodata.net_eth_list) refers to net_config.o(.rodata.eth0_ll_config) for [Anonymous Symbol]
    net_config.o(.rodata.net_if_list_lan) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.net_if_list_all) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.net_if_inet_def) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.net_if_link_def) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.eth0_arp_config) refers to net_arp.o(.bss) for net_eth0_arp_control
    net_config.o(.rodata.eth0_arp_config) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.eth0_arp_config) refers to net_config.o(.bss.eth0_arp_table) for [Anonymous Symbol]
    net_config.o(.rodata.net_arp_list) refers to net_config.o(.rodata.eth0_arp_config) for [Anonymous Symbol]
    net_config.o(.rodata.eth0_icmp_config) refers to net_icmp.o(.data) for net_eth0_icmp_control
    net_config.o(.rodata.eth0_icmp_config) refers to net_config.o(.rodata.net_eth0_if_config) for net_eth0_if_config
    net_config.o(.rodata.net_icmp_list) refers to net_config.o(.rodata.eth0_icmp_config) for [Anonymous Symbol]
    net_config.o(.rodata.net_ip4_frag_config) refers to net_config.o(.bss.ip4_frag_scb) for [Anonymous Symbol]
    net_config.o(.rodata.net_udp_config) refers to net_config.o(.bss.udp_scb) for [Anonymous Symbol]
    net_config.o(.rodata.net_tcp_config) refers to net_config.o(.bss.tcp_scb) for [Anonymous Symbol]
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_eth.o(i.net_eth_iface_uninit) for net_eth_iface_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_loopback.o(i.net_loop_iface_uninit) for net_loop_iface_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_arp.o(i.net_arp_cache_uninit) for net_arp_cache_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_ip4_frag.o(i.net_ip4_frag_uninit) for net_ip4_frag_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_ping_core.o(i.net_ping_client_uninit) for net_ping_client_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_udp.o(i.net_udp_socket_uninit) for net_udp_socket_uninit
    net_config.o(.rodata.net_sys_fn_uninit) refers to net_tcp.o(i.net_tcp_socket_uninit) for net_tcp_socket_uninit
    net_config.o(.rodata.netif_getopt_func) refers to net_eth.o(i.net_eth_get_option) for net_eth_get_option
    net_config.o(.rodata.netif_setopt_func) refers to net_eth.o(i.net_eth_set_option) for net_eth_set_option
    net_config.o(.rodata.sys_fn_init) refers to net_eth.o(i.net_eth_iface_init) for net_eth_iface_init
    net_config.o(.rodata.sys_fn_init) refers to net_loopback.o(i.net_loop_iface_init) for net_loop_iface_init
    net_config.o(.rodata.sys_fn_init) refers to net_arp.o(i.net_arp_cache_init) for net_arp_cache_init
    net_config.o(.rodata.sys_fn_init) refers to net_ip4_frag.o(i.net_ip4_frag_init) for net_ip4_frag_init
    net_config.o(.rodata.sys_fn_init) refers to net_ping_core.o(i.net_ping_client_init) for net_ping_client_init
    net_config.o(.rodata.sys_fn_init) refers to net_udp.o(i.net_udp_socket_init) for net_udp_socket_init
    net_config.o(.rodata.sys_fn_init) refers to net_tcp.o(i.net_tcp_socket_init) for net_tcp_socket_init
    net_config.o(.rodata.sys_fn_run) refers to net_eth.o(i.net_eth_iface_run) for net_eth_iface_run
    net_config.o(.rodata.sys_fn_run) refers to net_loopback.o(i.net_loop_iface_run) for net_loop_iface_run
    net_config.o(.rodata.sys_fn_run) refers to net_arp.o(i.net_arp_cache_run) for net_arp_cache_run
    net_config.o(.rodata.sys_fn_run) refers to net_ip4_frag.o(i.net_ip4_frag_run) for net_ip4_frag_run
    net_config.o(.rodata.sys_fn_run) refers to net_ping_core.o(i.net_ping_client_run) for net_ping_client_run
    net_config.o(.rodata.sys_fn_run) refers to net_tcp.o(i.net_tcp_socket_run) for net_tcp_socket_run
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to bsp_stm32h7.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    net_eth.o(i.eth_if_map) refers to net_config.o(.rodata.net_eth_list) for net_eth_list
    net_eth.o(i.eth_iface_init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_eth.o(i.eth_iface_init) refers to net_addr.o(i.netMAC_aton) for netMAC_aton
    net_eth.o(i.eth_iface_init) refers to bsp_stm32h7.o(.text.net_sys_error) for net_sys_error
    net_eth.o(i.eth_iface_init) refers to net_eth.o(i.netETH_Notify) for netETH_Notify
    net_eth.o(i.eth_iface_init) refers to net_eth.o(i.eth_mtu_limit) for eth_mtu_limit
    net_eth.o(i.eth_iface_init) refers to net_addr.o(i.net_addr4_aton) for net_addr4_aton
    net_eth.o(i.eth_iface_init) refers to net_common.o(i.net_crc_buf) for net_crc_buf
    net_eth.o(i.eth_iface_init) refers to net_config.o(.text.netif_create) for netif_create
    net_eth.o(i.eth_iface_init) refers to net_sys.o(.bss) for net_sys_control
    net_eth.o(i.eth_iface_run) refers to net_eth.o(i.netETH_Notify) for netETH_Notify
    net_eth.o(i.eth_iface_run) refers to net_eth.o(i.net_eth_config_mcast) for net_eth_config_mcast
    net_eth.o(i.eth_iface_run) refers to net_arp.o(i.net_arp_notify) for net_arp_notify
    net_eth.o(i.eth_iface_run) refers to net_eth.o(i.netETH_ReceiveRaw) for netETH_ReceiveRaw
    net_eth.o(i.eth_iface_run) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_eth.o(i.eth_iface_run) refers to net_arp.o(i.net_arp_process) for net_arp_process
    net_eth.o(i.eth_iface_run) refers to net_ip4.o(i.net_ip4_chk_frame) for net_ip4_chk_frame
    net_eth.o(i.eth_iface_run) refers to net_arp.o(i.net_arp_cache_early) for net_arp_cache_early
    net_eth.o(i.eth_iface_run) refers to net_arp.o(i.net_arp_cache_add) for net_arp_cache_add
    net_eth.o(i.eth_iface_run) refers to net_ip4.o(i.net_ip4_reass_frame) for net_ip4_reass_frame
    net_eth.o(i.eth_iface_run) refers to net_udp.o(i.net_udp_process) for net_udp_process
    net_eth.o(i.eth_iface_run) refers to net_icmp.o(i.net_icmp_process) for net_icmp_process
    net_eth.o(i.eth_iface_run) refers to net_config.o(.text.net_igmp_process) for net_igmp_process
    net_eth.o(i.eth_iface_run) refers to net_tcp.o(i.net_tcp_process) for net_tcp_process
    net_eth.o(i.eth_iface_run) refers to net_sys.o(.bss) for net_sys_control
    net_eth.o(i.eth_iface_run) refers to net_addr.o(.constdata) for net_addr_bcast
    net_eth.o(i.eth_iface_uninit) refers to net_eth.o(i.netETH_Notify) for netETH_Notify
    net_eth.o(i.eth_iface_uninit) refers to rt_memclr.o(.text) for __aeabi_memclr
    net_eth.o(i.eth_iface_uninit) refers to net_config.o(.text.netif_delete) for netif_delete
    net_eth.o(i.eth_iface_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_eth.o(i.eth_lock) refers to net_config.o(.text.netif_lock) for netif_lock
    net_eth.o(i.eth_receive) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_eth.o(i.eth_receive) refers to net_sys.o(i.net_sys_wakeup) for net_sys_wakeup
    net_eth.o(i.eth_unlock) refers to net_config.o(.text.netif_unlock) for netif_unlock
    net_eth.o(i.netETH_SendRaw) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.netETH_SendRaw) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_eth.o(i.netETH_SendRaw) refers to net_eth.o(i.eth_lock) for eth_lock
    net_eth.o(i.netETH_SendRaw) refers to net_eth.o(i.eth_unlock) for eth_unlock
    net_eth.o(i.netETH_SendRaw) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_eth.o(i.netETH_Thread) refers to net_config.o(.text.netos_delay) for netos_delay
    net_eth.o(i.netETH_Thread) refers to net_eth.o(i.eth_lock) for eth_lock
    net_eth.o(i.netETH_Thread) refers to net_eth.o(i.eth_check_link) for eth_check_link
    net_eth.o(i.netETH_Thread) refers to net_eth.o(i.eth_unlock) for eth_unlock
    net_eth.o(i.netETH_Thread) refers to net_config.o(.text.netos_flag_wait) for netos_flag_wait
    net_eth.o(i.netETH_Thread) refers to net_eth.o(i.eth_receive) for eth_receive
    net_eth.o(i.net_eth_callback) refers to net_config.o(.text.netos_flag_set) for netos_flag_set
    net_eth.o(i.net_eth_config_mcast) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_config_mcast) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_eth.o(i.net_eth_config_mcast) refers to net_config.o(.text.net_igmp_collect_mcast) for net_igmp_collect_mcast
    net_eth.o(i.net_eth_config_mcast) refers to net_eth.o(i.eth_lock) for eth_lock
    net_eth.o(i.net_eth_config_mcast) refers to net_eth.o(i.eth_unlock) for eth_unlock
    net_eth.o(i.net_eth_config_mcast) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_eth.o(i.net_eth_get_addr) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_get_addr) refers to net_arp.o(i.net_arp_find_mac) for net_arp_find_mac
    net_eth.o(i.net_eth_get_option) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_get_option) refers to net_eth.o(i.eth_opt_len) for eth_opt_len
    net_eth.o(i.net_eth_iface_init) refers to net_eth.o(i.eth_iface_init) for eth_iface_init
    net_eth.o(i.net_eth_iface_init) refers to net_config.o(.rodata.net_eth_list) for net_eth_list
    net_eth.o(i.net_eth_iface_run) refers to net_eth.o(i.eth_iface_run) for eth_iface_run
    net_eth.o(i.net_eth_iface_run) refers to net_config.o(.rodata.net_eth_list) for net_eth_list
    net_eth.o(i.net_eth_iface_uninit) refers to net_eth.o(i.eth_iface_uninit) for eth_iface_uninit
    net_eth.o(i.net_eth_iface_uninit) refers to net_config.o(.rodata.net_eth_list) for net_eth_list
    net_eth.o(i.net_eth_output) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_output) refers to net_eth.o(i.eth_lock) for eth_lock
    net_eth.o(i.net_eth_output) refers to net_config.o(.text.netos_delay) for netos_delay
    net_eth.o(i.net_eth_output) refers to net_eth.o(i.eth_unlock) for eth_unlock
    net_eth.o(i.net_eth_send_frame) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_send_frame) refers to net_addr.o(i.net_addr4_to_mac) for net_addr4_to_mac
    net_eth.o(i.net_eth_send_frame) refers to net_ip4.o(i.net_ip4_is_subcast) for net_ip4_is_subcast
    net_eth.o(i.net_eth_send_frame) refers to net_arp.o(i.net_arp_cache_find) for net_arp_cache_find
    net_eth.o(i.net_eth_send_frame) refers to net_arp.o(i.net_arp_enqueue) for net_arp_enqueue
    net_eth.o(i.net_eth_send_frame) refers to net_eth.o(i.net_eth_output) for net_eth_output
    net_eth.o(i.net_eth_send_frame) refers to net_addr.o(.constdata) for net_addr_bcast
    net_eth.o(i.net_eth_set_option) refers to net_eth.o(i.eth_if_map) for eth_if_map
    net_eth.o(i.net_eth_set_option) refers to net_eth.o(i.eth_opt_len) for eth_opt_len
    net_eth.o(i.net_eth_set_option) refers to net_eth.o(i.eth_lock) for eth_lock
    net_eth.o(i.net_eth_set_option) refers to net_eth.o(i.eth_unlock) for eth_unlock
    net_eth.o(i.net_eth_set_option) refers to net_common.o(i.net_crc_buf) for net_crc_buf
    net_eth.o(i.net_eth_set_option) refers to net_arp.o(i.net_arp_notify) for net_arp_notify
    net_eth.o(i.net_eth_set_option) refers to net_eth.o(i.eth_mtu_limit) for eth_mtu_limit
    net_eth.o(i.net_eth_set_option) refers to net_sys.o(.bss) for net_sys_control
    net_arp.o(i.arp_cache_run) refers to net_arp.o(i.arp_probe_run) for arp_probe_run
    net_arp.o(i.arp_cache_run) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.arp_cache_run) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.arp_cache_run) refers to net_sys.o(.bss) for net_sys_control
    net_arp.o(i.arp_probe_run) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.arp_probe_run) refers to net_sys.o(i.net_sys_resume) for net_sys_resume
    net_arp.o(i.arp_probe_start) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.arp_proc_response) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_arp.o(i.arp_que_free) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_arp.o(i.arp_send_reply) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_arp.o(i.arp_send_reply) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_arp.o(i.arp_send_request) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_arp.o(i.arp_send_request) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_arp.o(i.arp_send_request) refers to net_addr.o(.constdata) for net_addr_bcast
    net_arp.o(i.arp_send_request) refers to net_addr.o(.constdata) for net_addr_unspec
    net_arp.o(i.arp_sender_valid) refers to net_addr.o(.constdata) for net_addr_bcast
    net_arp.o(i.arp_sender_valid) refers to net_addr.o(.constdata) for net_addr_unspec
    net_arp.o(i.netARP_CacheIP) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_CacheIP) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_CacheIP) refers to net_arp.o(i.arp_is_cacheable) for arp_is_cacheable
    net_arp.o(i.netARP_CacheIP) refers to net_arp.o(i.net_arp_cache_find) for net_arp_cache_find
    net_arp.o(i.netARP_CacheIP) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_CacheMAC) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_CacheMAC) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_CacheMAC) refers to net_arp.o(i.arp_cache_alloc) for arp_cache_alloc
    net_arp.o(i.netARP_CacheMAC) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.netARP_CacheMAC) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_CacheMAC) refers to net_addr.o(.constdata) for net_addr_unspec
    net_arp.o(i.netARP_CacheMAC) refers to net_addr.o(.constdata) for net_addr_bcast
    net_arp.o(i.netARP_ClearCache) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_ClearCache) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_ClearCache) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.netARP_ClearCache) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_GetIP) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_GetIP) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_GetIP) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_GetMAC) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_GetMAC) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_GetMAC) refers to net_arp.o(i.net_arp_find_mac) for net_arp_find_mac
    net_arp.o(i.netARP_GetMAC) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_Probe) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_Probe) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_Probe) refers to net_arp.o(i.arp_probe_start) for arp_probe_start
    net_arp.o(i.netARP_Probe) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_ProbeX) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_arp.o(i.netARP_ProbeX) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_arp.o(i.netARP_ProbeX) refers to net_arp.o(i.arp_probe_start) for arp_probe_start
    net_arp.o(i.netARP_ProbeX) refers to net_sys.o(i.net_sys_suspend) for net_sys_suspend
    net_arp.o(i.netARP_ProbeX) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_arp.o(i.netARP_ProbeX) refers to net_config.o(.text.netos_delay) for netos_delay
    net_arp.o(i.net_arp_cache_add) refers to net_arp.o(i.arp_is_cacheable) for arp_is_cacheable
    net_arp.o(i.net_arp_cache_add) refers to net_ip4.o(i.net_ip4_is_onlink) for net_ip4_is_onlink
    net_arp.o(i.net_arp_cache_add) refers to net_arp.o(i.arp_cache_alloc) for arp_cache_alloc
    net_arp.o(i.net_arp_cache_add) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.net_arp_cache_early) refers to net_arp.o(i.arp_is_cacheable) for arp_is_cacheable
    net_arp.o(i.net_arp_cache_early) refers to net_ip4.o(i.net_ip4_is_onlink) for net_ip4_is_onlink
    net_arp.o(i.net_arp_cache_early) refers to net_arp.o(i.arp_cache_alloc) for arp_cache_alloc
    net_arp.o(i.net_arp_cache_early) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.net_arp_cache_early) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.net_arp_cache_find) refers to net_ip4.o(i.net_ip4_is_onlink) for net_ip4_is_onlink
    net_arp.o(i.net_arp_cache_find) refers to net_arp.o(i.arp_cache_alloc) for arp_cache_alloc
    net_arp.o(i.net_arp_cache_find) refers to net_arp.o(i.arp_que_free) for arp_que_free
    net_arp.o(i.net_arp_cache_find) refers to net_addr.o(.constdata) for net_addr_bcast
    net_arp.o(i.net_arp_cache_init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_arp.o(i.net_arp_cache_init) refers to net_config.o(.rodata.net_arp_list) for net_arp_list
    net_arp.o(i.net_arp_cache_run) refers to net_arp.o(i.arp_cache_run) for arp_cache_run
    net_arp.o(i.net_arp_cache_run) refers to net_config.o(.rodata.net_arp_list) for net_arp_list
    net_arp.o(i.net_arp_cache_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_arp.o(i.net_arp_cache_uninit) refers to net_config.o(.rodata.net_arp_list) for net_arp_list
    net_arp.o(i.net_arp_enqueue) refers to net_mem.o(i.net_mem_avail) for net_mem_avail
    net_arp.o(i.net_arp_enqueue) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_arp.o(i.net_arp_enqueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_arp.o(i.net_arp_enqueue) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.net_arp_notify) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.net_arp_probe) refers to net_arp.o(i.arp_send_request) for arp_send_request
    net_arp.o(i.net_arp_process) refers to net_arp.o(i.arp_sender_valid) for arp_sender_valid
    net_arp.o(i.net_arp_process) refers to net_arp.o(i.net_arp_cache_add) for net_arp_cache_add
    net_arp.o(i.net_arp_process) refers to net_arp.o(i.arp_send_reply) for arp_send_reply
    net_arp.o(i.net_arp_process) refers to net_sys.o(i.net_sys_resume) for net_sys_resume
    net_arp.o(i.net_arp_process) refers to net_arp.o(i.arp_proc_response) for arp_proc_response
    net_loopback.o(i.net_loop_iface_init) refers to net_ip4.o(i.net_ip4_init) for net_ip4_init
    net_loopback.o(i.net_loop_iface_init) refers to net_icmp.o(i.net_icmp_init) for net_icmp_init
    net_loopback.o(i.net_loop_iface_init) refers to net_loopback.o(.constdata) for .constdata
    net_loopback.o(i.net_loop_iface_run) refers to net_ip4.o(i.net_ip4_chk_frame) for net_ip4_chk_frame
    net_loopback.o(i.net_loop_iface_run) refers to net_icmp.o(i.net_icmp_process) for net_icmp_process
    net_loopback.o(i.net_loop_iface_run) refers to net_udp.o(i.net_udp_process) for net_udp_process
    net_loopback.o(i.net_loop_iface_run) refers to net_tcp.o(i.net_tcp_process) for net_tcp_process
    net_loopback.o(i.net_loop_iface_run) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_loopback.o(i.net_loop_iface_run) refers to net_loopback.o(.constdata) for .constdata
    net_loopback.o(i.net_loop_iface_run) refers to net_sys.o(.bss) for net_sys_control
    net_loopback.o(i.net_loop_iface_uninit) refers to net_ip4.o(i.net_ip4_uninit) for net_ip4_uninit
    net_loopback.o(i.net_loop_iface_uninit) refers to net_loopback.o(.constdata) for .constdata
    net_loopback.o(i.net_loop_send_frame) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_loopback.o(i.net_loop_send_frame) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_loopback.o(i.net_loop_send_frame) refers to net_sys.o(i.net_sys_wakeup) for net_sys_wakeup
    net_loopback.o(i.net_loop_send_frame) refers to net_loopback.o(.constdata) for .constdata
    net_loopback.o(.constdata) refers to net_loopback.o(i.net_loop_send_frame) for net_loop_send_frame
    net_loopback.o(.constdata) refers to net_loopback.o(.data) for loop_control
    net_loopback.o(.constdata) refers to net_loopback.o(.constdata) for net_loop_if_config
    net_ip4_frag.o(i.frag_map_session) refers to net_ip4_frag.o(i.que_free_list) for que_free_list
    net_ip4_frag.o(i.frag_map_session) refers to net_config.o(.rodata.net_ip4_frag_config) for net_ip4_frag_config
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_ip4_frag.o(i.frag_map_session) for frag_map_session
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_ip4_frag.o(i.que_free_list) for que_free_list
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_ip4_frag.o(i.net_ip4_frag_add) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_config.o(.rodata.net_ip4_frag_config) for net_ip4_frag_config
    net_ip4_frag.o(i.net_ip4_frag_add) refers to net_sys.o(.bss) for net_sys_control
    net_ip4_frag.o(i.net_ip4_frag_get) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_ip4_frag.o(i.net_ip4_frag_get) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_ip4_frag.o(i.net_ip4_frag_get) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_ip4_frag.o(i.net_ip4_frag_get) refers to net_ip4_frag.o(.data) for .data
    net_ip4_frag.o(i.net_ip4_frag_init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_ip4_frag.o(i.net_ip4_frag_init) refers to net_config.o(.rodata.net_ip4_frag_config) for net_ip4_frag_config
    net_ip4_frag.o(i.net_ip4_frag_run) refers to net_ip4_frag.o(i.que_free_list) for que_free_list
    net_ip4_frag.o(i.net_ip4_frag_run) refers to net_sys.o(.bss) for net_sys_control
    net_ip4_frag.o(i.net_ip4_frag_run) refers to net_config.o(.rodata.net_ip4_frag_config) for net_ip4_frag_config
    net_ip4_frag.o(i.net_ip4_frag_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_ip4_frag.o(i.net_ip4_frag_uninit) refers to net_config.o(.rodata.net_ip4_frag_config) for net_ip4_frag_config
    net_ip4_frag.o(i.que_free_list) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_icmp.o(i.netICMP_SetNoEcho) refers to net_sys.o(i.net_if_map_all) for net_if_map_all
    net_icmp.o(i.net_icmp_init) refers to net_config.o(.rodata.net_icmp_list) for net_icmp_list
    net_icmp.o(i.net_icmp_process) refers to net_ip4.o(i.net_ip4_chksum_buf) for net_ip4_chksum_buf
    net_icmp.o(i.net_icmp_process) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_icmp.o(i.net_icmp_process) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_icmp.o(i.net_icmp_process) refers to net_ip4.o(i.net_ip4_send_frame) for net_ip4_send_frame
    net_icmp.o(i.net_icmp_process) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_icmp.o(i.net_icmp_process) refers to memcmp.o(.text) for memcmp
    net_icmp.o(i.net_icmp_process) refers to net_sys.o(.bss) for net_sys_control
    net_icmp.o(i.net_icmp_process) refers to net_ping_core.o(.bss) for net_ping_control
    net_icmp.o(i.net_icmp_process) refers to net_ping_core.o(.constdata) for net_ping_payload
    net_icmp.o(i.net_icmp_send_echo) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_icmp.o(i.net_icmp_send_echo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    net_icmp.o(i.net_icmp_send_echo) refers to net_ip4.o(i.net_ip4_tx_offl_hl) for net_ip4_tx_offl_hl
    net_icmp.o(i.net_icmp_send_echo) refers to net_ip4.o(i.net_ip4_chksum_buf) for net_ip4_chksum_buf
    net_icmp.o(i.net_icmp_send_echo) refers to net_ip4.o(i.net_ip4_send_frame) for net_ip4_send_frame
    net_icmp.o(i.net_icmp_send_echo) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_icmp.o(i.net_icmp_send_echo) refers to net_ping_core.o(.bss) for net_ping_control
    net_icmp.o(i.net_icmp_send_echo) refers to net_ping_core.o(.constdata) for net_ping_payload
    net_udp.o(i.netUDP_Close) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_Close) refers to net_udp.o(i.net_udp_close) for net_udp_close
    net_udp.o(i.netUDP_Close) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.netUDP_GetBuffer) refers to net_udp.o(i.net_udp_get_buf) for net_udp_get_buf
    net_udp.o(i.netUDP_GetLocalPort) refers to net_udp.o(i.net_udp_get_local_port) for net_udp_get_local_port
    net_udp.o(i.netUDP_GetSocket) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_GetSocket) refers to net_udp.o(i.net_udp_get_socket) for net_udp_get_socket
    net_udp.o(i.netUDP_GetSocket) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.netUDP_Open) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_Open) refers to net_udp.o(i.net_udp_open) for net_udp_open
    net_udp.o(i.netUDP_Open) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.netUDP_ReleaseSocket) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_ReleaseSocket) refers to net_udp.o(i.net_udp_release_socket) for net_udp_release_socket
    net_udp.o(i.netUDP_ReleaseSocket) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.netUDP_Send) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_Send) refers to net_udp.o(i.net_udp_send_if) for net_udp_send_if
    net_udp.o(i.netUDP_Send) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.netUDP_SetOption) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_udp.o(i.netUDP_SetOption) refers to net_udp.o(i.net_udp_set_option) for net_udp_set_option
    net_udp.o(i.netUDP_SetOption) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_udp.o(i.net_udp_close) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_enable_lla) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_free_buf) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_udp.o(i.net_udp_get_buf) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_udp.o(i.net_udp_get_local_port) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_get_option) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_get_socket) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_keep_buf) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_open) refers to net_udp.o(i.udp_port_in_use) for udp_port_in_use
    net_udp.o(i.net_udp_open) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_open) refers to net_udp.o(.data) for .data
    net_udp.o(i.net_udp_process) refers to net_ip4.o(i.net_ip4_chksum) for net_ip4_chksum
    net_udp.o(i.net_udp_process) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_process) refers to net_sys.o(.bss) for net_sys_control
    net_udp.o(i.net_udp_process) refers to net_udp.o(.bss) for .bss
    net_udp.o(i.net_udp_release_socket) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_send) refers to net_udp.o(i.net_udp_send_if) for net_udp_send_if
    net_udp.o(i.net_udp_send_if) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_udp.o(i.net_udp_send_if) refers to net_addr.o(i.net_addr_is_unspec) for net_addr_is_unspec
    net_udp.o(i.net_udp_send_if) refers to net_addr.o(i.net_addr_find_route) for net_addr_find_route
    net_udp.o(i.net_udp_send_if) refers to net_addr.o(i.net_addr_get_local) for net_addr_get_local
    net_udp.o(i.net_udp_send_if) refers to net_ip4.o(i.net_ip4_tx_offl_hl) for net_ip4_tx_offl_hl
    net_udp.o(i.net_udp_send_if) refers to net_ip4.o(i.net_ip4_chksum) for net_ip4_chksum
    net_udp.o(i.net_udp_send_if) refers to net_ip4.o(i.net_ip4_send_frame) for net_ip4_send_frame
    net_udp.o(i.net_udp_send_if) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_send_if) refers to net_addr.o(.constdata) for net_addr_bcast
    net_udp.o(i.net_udp_set_option) refers to net_sys.o(i.net_if_map_lan) for net_if_map_lan
    net_udp.o(i.net_udp_set_option) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_socket_init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_udp.o(i.net_udp_socket_init) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.net_udp_socket_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_udp.o(i.net_udp_socket_uninit) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_udp.o(i.udp_port_in_use) refers to net_config.o(.rodata.net_udp_config) for net_udp_config
    net_tcp.o(i.netTCP_Abort) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_Abort) refers to net_tcp.o(i.net_tcp_abort) for net_tcp_abort
    net_tcp.o(i.netTCP_Abort) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_Close) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_Close) refers to net_tcp.o(i.net_tcp_close) for net_tcp_close
    net_tcp.o(i.netTCP_Close) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_Connect) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_Connect) refers to net_tcp.o(i.net_tcp_connect) for net_tcp_connect
    net_tcp.o(i.netTCP_Connect) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_GetBuffer) refers to net_tcp.o(i.net_tcp_get_buf) for net_tcp_get_buf
    net_tcp.o(i.netTCP_GetLocalPort) refers to net_tcp.o(i.net_tcp_get_local_port) for net_tcp_get_local_port
    net_tcp.o(i.netTCP_GetMaxSegmentSize) refers to net_tcp.o(i.net_tcp_get_mss) for net_tcp_get_mss
    net_tcp.o(i.netTCP_GetPeer) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_GetPeer) refers to net_tcp.o(i.net_tcp_get_peer) for net_tcp_get_peer
    net_tcp.o(i.netTCP_GetPeer) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_GetSocket) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_GetSocket) refers to net_tcp.o(i.net_tcp_get_socket) for net_tcp_get_socket
    net_tcp.o(i.netTCP_GetSocket) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_GetState) refers to net_tcp.o(i.net_tcp_get_state) for net_tcp_get_state
    net_tcp.o(i.netTCP_GetTimer) refers to net_tcp.o(i.net_tcp_get_timer) for net_tcp_get_timer
    net_tcp.o(i.netTCP_Listen) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_Listen) refers to net_tcp.o(i.net_tcp_listen) for net_tcp_listen
    net_tcp.o(i.netTCP_Listen) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_ReleaseSocket) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_ReleaseSocket) refers to net_tcp.o(i.net_tcp_release_socket) for net_tcp_release_socket
    net_tcp.o(i.netTCP_ReleaseSocket) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_ResetReceiveWindow) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_ResetReceiveWindow) refers to net_tcp.o(i.net_tcp_reset_window) for net_tcp_reset_window
    net_tcp.o(i.netTCP_ResetReceiveWindow) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_Send) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_Send) refers to net_tcp.o(i.net_tcp_send) for net_tcp_send
    net_tcp.o(i.netTCP_Send) refers to net_sys.o(i.net_sys_wakeup) for net_sys_wakeup
    net_tcp.o(i.netTCP_Send) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.netTCP_SendReady) refers to net_tcp.o(i.net_tcp_check_send) for net_tcp_check_send
    net_tcp.o(i.netTCP_SetOption) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_tcp.o(i.netTCP_SetOption) refers to net_tcp.o(i.net_tcp_set_option) for net_tcp_set_option
    net_tcp.o(i.netTCP_SetOption) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_tcp.o(i.net_tcp_abort) refers to net_tcp.o(i.tcp_transit) for tcp_transit
    net_tcp.o(i.net_tcp_abort) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_abort) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_alloc_port) refers to net_tcp.o(.data) for .data
    net_tcp.o(i.net_tcp_alloc_port) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_check_send) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_close) refers to net_tcp.o(i.tcp_transit) for tcp_transit
    net_tcp.o(i.net_tcp_close) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_close) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_connect) refers to net_addr.o(i.net_addr_is_unspec) for net_addr_is_unspec
    net_tcp.o(i.net_tcp_connect) refers to net_tcp.o(i.net_tcp_alloc_port) for net_tcp_alloc_port
    net_tcp.o(i.net_tcp_connect) refers to net_addr.o(i.net_addr_find_route) for net_addr_find_route
    net_tcp.o(i.net_tcp_connect) refers to net_addr.o(i.net_addr_copy) for net_addr_copy
    net_tcp.o(i.net_tcp_connect) refers to net_addr.o(i.net_addr_get_local) for net_addr_get_local
    net_tcp.o(i.net_tcp_connect) refers to net_sys.o(i.net_rand32) for net_rand32
    net_tcp.o(i.net_tcp_connect) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_connect) refers to net_tcp.o(i.tcp_transit) for tcp_transit
    net_tcp.o(i.net_tcp_connect) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_ctrl_opt) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_buf) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_tcp.o(i.net_tcp_get_local_addr) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_local_port) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_mss) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_option) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_peer) refers to net_addr.o(i.net_addr_copy) for net_addr_copy
    net_tcp.o(i.net_tcp_get_peer) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_peer_ptr) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_socket) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_state) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_get_timer) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_listen) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_ntoa) refers to net_tcp.o(.constdata) for .constdata
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_map_socket) for tcp_map_socket
    net_tcp.o(i.net_tcp_process) refers to net_ip4.o(i.net_ip4_chksum) for net_ip4_chksum
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_proc_dupack) for tcp_proc_dupack
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_proc_acknr) for tcp_proc_acknr
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_transit) for tcp_transit
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_parse_opt) for tcp_parse_opt
    net_tcp.o(i.net_tcp_process) refers to net_sys.o(i.net_rand32) for net_rand32
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_send_reset) for tcp_send_reset
    net_tcp.o(i.net_tcp_process) refers to net_tcp.o(i.tcp_set_cwnd) for tcp_set_cwnd
    net_tcp.o(i.net_tcp_process) refers to net_sys.o(.bss) for net_sys_control
    net_tcp.o(i.net_tcp_process) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_process) refers to bsp_stm32h7.o(.text.net_sys_error) for net_sys_error
    net_tcp.o(i.net_tcp_release_socket) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_tcp.o(i.net_tcp_release_socket) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_reset_tout) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_reset_window) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_reset_window) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_send) refers to net_mem.o(i.net_mem_shrink) for net_mem_shrink
    net_tcp.o(i.net_tcp_send) refers to net_tcp.o(i.tcp_send_data) for tcp_send_data
    net_tcp.o(i.net_tcp_send) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_tcp.o(i.net_tcp_send) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_send) refers to net_sys.o(.bss) for net_sys_control
    net_tcp.o(i.net_tcp_set_cb) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_set_option) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_socket_init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_tcp.o(i.net_tcp_socket_init) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(i.tcp_que_resend) for tcp_que_resend
    net_tcp.o(i.net_tcp_socket_run) refers to net_mem.o(i.net_mem_avail) for net_mem_avail
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(i.tcp_que_init) for tcp_que_init
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(i.tcp_que_free) for tcp_que_free
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(i.tcp_transit) for tcp_transit
    net_tcp.o(i.net_tcp_socket_run) refers to net_sys.o(.bss) for net_sys_control
    net_tcp.o(i.net_tcp_socket_run) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.net_tcp_socket_run) refers to net_tcp.o(.data) for .data
    net_tcp.o(i.net_tcp_socket_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_tcp.o(i.net_tcp_socket_uninit) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.tcp_map_socket) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.tcp_map_socket) refers to net_sys.o(.bss) for net_sys_control
    net_tcp.o(i.tcp_proc_acknr) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_tcp.o(i.tcp_proc_acknr) refers to net_sys.o(.bss) for net_sys_control
    net_tcp.o(i.tcp_proc_dupack) refers to net_tcp.o(i.tcp_que_init) for tcp_que_init
    net_tcp.o(i.tcp_que_free) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_tcp.o(i.tcp_que_resend) refers to net_tcp.o(i.tcp_send_ctrl) for tcp_send_ctrl
    net_tcp.o(i.tcp_que_resend) refers to net_tcp.o(i.tcp_send_data) for tcp_send_data
    net_tcp.o(i.tcp_que_resend) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.tcp_send_ctrl) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_tcp.o(i.tcp_send_ctrl) refers to net_tcp.o(i.tcp_write) for tcp_write
    net_tcp.o(i.tcp_send_ctrl) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_tcp.o(i.tcp_send_data) refers to net_tcp.o(i.tcp_write) for tcp_write
    net_tcp.o(i.tcp_send_reset) refers to net_mem.o(i.net_mem_alloc) for net_mem_alloc
    net_tcp.o(i.tcp_send_reset) refers to net_tcp.o(i.tcp_write) for tcp_write
    net_tcp.o(i.tcp_send_reset) refers to net_mem.o(i.net_mem_free) for net_mem_free
    net_tcp.o(i.tcp_transit) refers to net_tcp.o(i.tcp_que_free) for tcp_que_free
    net_tcp.o(i.tcp_transit) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(i.tcp_write) refers to net_ip4.o(i.net_ip4_tx_offl_hl) for net_ip4_tx_offl_hl
    net_tcp.o(i.tcp_write) refers to net_ip4.o(i.net_ip4_get_local) for net_ip4_get_local
    net_tcp.o(i.tcp_write) refers to net_ip4.o(i.net_ip4_chksum) for net_ip4_chksum
    net_tcp.o(i.tcp_write) refers to net_ip4.o(i.net_ip4_send_frame) for net_ip4_send_frame
    net_tcp.o(i.tcp_write) refers to net_config.o(.rodata.net_tcp_config) for net_tcp_config
    net_tcp.o(.constdata) refers to net_tcp.o(.conststring) for .conststring
    net_ping_core.o(i.netPing_Echo) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_ping_core.o(i.netPing_Echo) refers to net_ping_core.o(i.net_ping_client_start) for net_ping_client_start
    net_ping_core.o(i.netPing_Echo) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_ping_core.o(i.net_ping_client_init) refers to net_ping_core.o(.bss) for .bss
    net_ping_core.o(i.net_ping_client_run) refers to net_ping_core.o(i.ping_send_req) for ping_send_req
    net_ping_core.o(i.net_ping_client_run) refers to net_ping_core.o(.bss) for .bss
    net_ping_core.o(i.net_ping_client_run) refers to net_sys.o(.bss) for net_sys_control
    net_ping_core.o(i.net_ping_client_start) refers to net_addr.o(i.net_addr_is_unspec) for net_addr_is_unspec
    net_ping_core.o(i.net_ping_client_start) refers to net_addr.o(i.net_addr_copy) for net_addr_copy
    net_ping_core.o(i.net_ping_client_start) refers to net_addr.o(i.net_addr_find_route) for net_addr_find_route
    net_ping_core.o(i.net_ping_client_start) refers to net_addr.o(i.net_addr_get_local) for net_addr_get_local
    net_ping_core.o(i.net_ping_client_start) refers to net_sys.o(i.net_rand32) for net_rand32
    net_ping_core.o(i.net_ping_client_start) refers to net_ping_core.o(i.ping_send_req) for ping_send_req
    net_ping_core.o(i.net_ping_client_start) refers to net_ping_core.o(.bss) for .bss
    net_ping_core.o(i.net_ping_client_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_ping_core.o(i.net_ping_client_uninit) refers to net_ping_core.o(.bss) for .bss
    net_ping_core.o(i.ping_send_req) refers to net_icmp.o(i.net_icmp_send_echo) for net_icmp_send_echo
    net_ping_core.o(i.ping_send_req) refers to net_ping_core.o(.bss) for .bss
    net_sys.o(i.netCore_Thread) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netCore_Thread) refers to net_config.o(.text.netos_timer_start) for netos_timer_start
    net_sys.o(i.netCore_Thread) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netCore_Thread) refers to net_config.o(.text.netos_flag_wait) for netos_flag_wait
    net_sys.o(i.netCore_Thread) refers to net_sys.o(i.sys_proc_tick) for sys_proc_tick
    net_sys.o(i.netCore_Thread) refers to net_config.o(.text.netos_flag_clear) for netos_flag_clear
    net_sys.o(i.netCore_Thread) refers to net_config.o(.text.netos_thread_pass) for netos_thread_pass
    net_sys.o(i.netCore_Thread) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.netCore_Thread) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_sys.o(i.netIF_GetOption) refers to net_sys.o(i.net_if_map_all) for net_if_map_all
    net_sys.o(i.netIF_GetOption) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netIF_GetOption) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netIF_GetOption) refers to net_config.o(.rodata.netif_getopt_func) for netif_getopt_func
    net_sys.o(i.netIF_SetDefault) refers to net_sys.o(i.net_if_map_all) for net_if_map_all
    net_sys.o(i.netIF_SetDefault) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netIF_SetDefault) refers to net_ip4.o(i.net_ip4_set_netif) for net_ip4_set_netif
    net_sys.o(i.netIF_SetDefault) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netIF_SetOption) refers to net_sys.o(i.net_if_map_all) for net_if_map_all
    net_sys.o(i.netIF_SetOption) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netIF_SetOption) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netIF_SetOption) refers to net_config.o(.rodata.netif_setopt_func) for netif_setopt_func
    net_sys.o(i.netInitialize) refers to net_config.o(.text.netos_init) for netos_init
    net_sys.o(i.netInitialize) refers to net_config.o(.text.netos_mutex_create) for netos_mutex_create
    net_sys.o(i.netInitialize) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netInitialize) refers to net_mem.o(i.net_mem_init) for net_mem_init
    net_sys.o(i.netInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_sys.o(i.netInitialize) refers to net_config.o(.text.netos_thread_create) for netos_thread_create
    net_sys.o(i.netInitialize) refers to bsp_stm32h7.o(.text.net_sys_error) for net_sys_error
    net_sys.o(i.netInitialize) refers to net_config.o(.text.netos_timer_create) for netos_timer_create
    net_sys.o(i.netInitialize) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netInitialize) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.netInitialize) refers to net_version.o(.constdata) for net_lib_version
    net_sys.o(i.netInitialize) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_sys.o(i.netSYS_GetHostName) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.netSYS_SetHostName) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netSYS_SetHostName) refers to strlen.o(.text) for strlen
    net_sys.o(i.netSYS_SetHostName) refers to net_common.o(i.net_strcpy) for net_strcpy
    net_sys.o(i.netSYS_SetHostName) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netSYS_SetHostName) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.netUninitialize) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.netUninitialize) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.netUninitialize) refers to net_config.o(.text.netos_timer_delete) for netos_timer_delete
    net_sys.o(i.netUninitialize) refers to net_config.o(.text.netos_thread_delete) for netos_thread_delete
    net_sys.o(i.netUninitialize) refers to net_config.o(.text.netos_mutex_delete) for netos_mutex_delete
    net_sys.o(i.netUninitialize) refers to net_mem.o(i.net_mem_uninit) for net_mem_uninit
    net_sys.o(i.netUninitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_sys.o(i.netUninitialize) refers to net_config.o(.rodata.net_sys_fn_uninit) for net_sys_fn_uninit
    net_sys.o(i.netUninitialize) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.net_if_map_all) refers to net_sys.o(i.sys_map_if) for sys_map_if
    net_sys.o(i.net_if_map_all) refers to net_config.o(.rodata.net_if_list_all) for net_if_list_all
    net_sys.o(i.net_if_map_lan) refers to net_sys.o(i.sys_map_if) for sys_map_if
    net_sys.o(i.net_if_map_lan) refers to net_config.o(.rodata.net_if_list_lan) for net_if_list_lan
    net_sys.o(i.net_path) refers to net_common.o(i.net_strcpy) for net_strcpy
    net_sys.o(i.net_path) refers to net_common.o(i.net_strncpy) for net_strncpy
    net_sys.o(i.net_path) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_sys.o(i.net_rand32) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.net_sys_lock) refers to net_config.o(.text.netos_lock) for netos_lock
    net_sys.o(i.net_sys_lock) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.net_sys_resume) refers to net_config.o(.text.netos_flag_set) for netos_flag_set
    net_sys.o(i.net_sys_suspend) refers to net_config.o(.text.netos_thread_id) for netos_thread_id
    net_sys.o(i.net_sys_suspend) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.net_sys_suspend) refers to net_config.o(.text.netos_flag_wait) for netos_flag_wait
    net_sys.o(i.net_sys_suspend) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.net_sys_tick) refers to net_sys.o(i.net_sys_wakeup) for net_sys_wakeup
    net_sys.o(i.net_sys_tick) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.net_sys_unlock) refers to net_config.o(.text.netos_unlock) for netos_unlock
    net_sys.o(i.net_sys_unlock) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.net_sys_wait) refers to net_sys.o(i.net_sys_unlock) for net_sys_unlock
    net_sys.o(i.net_sys_wait) refers to net_config.o(.text.netos_flag_wait) for netos_flag_wait
    net_sys.o(i.net_sys_wait) refers to net_sys.o(i.net_sys_lock) for net_sys_lock
    net_sys.o(i.net_sys_wakeup) refers to net_config.o(.text.netos_flag_set) for netos_flag_set
    net_sys.o(i.net_sys_wakeup) refers to net_sys.o(.bss) for .bss
    net_sys.o(i.sys_proc_tick) refers to net_sys.o(i.net_rand32) for net_rand32
    net_sys.o(i.sys_proc_tick) refers to net_sys.o(.bss) for .bss
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    net_ip4.o(i.ip4_get_chksum) refers to net_common.o(i.net_chksum_buf) for net_chksum_buf
    net_ip4.o(i.net_ip4_chk_frame) refers to net_ip4.o(i.net_ip4_is_subcast) for net_ip4_is_subcast
    net_ip4.o(i.net_ip4_chk_frame) refers to net_config.o(.text.net_igmp_is_member) for net_igmp_is_member
    net_ip4.o(i.net_ip4_chk_frame) refers to net_ip4.o(i.ip4_get_chksum) for ip4_get_chksum
    net_ip4.o(i.net_ip4_chk_frame) refers to net_ip4.o(i.ip4_get_mtu) for ip4_get_mtu
    net_ip4.o(i.net_ip4_chk_frame) refers to net_sys.o(.bss) for net_sys_control
    net_ip4.o(i.net_ip4_chk_frame) refers to net_ip4.o(.constdata) for .constdata
    net_ip4.o(i.net_ip4_chk_frame) refers to net_addr.o(.constdata) for net_addr_bcast
    net_ip4.o(i.net_ip4_chksum) refers to net_common.o(i.net_chksum_buf) for net_chksum_buf
    net_ip4.o(i.net_ip4_chksum_buf) refers to net_common.o(i.net_chksum_buf) for net_chksum_buf
    net_ip4.o(i.net_ip4_def_localm) refers to net_ip4.o(.data) for .data
    net_ip4.o(i.net_ip4_find_route) refers to net_ip4.o(i.net_ip4_is_onlink) for net_ip4_is_onlink
    net_ip4.o(i.net_ip4_find_route) refers to net_addr.o(.constdata) for net_addr_bcast
    net_ip4.o(i.net_ip4_find_route) refers to net_ip4.o(.constdata) for .constdata
    net_ip4.o(i.net_ip4_find_route) refers to net_loopback.o(.constdata) for net_loop_if_config
    net_ip4.o(i.net_ip4_find_route) refers to net_config.o(.rodata.net_if_link_def) for net_if_link_def
    net_ip4.o(i.net_ip4_find_route) refers to net_config.o(.rodata.net_if_list_all) for net_if_list_all
    net_ip4.o(i.net_ip4_find_route) refers to net_ip4.o(.data) for .data
    net_ip4.o(i.net_ip4_get_local) refers to net_ip4.o(.constdata) for .constdata
    net_ip4.o(i.net_ip4_init) refers to net_ip4.o(.data) for .data
    net_ip4.o(i.net_ip4_init) refers to net_config.o(.rodata.net_if_inet_def) for net_if_inet_def
    net_ip4.o(i.net_ip4_reass_frame) refers to net_ip4_frag.o(i.net_ip4_frag_add) for net_ip4_frag_add
    net_ip4.o(i.net_ip4_send_frame) refers to net_ip4.o(i.net_ip4_get_local) for net_ip4_get_local
    net_ip4.o(i.net_ip4_send_frame) refers to net_ip4.o(i.ip4_get_mtu) for ip4_get_mtu
    net_ip4.o(i.net_ip4_send_frame) refers to net_ip4_frag.o(i.net_ip4_frag_get) for net_ip4_frag_get
    net_ip4.o(i.net_ip4_send_frame) refers to net_ip4.o(i.ip4_get_chksum) for ip4_get_chksum
    net_ip4.o(i.net_ip4_send_frame) refers to net_sys.o(.bss) for net_sys_control
    net_ip4.o(i.net_ip4_send_frame) refers to net_ip4.o(.data) for .data
    net_ip4.o(i.net_ip4_set_netif) refers to net_ip4.o(.data) for .data
    net_ip4.o(i.net_ip4_uninit) refers to net_ip4.o(.data) for .data
    net_mem.o(i.mem_lock) refers to net_config.o(.text.netos_lock) for netos_lock
    net_mem.o(i.mem_lock) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.mem_unlock) refers to net_config.o(.text.netos_unlock) for netos_unlock
    net_mem.o(i.mem_unlock) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_alloc) refers to net_mem.o(i.mem_lock) for mem_lock
    net_mem.o(i.net_mem_alloc) refers to net_mem.o(i.mem_unlock) for mem_unlock
    net_mem.o(i.net_mem_alloc) refers to bsp_stm32h7.o(.text.net_sys_error) for net_sys_error
    net_mem.o(i.net_mem_alloc) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_alloc) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_mem.o(i.net_mem_avail) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_free) refers to net_mem.o(i.mem_lock) for mem_lock
    net_mem.o(i.net_mem_free) refers to net_mem.o(i.mem_unlock) for mem_unlock
    net_mem.o(i.net_mem_free) refers to bsp_stm32h7.o(.text.net_sys_error) for net_sys_error
    net_mem.o(i.net_mem_free) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_mem.o(i.net_mem_free) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_init) refers to net_config.o(.text.netos_mutex_create) for netos_mutex_create
    net_mem.o(i.net_mem_init) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_mem.o(i.net_mem_init) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_shrink) refers to net_mem.o(i.mem_lock) for mem_lock
    net_mem.o(i.net_mem_shrink) refers to net_mem.o(i.mem_unlock) for mem_unlock
    net_mem.o(i.net_mem_shrink) refers to net_mem.o(.bss) for .bss
    net_mem.o(i.net_mem_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    net_mem.o(i.net_mem_uninit) refers to net_config.o(.text.netos_mutex_delete) for netos_mutex_delete
    net_mem.o(i.net_mem_uninit) refers to net_config.o(.rodata.net_sys_config) for net_sys_config
    net_mem.o(i.net_mem_uninit) refers to net_mem.o(.bss) for .bss
    net_common.o(i.i2str) refers to net_common.o(i.ul2str) for ul2str
    net_common.o(i.net_bin2hex) refers to net_common.o(.constdata) for .constdata
    net_common.o(i.net_crc_buf) refers to net_common.o(i.crc32_8bit) for crc32_8bit
    net_common.o(i.net_itoa) refers to net_common.o(i.i2str) for i2str
    net_common.o(i.net_itoa_n) refers to net_common.o(i.i2str) for i2str
    net_common.o(i.net_itoa_n0) refers to net_common.o(i.i2str) for i2str
    net_common.o(i.net_strcrc) refers to net_common.o(i.crc32_8bit) for crc32_8bit
    net_common.o(i.net_ultoa) refers to net_common.o(i.ul2str) for ul2str
    net_common.o(i.net_ultoa_n) refers to net_common.o(i.ul2str) for ul2str
    net_common.o(i.net_ultoa_n0) refers to net_common.o(i.ul2str) for ul2str
    net_common.o(i.net_ultox) refers to net_common.o(.constdata) for .constdata
    net_common.o(i.net_xtouc) refers to net_common.o(i.hex2uc) for hex2uc
    net_addr.o(i.ip4_ntoa) refers to net_common.o(i.net_itoa) for net_itoa
    net_addr.o(i.mac_ntoa) refers to net_common.o(i.net_bin2hex) for net_bin2hex
    net_addr.o(i.mac_ntoa) refers to net_common.o(i.net_strtoupper) for net_strtoupper
    net_addr.o(i.netIP_aton) refers to net_addr.o(i.net_addr4_aton) for net_addr4_aton
    net_addr.o(i.netIP_ntoa) refers to net_addr.o(i.ip4_ntoa) for ip4_ntoa
    net_addr.o(i.netMAC_aton) refers to net_common.o(i.net_xtouc) for net_xtouc
    net_addr.o(i.netMAC_ntoa) refers to net_addr.o(i.mac_ntoa) for mac_ntoa
    net_addr.o(i.net_addr4_aton) refers to net_common.o(i.net_atoi) for net_atoi
    net_addr.o(i.net_addr4_ntoa) refers to net_addr.o(i.ip4_ntoa) for ip4_ntoa
    net_addr.o(i.net_addr4_ntoa) refers to net_addr.o(.bss) for .bss
    net_addr.o(i.net_addr_find_route) refers to net_ip4.o(i.net_ip4_find_route) for net_ip4_find_route
    net_addr.o(i.net_addr_get_lhost) refers to net_ip4.o(.constdata) for net_addr4_loopback
    net_addr.o(i.net_addr_get_local) refers to net_ip4.o(i.net_ip4_get_local) for net_ip4_get_local
    net_addr.o(i.net_addr_get_local) refers to net_addr.o(.constdata) for .constdata
    net_addr.o(i.net_addr_ntoa) refers to net_addr.o(i.net_addr4_ntoa) for net_addr4_ntoa
    net_addr.o(i.net_mac_ntoa) refers to net_addr.o(i.mac_ntoa) for mac_ntoa
    net_addr.o(i.net_mac_ntoa) refers to net_addr.o(.bss) for .bss
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    dfixu.o(x$fpl$dfixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixu) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixur) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32h755xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    net_version.o(.ARM.RL_ARM1) refers to net_version.o(.ARM.RL_ARM2) for .ARM.RL_ARM2
    net_version.o(.ARM.RL_ARM2) refers to net_version.o(.ARM.RL_ARM3) for .ARM.RL_ARM3
    net_version.o(.ARM.RL_ARM3) refers to net_version.o(.ARM.RL_ARM4) for .ARM.RL_ARM4
    net_version.o(.ARM.RL_ARM4) refers to net_version.o(.ARM.RL_ARM5) for .ARM.RL_ARM5
    net_version.o(.ARM.RL_ARM5) refers to net_version.o(.ARM.RL_ARM6) for .ARM.RL_ARM6
    net_version.o(.ARM.RL_ARM6) refers to net_version.o(.ARM.RL_ARM1) for .ARM.RL_ARM1


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.LMS_Load), (8 bytes).
    Removing main.o(.text.LMS_Save), (10 bytes).
    Removing main.o(.ARM.exidx.text.LMS_Save), (8 bytes).
    Removing main.o(.text.HAL_Delay), (116 bytes).
    Removing main.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing main.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.ErrorHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.assert_failed), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing task.o(.text), (0 bytes).
    Removing task.o(.text.netDHCP_Notify), (136 bytes).
    Removing task.o(.ARM.exidx.text.netDHCP_Notify), (8 bytes).
    Removing task.o(.ARM.exidx.text.app_main_task), (8 bytes).
    Removing task.o(.ARM.exidx.text.udp_cb_func), (8 bytes).
    Removing task.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing task.o(.rodata..L.str.18), (9 bytes).
    Removing sock.o(.text), (0 bytes).
    Removing sock.o(.ARM.exidx.text.app_sock_task), (8 bytes).
    Removing sock.o(.ARM.exidx.text.udp_cb_func), (8 bytes).
    Removing sock.o(.ARM.exidx.text.tcp_cb_func), (8 bytes).
    Removing sock.o(.ARM.exidx.text.tcp_sock_send), (8 bytes).
    Removing test.o(.text), (0 bytes).
    Removing test.o(.ARM.exidx.text.app_test_task), (8 bytes).
    Removing idle.o(.text), (0 bytes).
    Removing idle.o(.ARM.exidx.text.app_idle_task), (8 bytes).
    Removing idle.o(.ARM.exidx.text.udp_cb_func), (8 bytes).
    Removing bsp_stm32h7.o(.text), (0 bytes).
    Removing bsp_stm32h7.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing bsp_stm32h7.o(.ARM.exidx.text.net_sys_error), (8 bytes).
    Removing irq_stm32h7.o(.text), (0 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.DMA2_Stream2_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.UART4_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.UART5_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.USART6_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.UART7_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.UART8_IRQHandler), (8 bytes).
    Removing irq_stm32h7.o(.ARM.exidx.text.HSEM2_IRQHandler), (8 bytes).
    Removing msp_stm32h7.o(.text), (0 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing msp_stm32h7.o(.text.HAL_MspDeInit), (2 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_ETH_MspInit), (8 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_ETH_MspDeInit), (8 bytes).
    Removing msp_stm32h7.o(.text.HAL_UART_MspInit), (888 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing msp_stm32h7.o(.text.HAL_UART_MspDeInit), (384 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing msp_stm32h7.o(.text.HAL_ADC_MspDeInit), (120 bytes).
    Removing msp_stm32h7.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing led_stm32h7.o(.text), (0 bytes).
    Removing led_stm32h7.o(.text.LED_Init), (862 bytes).
    Removing led_stm32h7.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing led_stm32h7.o(.text.LED_DeInit), (376 bytes).
    Removing led_stm32h7.o(.ARM.exidx.text.LED_DeInit), (8 bytes).
    Removing led_stm32h7.o(.rodata.LED2), (4 bytes).
    Removing led_stm32h7.o(.rodata.str1.1), (28 bytes).
    Removing eth_stm32h7.o(.text), (0 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.ETH_IRQHandler), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_TxCpltCallback), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_RxCpltCallback), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.HAL_ETH_PMTCallback), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetVersion), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetCapabilities), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.Initialize), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.Uninitialize), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.PowerControl), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetMacAddress), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.SetMacAddress), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.SetAddressFilter), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.SendFrame), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.ReadFrame), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetRxFrameSize), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetRxFrameTime), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.GetTxFrameTime), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.ControlTimer), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.Control), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.PHY_Read), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.PHY_Write), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.crc32_data), (8 bytes).
    Removing eth_stm32h7.o(.ARM.exidx.text.crc32_8bit_rev), (8 bytes).
    Removing com_stm32h7.o(.text), (0 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing com_stm32h7.o(.text.HAL_UART_RxCpltCallback), (382 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing com_stm32h7.o(.text.UART_Init), (320 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing com_stm32h7.o(.text.UART_DeInit), (162 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.UART_DeInit), (8 bytes).
    Removing com_stm32h7.o(.text.MOT_Read), (312 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.MOT_Read), (8 bytes).
    Removing com_stm32h7.o(.text.UART_TransmitReceive), (310 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.UART_TransmitReceive), (8 bytes).
    Removing com_stm32h7.o(.text.MOT_Write), (326 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.MOT_Write), (8 bytes).
    Removing com_stm32h7.o(.text.MOT_Init), (154 bytes).
    Removing com_stm32h7.o(.ARM.exidx.text.MOT_Init), (8 bytes).
    Removing com_stm32h7.o(.data.hMOT1), (24 bytes).
    Removing com_stm32h7.o(.data.hMOT2), (24 bytes).
    Removing com_stm32h7.o(.data.hMOT3), (24 bytes).
    Removing com_stm32h7.o(.data.hMOT4), (24 bytes).
    Removing com_stm32h7.o(.data.hMOT5), (24 bytes).
    Removing com_stm32h7.o(.data.hMOT6), (24 bytes).
    Removing adc_stm32h7.o(.text), (0 bytes).
    Removing adc_stm32h7.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing adc_stm32h7.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing eep_stm32h7.o(.text), (0 bytes).
    Removing eep_stm32h7.o(.ARM.exidx.text.EEP_Init), (8 bytes).
    Removing eep_stm32h7.o(.text.EEP_DeInit), (4 bytes).
    Removing eep_stm32h7.o(.ARM.exidx.text.EEP_DeInit), (8 bytes).
    Removing eep_stm32h7.o(.ARM.exidx.text.EEP_ReadVariable), (8 bytes).
    Removing eep_stm32h7.o(.ARM.exidx.text.EEP_WriteVariable), (8 bytes).
    Removing fifo.o(.text), (0 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_InitQueue), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_FlushQueue), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_GetCount), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_GetAvailable), (8 bytes).
    Removing fifo.o(.text.FIFO_IsEmpty), (46 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_IsEmpty), (8 bytes).
    Removing fifo.o(.text.FIFO_IsFull), (52 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_IsFull), (8 bytes).
    Removing fifo.o(.text.FIFO_GetQueue), (58 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_GetQueue), (8 bytes).
    Removing fifo.o(.text.FIFO_PeekQueue), (54 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_PeekQueue), (8 bytes).
    Removing fifo.o(.text.FIFO_PutQueue), (68 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_PutQueue), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_PushQueue), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_PullQueue), (8 bytes).
    Removing crc.o(.text), (0 bytes).
    Removing crc.o(.text.CRC_Calculate16), (116 bytes).
    Removing crc.o(.ARM.exidx.text.CRC_Calculate16), (8 bytes).
    Removing crc.o(.rodata.CRCHI), (256 bytes).
    Removing crc.o(.rodata.CRCLO), (256 bytes).
    Removing modbus.o(.text), (0 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_GetStatus), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_SetStatus), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_GetRegister), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_SetRegister), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ReplyToQuery), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ReadCoilStatus), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ReadInputStatus), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ReadHoldingRegisters), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ReadInputRegisters), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ForceSingleCoil), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_PresetSingleRegister), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_ForceMultipleCoils), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MODBUS_PresetMultipleRegisters), (8 bytes).
    Removing eeprom.o(.text), (0 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_Init), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_VerifyPageFullyErased), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_Format), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_ReadVariable), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_VerifyPageFullWriteVariable), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_FindValidPage), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_WriteVariable), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EE_PageTransfer), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.evr_initialize), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (150 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (1696 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.text.osRtxErrorNotify), (46 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing phy_lan8742a.o(.text), (0 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.GetVersion), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.Initialize), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.Uninitialize), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.PowerControl), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.SetInterface), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.SetMode), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.GetLinkState), (8 bytes).
    Removing phy_lan8742a.o(.ARM.exidx.text.GetLinkInfo), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (388 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.text.EventCheckFilter), (60 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.text.GetContext), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord2), (90 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord4), (150 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.text.atomic_inc8), (36 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text._sys_open), (132 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.text._sys_close), (74 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.text._sys_write), (118 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.text.stdout_putchar), (124 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text._sys_read), (88 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.text._sys_istty), (72 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.text._sys_seek), (82 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.text._sys_flen), (72 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_io.o(.rodata.__stdin_name), (7 bytes).
    Removing retarget_io.o(.rodata.__stdout_name), (8 bytes).
    Removing retarget_io.o(.rodata.__stderr_name), (8 bytes).
    Removing retarget_io.o(.rodata.str1.1), (23 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.index), (4 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.buffer), (8 bytes).
    Removing stm32h7xx_hal.o(.text), (0 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_InitTick), (134 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DeInit), (184 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SetTickFreq), (156 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetHalVersion), (6 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (80 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (64 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (64 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF), (86 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF), (8 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_ETHInterfaceSelect), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_AnalogSwitchConfig), (206 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_AnalogSwitchConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableBOOST), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableBOOST), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableBOOST), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableBOOST), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_CM7BootAddConfig), (132 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CM7BootAddConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_CM4BootAddConfig), (132 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CM4BootAddConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableCM7BOOT), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableCM7BOOT), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableCM7BOOT), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableCM7BOOT), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableCM4BOOT), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableCM4BOOT), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableCM4BOOT), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableCM4BOOT), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EnableCompensationCell), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DisableCompensationCell), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_EnableIOSpeedOptimize), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOSpeedOptimize), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_DisableIOSpeedOptimize), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOSpeedOptimize), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeSelect), (64 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CompensationCodeSelect), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SYSCFG_CompensationCodeConfig), (94 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_CompensationCodeConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGSleepMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGSleepMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGSleepMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGSleepMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGStopMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGStopMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGStopMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGStopMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EnableDomain2DBGStandbyMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EnableDomain2DBGStandbyMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_DisableDomain2DBGStandbyMode), (18 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_DisableDomain2DBGStandbyMode), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_SetFMCMemorySwappingConfig), (76 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_SetFMCMemorySwappingConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_GetFMCMemorySwappingConfig), (16 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_GetFMCMemorySwappingConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_EdgeConfig), (432 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_EdgeConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_GenerateSWInterrupt), (282 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_GenerateSWInterrupt), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_D1_ClearFlag), (812 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D1_ClearFlag), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_D2_ClearFlag), (812 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D2_ClearFlag), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_D1_EventInputConfig), (1004 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D1_EventInputConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_D2_EventInputConfig), (1004 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D2_EventInputConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.text.HAL_EXTI_D3_EventInputConfig), (456 bytes).
    Removing stm32h7xx_hal.o(.ARM.exidx.text.HAL_EXTI_D3_EventInputConfig), (8 bytes).
    Removing stm32h7xx_hal.o(.data.uwTickPrio), (4 bytes).
    Removing stm32h7xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32h7xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32h7xx_hal_adc.o(.text), (0 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsDeepPowerDownEnabled), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableDeepPowerDown), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsInternalRegulatorEnabled), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetCommonClock), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_IsConversionOngoing), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_ConfigureBoostMode), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_DeInit), (804 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.ADC_ConversionStop), (520 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_ConversionStop), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_Disable), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_Start), (608 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetMultimode), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_Enable), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop), (202 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForConversion), (714 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultiDMATransfer), (16 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetMultiDMATransfer), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_IsTriggerSourceSWStart), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_PollForEvent), (486 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_IT), (804 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_IT), (214 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_SetDataTransferMode), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA), (298 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_GetValue), (90 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_IRQHandler), (1444 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart), (22 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_IsTriggerSourceSWStart), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetResolution), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetOffset), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetOffsetSignedSaturation), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetDataRightShift), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetChannelSingleDiff), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_GetCommonPathInternalCh), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig), (2676 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_SetAnalogWDMonitChannels), (68 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_SetAnalogWDMonitChannels), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD1), (14 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD1), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD1), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD1), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD1), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD1), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD2), (16 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD2), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD2), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD2), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD2), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD2), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_ClearFlag_AWD3), (16 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_AWD3), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_EnableIT_AWD3), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD3), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_DisableIT_AWD3), (18 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_DisableIT_AWD3), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_GetState), (88 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.HAL_ADC_GetError), (88 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_IsDisableOngoing), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StopConversion), (28 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_StopConversion), (28 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_INJ_StopConversion), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_Enable), (8 bytes).
    Removing stm32h7xx_hal_adc.o(.ARM.exidx.text.LL_ADC_Disable), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_Start), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_StartCalibration), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue), (138 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_GetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationOffsetFactor), (32 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCalibrationOffsetFactor), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_GetValue), (226 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_GetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsEnabled), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsConversionOngoing), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StopConversion), (28 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_StopConversion), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCalibrationLinearFactor), (84 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCalibrationLinearFactor), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_StartConversion), (28 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue), (314 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_SetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsConversionOngoing), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_IsConversionOngoing), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationOffsetFactor), (64 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCalibrationOffsetFactor), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_SetValue), (438 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_SetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCalibrationLinearFactor), (102 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCalibrationLinearFactor), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LinearCalibration_FactorLoad), (146 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LinearCalibration_FactorLoad), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart), (560 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetMultimode), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetMultimode), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_GetTrigAuto), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_GetTrigAuto), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_StartConversion), (28 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_StartConversion), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop), (228 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion), (604 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_IsTriggerSourceSWStart), (22 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_IsTriggerSourceSWStart), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_REG_IsTriggerSourceSWStart), (22 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_REG_IsTriggerSourceSWStart), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT), (652 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT), (240 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA), (556 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA), (478 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue), (124 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue), (248 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedQueueOverflowCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow2Callback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow3Callback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EndOfSamplingCallback), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop), (238 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT), (250 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_IT), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA), (318 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA), (504 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularMultiModeStop_DMA), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel), (5416 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetResolution), (76 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetResolution), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSamplingTime), (54 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffset), (50 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetOffset), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetOffsetSignedSaturation), (40 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetOffsetSignedSaturation), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetOffsetChannel), (30 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetOffsetChannel), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetChannelSingleDiff), (52 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetChannelSingleDiff), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_GetCommonPathInternalCh), (16 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_GetCommonPathInternalCh), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_SetCommonPathInternalCh), (26 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel), (972 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue), (158 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnableInjectedQueue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue), (148 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableInjectedQueue), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_INJ_SetQueueMode), (32 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_INJ_SetQueueMode), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator), (124 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableVoltageRegulator), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_DisableInternalRegulator), (24 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_DisableInternalRegulator), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode), (124 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnterADCDeepPowerDownMode), (8 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.text.LL_ADC_EnableDeepPowerDown), (30 bytes).
    Removing stm32h7xx_hal_adc_ex.o(.ARM.exidx.text.LL_ADC_EnableDeepPowerDown), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (910 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (96 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriority), (66 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (50 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (48 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (50 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (64 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (50 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (48 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (50 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.__NVIC_GetActive), (64 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (88 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32h7xx_hal_cortex.o(.ARM.exidx.text.HAL_GetCurrentCPUID), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text), (0 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcDMAMUXChannelBaseAndMask), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcDMAMUXRequestGenBaseAndMask), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_Start), (792 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (2748 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (190 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (224 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_GetState), (14 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32h7xx_hal_dma.o(.text.HAL_DMA_GetError), (12 bytes).
    Removing stm32h7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (1968 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (480 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (3034 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (430 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync), (1246 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator), (1156 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator), (514 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator), (514 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler), (148 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_dma_ex.o(.rodata.str1.1), (119 bytes).
    Removing stm32h7xx_hal_eth.o(.text), (0 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Init), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_MspInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MspInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_MAC_MDIO_ClkConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_MACDMAConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_DMATxDescListInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_DMARxDescListInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DeInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DescAssignMemory), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_Start), (144 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Start), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop), (124 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Stop), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit), (294 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Transmit), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_Prepare_Tx_Descriptors), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_Transmit_IT), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_IsRxDataAvailable), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataBuffer), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataLength), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataInfo), (306 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetRxDataInfo), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_BuildRxDescriptors), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_RxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_RxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_TxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_TxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_DMAErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_MACErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_PMTCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_PMTCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_EEECallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_WakeUpCallback), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_ReadPHYRegister), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_WritePHYRegister), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetDMAConfig), (212 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetDMAConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMACConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_SetMACConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_SetDMAConfig), (64 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetDMAConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.ETH_SetDMAConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMDIOClockRange), (220 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMDIOClockRange), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetMACFilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACFilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_SetSourceMACAddrMatch), (92 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetSourceMACAddrMatch), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_SetHashTable), (56 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetHashTable), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetRxVLANIdentifier), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_EnterPowerDownMode), (80 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_EnterPowerDownMode), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_ExitPowerDownMode), (74 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_ExitPowerDownMode), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_SetWakeUpFilter), (96 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_SetWakeUpFilter), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetState), (34 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetState), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetError), (12 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetError), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetDMAError), (12 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetDMAError), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACError), (12 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACError), (8 bytes).
    Removing stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACWakeUpSource), (14 bytes).
    Removing stm32h7xx_hal_eth.o(.ARM.exidx.text.HAL_ETH_GetMACWakeUpSource), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableARPOffload), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableARPOffload), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableARPOffload), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableARPOffload), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetARPAddressMatch), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetARPAddressMatch), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetL4FilterConfig), (126 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetL4FilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetL4FilterConfig), (144 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetL4FilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetL3FilterConfig), (224 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetL3FilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetL3FilterConfig), (268 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetL3FilterConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableL3L4Filtering), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableL3L4Filtering), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableL3L4Filtering), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableL3L4Filtering), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetRxVLANConfig), (160 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetRxVLANConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetRxVLANConfig), (110 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetRxVLANConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetVLANHashTable), (32 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetVLANHashTable), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetTxVLANConfig), (134 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetTxVLANConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetTxVLANConfig), (106 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetTxVLANConfig), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_SetTxVLANIdentifier), (68 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_SetTxVLANIdentifier), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnableVLANProcessing), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnableVLANProcessing), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_DisableVLANProcessing), (20 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_DisableVLANProcessing), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_EnterLPIMode), (72 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_EnterLPIMode), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_ExitLPIMode), (40 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_ExitLPIMode), (8 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.text.HAL_ETHEx_GetMACLPIEvent), (14 bytes).
    Removing stm32h7xx_hal_eth_ex.o(.ARM.exidx.text.HAL_ETHEx_GetMACLPIEvent), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text), (0 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (444 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (964 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (88 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (50 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (104 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.FLASH_CRC_WaitForLastOperation), (336 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_CRC_WaitForLastOperation), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.FLASH_OB_WaitForLastOperation), (146 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.FLASH_OB_WaitForLastOperation), (8 bytes).
    Removing stm32h7xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32h7xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (492 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (510 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP), (164 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnableWRP), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP), (152 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisableWRP), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_RDPConfig), (80 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig), (1198 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_PCROPConfig), (356 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_PCROPConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig), (80 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BOR_LevelConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_BootAddConfig), (194 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BootAddConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_CM4BootAddConfig), (194 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_CM4BootAddConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_SecureAreaConfig), (364 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_SecureAreaConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (160 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP), (58 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetUser), (30 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR), (16 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBOR), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP), (96 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetPCROP), (124 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetPCROP), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetSecureArea), (124 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetSecureArea), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetBootAdd), (40 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBootAdd), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_OB_GetCM4BootAdd), (40 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetCM4BootAdd), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Unlock_Bank1), (88 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Unlock_Bank1), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Lock_Bank1), (20 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Lock_Bank1), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Unlock_Bank2), (88 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Unlock_Bank2), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Lock_Bank2), (20 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Lock_Bank2), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_ComputeCRC), (668 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ComputeCRC), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_AddSector), (108 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_CRC_AddSector), (8 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.text.FLASH_CRC_SelectAddress), (234 bytes).
    Removing stm32h7xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_CRC_SelectAddress), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (82 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (120 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (74 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (316 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (52 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32h7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text), (0 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Take), (128 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_Take), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FastTake), (84 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_FastTake), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IsSemTaken), (24 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_IsSemTaken), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_Release), (84 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_Release), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ReleaseAll), (96 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_ReleaseAll), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_SetClearKey), (56 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_SetClearKey), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_GetClearKey), (14 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_GetClearKey), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_ActivateNotification), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.text.HAL_HSEM_DeactivateNotification), (24 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_DeactivateNotification), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.ARM.exidx.text.HAL_HSEM_FreeCallback), (8 bytes).
    Removing stm32h7xx_hal_hsem.o(.rodata.str1.1), (117 bytes).
    Removing stm32h7xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DeInit), (2 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (332 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (224 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (222 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (122 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (212 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (108 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (102 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32h7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32h7xx_hal_pwr.o(.rodata.str1.1), (116 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply), (342 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigSupply), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetSupplyConfig), (16 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetSupplyConfig), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (430 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlStopModeVoltageScaling), (82 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlStopModeVoltageScaling), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetStopModeVoltageRange), (16 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetStopModeVoltageRange), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOPMode), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearPendingEvent), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTANDBYMode), (230 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTANDBYMode), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigD3Domain), (66 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigD3Domain), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearDomainFlags), (138 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearDomainFlags), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_HoldCore), (162 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_HoldCore), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ReleaseCore), (88 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ReleaseCore), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableWakeUpPin), (588 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableWakeUpPin), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableWakeUpPin), (214 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableWakeUpPin), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetWakeupFlag), (100 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetWakeupFlag), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearWakeupFlag), (140 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ClearWakeupFlag), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WAKEUP_PIN_IRQHandler), (232 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WAKEUP_PIN_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP1_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP1_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP2_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP2_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP3_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP3_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP4_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP4_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP5_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP5_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_WKUP6_Callback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_WKUP6_Callback), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (94 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (94 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBReg), (94 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUSBReg), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUSBReg), (94 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUSBReg), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBVoltageDetector), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUSBVoltageDetector), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUSBVoltageDetector), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUSBVoltageDetector), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging), (74 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMonitoring), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMonitoring), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMonitoring), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMonitoring), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetTemperatureLevel), (68 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetTemperatureLevel), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVBATLevel), (68 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVBATLevel), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigAVD), (290 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigAVD), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableAVD), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableAVD), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableAVD), (18 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableAVD), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_AVD_IRQHandler), (240 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_AVD_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_AVDCallback), (2 bytes).
    Removing stm32h7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_AVDCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_DeInit), (806 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (3614 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (2322 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (548 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (18 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (38 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (38 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (552 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (136 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (42 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32h7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc.o(.rodata.str1.1), (116 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (5736 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config), (782 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLL2_Config), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config), (790 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLL3_Config), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (756 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL1ClockFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL2ClockFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPLL3ClockFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD3PCLK1Freq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1PCLK1Freq), (38 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD1PCLK1Freq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD1SysClockFreq), (86 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetD1SysClockFreq), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS), (18 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS), (34 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT), (60 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig), (64 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_KerWakeUpStopCLKConfig), (64 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_KerWakeUpStopCLKConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableBootCore), (62 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableBootCore), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_WWDGxSysResetConfig), (62 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WWDGxSysResetConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSConfig), (458 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSConfig), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate), (18 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSGetSynchronizationInfo), (96 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSGetSynchronizationInfo), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRSWaitSynchronization), (328 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRSWaitSynchronization), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_IRQHandler), (272 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncOkCallback), (2 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_SyncOkCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_SyncWarnCallback), (2 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_SyncWarnCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ExpectedSyncCallback), (2 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_ExpectedSyncCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_CRS_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_CRS_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler), (42 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback), (2 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback), (8 bytes).
    Removing stm32h7xx_hal_rcc_ex.o(.rodata.str1.1), (119 bytes).
    Removing stm32h7xx_hal_tim.o(.text), (0 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init), (590 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig), (410 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (442 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start), (496 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (336 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT), (508 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (348 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (580 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (42 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (22 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMAError), (154 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (302 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Init), (590 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (442 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start), (1162 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd), (334 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (922 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (1248 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (1008 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (1710 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (188 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (116 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (1040 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (590 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (442 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (1162 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (922 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (1248 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (1008 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (1710 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (1040 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Init), (590 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (442 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start), (1204 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (828 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (1290 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (914 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (1816 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMACaptureCplt), (212 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (116 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (1120 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (600 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (392 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (296 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (290 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (320 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (314 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (988 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (392 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (454 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (510 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (502 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (558 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (1026 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (590 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler), (692 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (1154 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig), (456 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig), (484 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig), (476 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig), (254 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC5_SetConfig), (202 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_OC6_SetConfig), (204 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (1088 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI1_SetConfig), (278 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI2_SetConfig), (108 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI3_SetConfig), (106 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI4_SetConfig), (108 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (1424 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (1224 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (54 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (1314 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMATriggerCplt), (42 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (22 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (216 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (54 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (1314 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (216 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (392 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (682 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_ETR_SetConfig), (52 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (2268 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage), (80 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_ITRx_SetConfig), (48 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage), (82 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (218 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (568 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (1732 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (568 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (726 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (12 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (686 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (136 bytes).
    Removing stm32h7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32h7xx_hal_tim.o(.rodata.str1.1), (116 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (710 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (390 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (468 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (240 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (480 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (252 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (562 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (248 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (570 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd), (54 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (380 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (650 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (484 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (978 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (188 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (116 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (472 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (570 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (380 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (650 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (484 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (978 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (472 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (358 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (354 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (382 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (378 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (474 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (474 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (516 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (30 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (30 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (878 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (818 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput), (666 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (614 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection), (788 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (192 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (14 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (268 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32h7xx_hal_tim_ex.o(.rodata.str1.1), (119 bytes).
    Removing stm32h7xx_hal_uart.o(.text), (0 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Init), (536 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_SetConfig), (2910 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig), (910 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_CheckIdleState), (168 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (352 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_LIN_Init), (426 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (256 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_DeInit), (302 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit), (342 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout), (268 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Receive), (476 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (310 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT_FIFOEN), (152 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT_FIFOEN), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT_FIFOEN), (142 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT_FIFOEN), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_TxISR_16BIT), (100 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_TxISR_8BIT), (90 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_IT), (168 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_Start_Receive_IT), (406 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA), (298 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMATransmitCplt), (70 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMATxHalfCplt), (22 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMAError), (128 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Receive_DMA), (168 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_Start_Receive_DMA), (226 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_DMAPause), (178 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_DMAResume), (150 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_DMAStop), (230 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_EndTxTransfer), (40 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Abort), (340 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (178 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive), (204 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_Abort_IT), (416 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMATxAbortCallback), (128 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMARxAbortCallback), (112 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (192 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (64 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (232 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (62 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config), (80 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout), (140 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout), (140 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode), (88 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode), (88 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (20 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (106 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (106 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_LIN_SendBreak), (260 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_GetState), (30 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.HAL_UART_GetError), (14 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN), (534 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT_FIFOEN), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN), (530 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT_FIFOEN), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_RxISR_16BIT), (196 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_RxISR_8BIT), (192 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMAReceiveCplt), (136 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.text.UART_DMARxHalfCplt), (48 bytes).
    Removing stm32h7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing stm32h7xx_hal_uart.o(.rodata.UARTPrescTable), (24 bytes).
    Removing stm32h7xx_hal_uart.o(.rodata.str1.1), (117 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text), (0 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init), (474 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_WakeupCallback), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_RxFifoFullCallback), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_TxFifoEmptyCallback), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set), (128 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig), (428 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_StopModeWakeUpSourceConfig), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.UARTEx_Wakeup_AddressConfig), (98 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.UARTEx_Wakeup_AddressConfig), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableStopMode), (78 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableStopMode), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableStopMode), (78 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableStopMode), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableFifoMode), (298 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableFifoMode), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess), (134 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.UARTEx_SetNbDataToProcess), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode), (290 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableFifoMode), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold), (380 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_SetTxFifoThreshold), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold), (380 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_SetRxFifoThreshold), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle), (596 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT), (178 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA), (178 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.rodata.str1.1), (120 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.rodata.UARTEx_SetNbDataToProcess.numerator), (8 bytes).
    Removing stm32h7xx_hal_uart_ex.o(.rodata.UARTEx_SetNbDataToProcess.denominator), (8 bytes).
    Removing system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text), (0 bytes).
    Removing system_stm32h7xx_dualcore_boot_cm4_cm7.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemCoreClockUpdate), (760 bytes).
    Removing system_stm32h7xx_dualcore_boot_cm4_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing net_config.o(.text), (0 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_init), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_thread_create), (8 bytes).
    Removing net_config.o(.text.netos_thread_delete), (16 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_thread_delete), (8 bytes).
    Removing net_config.o(.text.netos_thread_id), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_thread_id), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_thread_pass), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_timer_create), (8 bytes).
    Removing net_config.o(.text.netos_timer_delete), (16 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_timer_delete), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_timer_start), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.ms2tick), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_mutex_create), (8 bytes).
    Removing net_config.o(.text.netos_mutex_delete), (16 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_mutex_delete), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_lock), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_unlock), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_flag_wait), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_flag_set), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_flag_clear), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netos_delay), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netif_create), (8 bytes).
    Removing net_config.o(.text.netif_delete), (24 bytes).
    Removing net_config.o(.ARM.exidx.text.netif_delete), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netif_lock), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.netif_unlock), (8 bytes).
    Removing net_config.o(.text.netIGMP_Join), (12 bytes).
    Removing net_config.o(.ARM.exidx.text.netIGMP_Join), (8 bytes).
    Removing net_config.o(.text.netIGMP_Leave), (12 bytes).
    Removing net_config.o(.ARM.exidx.text.netIGMP_Leave), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.net_igmp_is_member), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.net_igmp_collect_mcast), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.net_igmp_process), (8 bytes).
    Removing net_config.o(.text.netDHCP_Enable), (10 bytes).
    Removing net_config.o(.ARM.exidx.text.netDHCP_Enable), (8 bytes).
    Removing net_config.o(.text.netDHCP_Disable), (10 bytes).
    Removing net_config.o(.ARM.exidx.text.netDHCP_Disable), (8 bytes).
    Removing net_config.o(.text.netDHCP_SetOption), (18 bytes).
    Removing net_config.o(.ARM.exidx.text.netDHCP_SetOption), (8 bytes).
    Removing net_config.o(.text.netSNTPc_GetTime), (12 bytes).
    Removing net_config.o(.ARM.exidx.text.netSNTPc_GetTime), (8 bytes).
    Removing net_config.o(.text.net_sys_error), (50 bytes).
    Removing net_config.o(.ARM.exidx.text.net_sys_error), (8 bytes).
    Removing net_config.o(.ARM.exidx.text.eth0_callback), (8 bytes).
    Removing net_config.o(.rodata.net_if_list_lan), (8 bytes).
    Removing net_config.o(.rodata.net_sys_fn_uninit), (32 bytes).
    Removing net_config.o(.rodata.netif_setopt_func), (16 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelPreInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (96 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing net_eth.o(i.eth_iface_uninit), (94 bytes).
    Removing net_eth.o(i.netETH_SendRaw), (124 bytes).
    Removing net_eth.o(i.net_eth_get_addr), (34 bytes).
    Removing net_eth.o(i.net_eth_iface_uninit), (28 bytes).
    Removing net_eth.o(i.net_eth_set_option), (296 bytes).
    Removing net_eth.o(.bss), (160 bytes).
    Removing net_arp.o(i.arp_probe_start), (86 bytes).
    Removing net_arp.o(i.netARP_CacheIP), (94 bytes).
    Removing net_arp.o(i.netARP_CacheMAC), (184 bytes).
    Removing net_arp.o(i.netARP_ClearCache), (94 bytes).
    Removing net_arp.o(i.netARP_GetIP), (98 bytes).
    Removing net_arp.o(i.netARP_GetMAC), (72 bytes).
    Removing net_arp.o(i.netARP_Probe), (56 bytes).
    Removing net_arp.o(i.netARP_ProbeX), (118 bytes).
    Removing net_arp.o(i.net_arp_cache_uninit), (44 bytes).
    Removing net_arp.o(i.net_arp_find_mac), (44 bytes).
    Removing net_arp.o(i.net_arp_probe), (18 bytes).
    Removing net_arp.o(.bss), (24 bytes).
    Removing net_arp.o(.bss), (24 bytes).
    Removing net_arp.o(.bss), (24 bytes).
    Removing net_loopback.o(i.net_loop_iface_uninit), (16 bytes).
    Removing net_ip4_frag.o(i.net_ip4_frag_uninit), (16 bytes).
    Removing net_icmp.o(i.netICMP_SetNoEcho), (28 bytes).
    Removing net_icmp.o(.data), (1 bytes).
    Removing net_icmp.o(.data), (1 bytes).
    Removing net_icmp.o(.data), (1 bytes).
    Removing net_icmp.o(.data), (1 bytes).
    Removing net_icmp.o(.data), (1 bytes).
    Removing net_udp.o(i.netUDP_Close), (24 bytes).
    Removing net_udp.o(i.netUDP_GetLocalPort), (4 bytes).
    Removing net_udp.o(i.netUDP_ReleaseSocket), (24 bytes).
    Removing net_udp.o(i.netUDP_SetOption), (32 bytes).
    Removing net_udp.o(i.net_udp_close), (40 bytes).
    Removing net_udp.o(i.net_udp_enable_lla), (40 bytes).
    Removing net_udp.o(i.net_udp_free_buf), (6 bytes).
    Removing net_udp.o(i.net_udp_get_local_port), (44 bytes).
    Removing net_udp.o(i.net_udp_get_option), (72 bytes).
    Removing net_udp.o(i.net_udp_keep_buf), (56 bytes).
    Removing net_udp.o(i.net_udp_release_socket), (56 bytes).
    Removing net_udp.o(i.net_udp_send), (18 bytes).
    Removing net_udp.o(i.net_udp_set_option), (108 bytes).
    Removing net_udp.o(i.net_udp_socket_uninit), (16 bytes).
    Removing net_tcp.o(i.netTCP_Close), (24 bytes).
    Removing net_tcp.o(i.netTCP_Connect), (32 bytes).
    Removing net_tcp.o(i.netTCP_GetLocalPort), (4 bytes).
    Removing net_tcp.o(i.netTCP_GetMaxSegmentSize), (4 bytes).
    Removing net_tcp.o(i.netTCP_GetPeer), (32 bytes).
    Removing net_tcp.o(i.netTCP_GetTimer), (4 bytes).
    Removing net_tcp.o(i.netTCP_ReleaseSocket), (24 bytes).
    Removing net_tcp.o(i.netTCP_ResetReceiveWindow), (24 bytes).
    Removing net_tcp.o(i.net_tcp_alloc_port), (76 bytes).
    Removing net_tcp.o(i.net_tcp_close), (160 bytes).
    Removing net_tcp.o(i.net_tcp_connect), (212 bytes).
    Removing net_tcp.o(i.net_tcp_ctrl_opt), (64 bytes).
    Removing net_tcp.o(i.net_tcp_get_local_addr), (48 bytes).
    Removing net_tcp.o(i.net_tcp_get_local_port), (48 bytes).
    Removing net_tcp.o(i.net_tcp_get_mss), (36 bytes).
    Removing net_tcp.o(i.net_tcp_get_option), (88 bytes).
    Removing net_tcp.o(i.net_tcp_get_peer), (72 bytes).
    Removing net_tcp.o(i.net_tcp_get_peer_ptr), (40 bytes).
    Removing net_tcp.o(i.net_tcp_get_timer), (48 bytes).
    Removing net_tcp.o(i.net_tcp_ntoa), (12 bytes).
    Removing net_tcp.o(i.net_tcp_release_socket), (60 bytes).
    Removing net_tcp.o(i.net_tcp_reset_tout), (44 bytes).
    Removing net_tcp.o(i.net_tcp_reset_window), (80 bytes).
    Removing net_tcp.o(i.net_tcp_set_cb), (44 bytes).
    Removing net_tcp.o(i.net_tcp_socket_uninit), (20 bytes).
    Removing net_tcp.o(.constdata), (44 bytes).
    Removing net_tcp.o(.conststring), (112 bytes).
    Removing net_ping_core.o(i.netPing_Echo), (28 bytes).
    Removing net_ping_core.o(i.net_ping_client_start), (112 bytes).
    Removing net_ping_core.o(i.net_ping_client_uninit), (12 bytes).
    Removing net_sys.o(i.netIF_SetDefault), (40 bytes).
    Removing net_sys.o(i.netIF_SetOption), (120 bytes).
    Removing net_sys.o(i.netSYS_GetHostName), (12 bytes).
    Removing net_sys.o(i.netSYS_SetHostName), (52 bytes).
    Removing net_sys.o(i.netUninitialize), (80 bytes).
    Removing net_sys.o(i.net_if_map_lan), (12 bytes).
    Removing net_sys.o(i.net_path), (56 bytes).
    Removing net_sys.o(i.net_sys_suspend), (44 bytes).
    Removing net_sys.o(i.net_sys_wait), (26 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (168 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing net_ip4.o(i.net_ip4_def_localm), (16 bytes).
    Removing net_ip4.o(i.net_ip4_set_netif), (20 bytes).
    Removing net_ip4.o(i.net_ip4_uninit), (16 bytes).
    Removing net_mem.o(i.net_mem_uninit), (40 bytes).
    Removing net_common.o(i.i2str), (26 bytes).
    Removing net_common.o(i.net_bin2hex), (48 bytes).
    Removing net_common.o(i.net_itoa), (8 bytes).
    Removing net_common.o(i.net_itoa_n), (6 bytes).
    Removing net_common.o(i.net_itoa_n0), (6 bytes).
    Removing net_common.o(i.net_strcasecmp), (46 bytes).
    Removing net_common.o(i.net_strchr), (22 bytes).
    Removing net_common.o(i.net_strcmp), (26 bytes).
    Removing net_common.o(i.net_strcpy), (18 bytes).
    Removing net_common.o(i.net_strcrc), (26 bytes).
    Removing net_common.o(i.net_strnchr), (28 bytes).
    Removing net_common.o(i.net_strncpy), (26 bytes).
    Removing net_common.o(i.net_strnstr), (66 bytes).
    Removing net_common.o(i.net_strrchr), (28 bytes).
    Removing net_common.o(i.net_strstr), (50 bytes).
    Removing net_common.o(i.net_strtoupper), (32 bytes).
    Removing net_common.o(i.net_ultoa), (8 bytes).
    Removing net_common.o(i.net_ultoa_n), (6 bytes).
    Removing net_common.o(i.net_ultoa_n0), (6 bytes).
    Removing net_common.o(i.net_ultox), (48 bytes).
    Removing net_common.o(i.net_xtoul), (76 bytes).
    Removing net_common.o(i.ul2str), (68 bytes).
    Removing net_common.o(.constdata), (16 bytes).
    Removing net_addr.o(i.ip4_ntoa), (46 bytes).
    Removing net_addr.o(i.mac_ntoa), (62 bytes).
    Removing net_addr.o(i.netIP_aton), (16 bytes).
    Removing net_addr.o(i.netIP_ntoa), (30 bytes).
    Removing net_addr.o(i.netMAC_ntoa), (16 bytes).
    Removing net_addr.o(i.net_addr4_ntoa), (12 bytes).
    Removing net_addr.o(i.net_addr_comp), (30 bytes).
    Removing net_addr.o(i.net_addr_copy), (20 bytes).
    Removing net_addr.o(i.net_addr_get_lhost), (20 bytes).
    Removing net_addr.o(i.net_addr_ntoa), (20 bytes).
    Removing net_addr.o(i.net_mac_ntoa), (12 bytes).
    Removing net_addr.o(.bss), (34 bytes).
    Removing net_version.o(.ARM.RL_ARM1), (82 bytes).
    Removing net_version.o(.ARM.RL_ARM2), (76 bytes).
    Removing net_version.o(.ARM.RL_ARM3), (45 bytes).
    Removing net_version.o(.ARM.RL_ARM4), (65 bytes).
    Removing net_version.o(.ARM.RL_ARM5), (82 bytes).
    Removing net_version.o(.ARM.RL_ARM6), (77 bytes).

2153 unused section(s) (total 206810 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/dfixu.s                         0x00000000   Number         0  dfixu.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\Source\net_addr.c                     0x00000000   Number         0  net_addr.o ABSOLUTE
    ..\Source\net_arp.c                      0x00000000   Number         0  net_arp.o ABSOLUTE
    ..\Source\net_common.c                   0x00000000   Number         0  net_common.o ABSOLUTE
    ..\Source\net_eth.c                      0x00000000   Number         0  net_eth.o ABSOLUTE
    ..\Source\net_icmp.c                     0x00000000   Number         0  net_icmp.o ABSOLUTE
    ..\Source\net_ip4.c                      0x00000000   Number         0  net_ip4.o ABSOLUTE
    ..\Source\net_ip4_frag.c                 0x00000000   Number         0  net_ip4_frag.o ABSOLUTE
    ..\Source\net_loopback.c                 0x00000000   Number         0  net_loopback.o ABSOLUTE
    ..\Source\net_mem.c                      0x00000000   Number         0  net_mem.o ABSOLUTE
    ..\Source\net_ping_core.c                0x00000000   Number         0  net_ping_core.o ABSOLUTE
    ..\Source\net_sys.c                      0x00000000   Number         0  net_sys.o ABSOLUTE
    ..\Source\net_tcp.c                      0x00000000   Number         0  net_tcp.o ABSOLUTE
    ..\Source\net_udp.c                      0x00000000   Number         0  net_udp.o ABSOLUTE
    ..\Source\net_version.c                  0x00000000   Number         0  net_version.o ABSOLUTE
    ADC_STM32H7.c                            0x00000000   Number         0  adc_stm32h7.o ABSOLUTE
    BSP_STM32H7.c                            0x00000000   Number         0  bsp_stm32h7.o ABSOLUTE
    COM_STM32H7.c                            0x00000000   Number         0  com_stm32h7.o ABSOLUTE
    CRC.c                                    0x00000000   Number         0  crc.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_eth.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_arp.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_loopback.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_ip4_frag.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_icmp.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_udp.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_tcp.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_ping_core.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_sys.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_ip4.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_mem.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_common.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_addr.o ABSOLUTE
    D:\ARM\MW\Build\RL_ARM.s                 0x00000000   Number         0  net_version.o ABSOLUTE
    EEP_STM32H7.c                            0x00000000   Number         0  eep_stm32h7.o ABSOLUTE
    ETH_STM32H7.c                            0x00000000   Number         0  eth_stm32h7.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    FIFO.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    IRQ_STM32H7.c                            0x00000000   Number         0  irq_stm32h7.o ABSOLUTE
    LED_STM32H7.c                            0x00000000   Number         0  led_stm32h7.o ABSOLUTE
    MODBUS.c                                 0x00000000   Number         0  modbus.o ABSOLUTE
    MSP_STM32H7.c                            0x00000000   Number         0  msp_stm32h7.o ABSOLUTE
    Net_Config.c                             0x00000000   Number         0  net_config.o ABSOLUTE
    PHY_LAN8742A.c                           0x00000000   Number         0  phy_lan8742a.o ABSOLUTE
    RTE/Device/STM32H755ZITx_CM4/startup_stm32h755xx.s 0x00000000   Number         0  startup_stm32h755xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    eeprom.c                                 0x00000000   Number         0  eeprom.o ABSOLUTE
    idle.c                                   0x00000000   Number         0  idle.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    sock.c                                   0x00000000   Number         0  sock.o ABSOLUTE
    stm32h7xx_hal.c                          0x00000000   Number         0  stm32h7xx_hal.o ABSOLUTE
    stm32h7xx_hal_adc.c                      0x00000000   Number         0  stm32h7xx_hal_adc.o ABSOLUTE
    stm32h7xx_hal_adc_ex.c                   0x00000000   Number         0  stm32h7xx_hal_adc_ex.o ABSOLUTE
    stm32h7xx_hal_cortex.c                   0x00000000   Number         0  stm32h7xx_hal_cortex.o ABSOLUTE
    stm32h7xx_hal_dma.c                      0x00000000   Number         0  stm32h7xx_hal_dma.o ABSOLUTE
    stm32h7xx_hal_dma_ex.c                   0x00000000   Number         0  stm32h7xx_hal_dma_ex.o ABSOLUTE
    stm32h7xx_hal_eth.c                      0x00000000   Number         0  stm32h7xx_hal_eth.o ABSOLUTE
    stm32h7xx_hal_eth_ex.c                   0x00000000   Number         0  stm32h7xx_hal_eth_ex.o ABSOLUTE
    stm32h7xx_hal_flash.c                    0x00000000   Number         0  stm32h7xx_hal_flash.o ABSOLUTE
    stm32h7xx_hal_flash_ex.c                 0x00000000   Number         0  stm32h7xx_hal_flash_ex.o ABSOLUTE
    stm32h7xx_hal_gpio.c                     0x00000000   Number         0  stm32h7xx_hal_gpio.o ABSOLUTE
    stm32h7xx_hal_hsem.c                     0x00000000   Number         0  stm32h7xx_hal_hsem.o ABSOLUTE
    stm32h7xx_hal_pwr.c                      0x00000000   Number         0  stm32h7xx_hal_pwr.o ABSOLUTE
    stm32h7xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32h7xx_hal_pwr_ex.o ABSOLUTE
    stm32h7xx_hal_rcc.c                      0x00000000   Number         0  stm32h7xx_hal_rcc.o ABSOLUTE
    stm32h7xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32h7xx_hal_rcc_ex.o ABSOLUTE
    stm32h7xx_hal_tim.c                      0x00000000   Number         0  stm32h7xx_hal_tim.o ABSOLUTE
    stm32h7xx_hal_tim_ex.c                   0x00000000   Number         0  stm32h7xx_hal_tim_ex.o ABSOLUTE
    stm32h7xx_hal_uart.c                     0x00000000   Number         0  stm32h7xx_hal_uart.o ABSOLUTE
    stm32h7xx_hal_uart_ex.c                  0x00000000   Number         0  stm32h7xx_hal_uart_ex.o ABSOLUTE
    system_stm32h7xx_dualcore_boot_cm4_cm7.c 0x00000000   Number         0  system_stm32h7xx_dualcore_boot_cm4_cm7.o ABSOLUTE
    task.c                                   0x00000000   Number         0  task.o ABSOLUTE
    test.c                                   0x00000000   Number         0  test.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08100000   Section      664  startup_stm32h755xx.o(RESET)
    !!!main                                  0x08100298   Section        8  __main.o(!!!main)
    !!!scatter                               0x081002a0   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x081002d4   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x08100330   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0810034c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0810034e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08100352   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08100352   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08100354   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08100356   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08100356   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08100358   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08100358   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08100358   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0810035e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08100366   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0810036a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0810036a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08100372   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08100374   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08100374   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08100378   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08100380   Number         0  startup_stm32h755xx.o(.text)
    .text                                    0x08100380   Section       64  startup_stm32h755xx.o(.text)
    [Anonymous Symbol]                       0x081003c0   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x081003e8   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x081003f8   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x0810040a   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x08100420   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0810043c   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x0810043e   Number         0  irq_armv7m.o(.text)
    .text                                    0x08100488   Section        0  memcmp.o(.text)
    .text                                    0x081004e0   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0810056a   Section       68  rt_memclr.o(.text)
    .text                                    0x081005ae   Section       78  rt_memclr_w.o(.text)
    .text                                    0x081005fc   Section        0  heapauxi.o(.text)
    .text                                    0x08100602   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08100666   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x081006b0   Section        0  exit.o(.text)
    .text                                    0x081006c4   Section        8  libspace.o(.text)
    .text                                    0x081006cc   Section        0  sys_exit.o(.text)
    .text                                    0x081006d8   Section        2  use_no_semi.o(.text)
    .text                                    0x081006da   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x081006dc   Section        0  stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode)
    [Anonymous Symbol]                       0x081008f4   Section        0  stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt)
    [Anonymous Symbol]                       0x081009c8   Section        0  stm32h7xx_hal_adc.o(.text.ADC_DMAError)
    [Anonymous Symbol]                       0x081009f4   Section        0  stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt)
    [Anonymous Symbol]                       0x08100a0c   Section        0  stm32h7xx_hal_adc.o(.text.ADC_Disable)
    [Anonymous Symbol]                       0x08100ad0   Section        0  stm32h7xx_hal_adc.o(.text.ADC_Enable)
    [Anonymous Symbol]                       0x08100c18   Section        0  adc_stm32h7.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08100d78   Section        0  irq_stm32h7.o(.text.BusFault_Handler)
    Control                                  0x08100d8d   Thumb Code   706  eth_stm32h7.o(.text.Control)
    [Anonymous Symbol]                       0x08100d8c   Section        0  eth_stm32h7.o(.text.Control)
    ControlTimer                             0x08101051   Thumb Code    14  eth_stm32h7.o(.text.ControlTimer)
    [Anonymous Symbol]                       0x08101050   Section        0  eth_stm32h7.o(.text.ControlTimer)
    [Anonymous Symbol]                       0x08101060   Section        0  irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler)
    DMA_CalcBaseAndBitshift                  0x08101075   Thumb Code   458  stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    [Anonymous Symbol]                       0x08101074   Section        0  stm32h7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    DMA_CalcDMAMUXChannelBaseAndMask         0x08101241   Thumb Code   376  stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask)
    [Anonymous Symbol]                       0x08101240   Section        0  stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask)
    DMA_CalcDMAMUXRequestGenBaseAndMask      0x081013b9   Thumb Code   298  stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask)
    [Anonymous Symbol]                       0x081013b8   Section        0  stm32h7xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask)
    DMA_CheckFifoParam                       0x081014e5   Thumb Code   240  stm32h7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    [Anonymous Symbol]                       0x081014e4   Section        0  stm32h7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    DMA_SetConfig                            0x081015d5   Thumb Code  1300  stm32h7xx_hal_dma.o(.text.DMA_SetConfig)
    [Anonymous Symbol]                       0x081015d4   Section        0  stm32h7xx_hal_dma.o(.text.DMA_SetConfig)
    [Anonymous Symbol]                       0x08101ae8   Section        0  irq_stm32h7.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08101afc   Section        0  eep_stm32h7.o(.text.EEP_Init)
    [Anonymous Symbol]                       0x08101b4c   Section        0  eep_stm32h7.o(.text.EEP_ReadVariable)
    [Anonymous Symbol]                       0x08101b68   Section        0  eep_stm32h7.o(.text.EEP_WriteVariable)
    EE_FindValidPage                         0x08101bb5   Thumb Code   200  eeprom.o(.text.EE_FindValidPage)
    [Anonymous Symbol]                       0x08101bb4   Section        0  eeprom.o(.text.EE_FindValidPage)
    EE_Format                                0x08101c7d   Thumb Code   196  eeprom.o(.text.EE_Format)
    [Anonymous Symbol]                       0x08101c7c   Section        0  eeprom.o(.text.EE_Format)
    [Anonymous Symbol]                       0x08101d40   Section        0  eeprom.o(.text.EE_Init)
    EE_PageTransfer                          0x081021b1   Thumb Code   486  eeprom.o(.text.EE_PageTransfer)
    [Anonymous Symbol]                       0x081021b0   Section        0  eeprom.o(.text.EE_PageTransfer)
    [Anonymous Symbol]                       0x08102398   Section        0  eeprom.o(.text.EE_ReadVariable)
    EE_VerifyPageFullWriteVariable           0x08102451   Thumb Code   250  eeprom.o(.text.EE_VerifyPageFullWriteVariable)
    [Anonymous Symbol]                       0x08102450   Section        0  eeprom.o(.text.EE_VerifyPageFullWriteVariable)
    EE_VerifyPageFullyErased                 0x0810254d   Thumb Code    78  eeprom.o(.text.EE_VerifyPageFullyErased)
    [Anonymous Symbol]                       0x0810254c   Section        0  eeprom.o(.text.EE_VerifyPageFullyErased)
    [Anonymous Symbol]                       0x0810259c   Section        0  eeprom.o(.text.EE_WriteVariable)
    ETH_DMARxDescListInit                    0x081025dd   Thumb Code   146  stm32h7xx_hal_eth.o(.text.ETH_DMARxDescListInit)
    [Anonymous Symbol]                       0x081025dc   Section        0  stm32h7xx_hal_eth.o(.text.ETH_DMARxDescListInit)
    ETH_DMATxDescListInit                    0x08102671   Thumb Code   120  stm32h7xx_hal_eth.o(.text.ETH_DMATxDescListInit)
    [Anonymous Symbol]                       0x08102670   Section        0  stm32h7xx_hal_eth.o(.text.ETH_DMATxDescListInit)
    [Anonymous Symbol]                       0x081026e8   Section        0  eth_stm32h7.o(.text.ETH_IRQHandler)
    ETH_MACDMAConfig                         0x081026f9   Thumb Code   230  stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig)
    [Anonymous Symbol]                       0x081026f8   Section        0  stm32h7xx_hal_eth.o(.text.ETH_MACDMAConfig)
    ETH_MAC_MDIO_ClkConfig                   0x081027e1   Thumb Code   220  stm32h7xx_hal_eth.o(.text.ETH_MAC_MDIO_ClkConfig)
    [Anonymous Symbol]                       0x081027e0   Section        0  stm32h7xx_hal_eth.o(.text.ETH_MAC_MDIO_ClkConfig)
    ETH_Prepare_Tx_Descriptors               0x081028bd   Thumb Code  1232  stm32h7xx_hal_eth.o(.text.ETH_Prepare_Tx_Descriptors)
    [Anonymous Symbol]                       0x081028bc   Section        0  stm32h7xx_hal_eth.o(.text.ETH_Prepare_Tx_Descriptors)
    ETH_SetDMAConfig                         0x08102d8d   Thumb Code   214  stm32h7xx_hal_eth.o(.text.ETH_SetDMAConfig)
    [Anonymous Symbol]                       0x08102d8c   Section        0  stm32h7xx_hal_eth.o(.text.ETH_SetDMAConfig)
    ETH_SetMACConfig                         0x08102e65   Thumb Code   468  stm32h7xx_hal_eth.o(.text.ETH_SetMACConfig)
    [Anonymous Symbol]                       0x08102e64   Section        0  stm32h7xx_hal_eth.o(.text.ETH_SetMACConfig)
    [Anonymous Symbol]                       0x08103038   Section        0  main.o(.text.ErrorHandler)
    EventGetTS                               0x0810306d   Thumb Code    90  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x0810306c   Section        0  eventrecorder.o(.text.EventGetTS)
    EventRecordItem                          0x081030c9   Thumb Code   254  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x081030c8   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x081031c8   Section        0  eventrecorder.o(.text.EventRecorderDisable)
    [Anonymous Symbol]                       0x0810325c   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x081032f0   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x081034b4   Section        0  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x08103500   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x0810350c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    [Anonymous Symbol]                       0x08103518   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    [Anonymous Symbol]                       0x0810353c   Section        0  fifo.o(.text.FIFO_FlushQueue)
    [Anonymous Symbol]                       0x08103570   Section        0  fifo.o(.text.FIFO_GetAvailable)
    [Anonymous Symbol]                       0x081035a0   Section        0  fifo.o(.text.FIFO_GetCount)
    [Anonymous Symbol]                       0x081035d8   Section        0  fifo.o(.text.FIFO_InitQueue)
    [Anonymous Symbol]                       0x08103624   Section        0  fifo.o(.text.FIFO_PullQueue)
    [Anonymous Symbol]                       0x081036ac   Section        0  fifo.o(.text.FIFO_PushQueue)
    [Anonymous Symbol]                       0x08103738   Section        0  stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector)
    FLASH_MassErase                          0x08103819   Thumb Code   276  stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase)
    [Anonymous Symbol]                       0x08103818   Section        0  stm32h7xx_hal_flash_ex.o(.text.FLASH_MassErase)
    [Anonymous Symbol]                       0x0810392c   Section        0  stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation)
    GetCapabilities                          0x08103acd   Thumb Code    20  eth_stm32h7.o(.text.GetCapabilities)
    [Anonymous Symbol]                       0x08103acc   Section        0  eth_stm32h7.o(.text.GetCapabilities)
    GetLinkInfo                              0x08103ae1   Thumb Code    96  phy_lan8742a.o(.text.GetLinkInfo)
    [Anonymous Symbol]                       0x08103ae0   Section        0  phy_lan8742a.o(.text.GetLinkInfo)
    GetLinkState                             0x08103b41   Thumb Code    68  phy_lan8742a.o(.text.GetLinkState)
    [Anonymous Symbol]                       0x08103b40   Section        0  phy_lan8742a.o(.text.GetLinkState)
    GetMacAddress                            0x08103b85   Thumb Code   124  eth_stm32h7.o(.text.GetMacAddress)
    [Anonymous Symbol]                       0x08103b84   Section        0  eth_stm32h7.o(.text.GetMacAddress)
    GetRecordIndex                           0x08103c01   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x08103c00   Section        0  eventrecorder.o(.text.GetRecordIndex)
    GetRxFrameSize                           0x08103c15   Thumb Code    68  eth_stm32h7.o(.text.GetRxFrameSize)
    [Anonymous Symbol]                       0x08103c14   Section        0  eth_stm32h7.o(.text.GetRxFrameSize)
    GetRxFrameTime                           0x08103c59   Thumb Code    12  eth_stm32h7.o(.text.GetRxFrameTime)
    [Anonymous Symbol]                       0x08103c58   Section        0  eth_stm32h7.o(.text.GetRxFrameTime)
    GetTxFrameTime                           0x08103c65   Thumb Code    12  eth_stm32h7.o(.text.GetTxFrameTime)
    [Anonymous Symbol]                       0x08103c64   Section        0  eth_stm32h7.o(.text.GetTxFrameTime)
    GetVersion                               0x08103c71   Thumb Code    20  eth_stm32h7.o(.text.GetVersion)
    [Anonymous Symbol]                       0x08103c70   Section        0  eth_stm32h7.o(.text.GetVersion)
    GetVersion                               0x08103c85   Thumb Code    20  phy_lan8742a.o(.text.GetVersion)
    [Anonymous Symbol]                       0x08103c84   Section        0  phy_lan8742a.o(.text.GetVersion)
    [Anonymous Symbol]                       0x08103c98   Section        0  stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start)
    [Anonymous Symbol]                       0x08103df0   Section        0  stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    [Anonymous Symbol]                       0x08104cd0   Section        0  adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback)
    [Anonymous Symbol]                       0x08104de8   Section        0  stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback)
    [Anonymous Symbol]                       0x08104df0   Section        0  stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback)
    [Anonymous Symbol]                       0x08104df8   Section        0  stm32h7xx_hal_adc.o(.text.HAL_ADC_Init)
    [Anonymous Symbol]                       0x08105774   Section        0  msp_stm32h7.o(.text.HAL_ADC_MspInit)
    [Anonymous Symbol]                       0x081058f4   Section        0  stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
    [Anonymous Symbol]                       0x08105b1c   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort)
    [Anonymous Symbol]                       0x08106494   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    [Anonymous Symbol]                       0x08106b40   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit)
    [Anonymous Symbol]                       0x08106fbc   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    [Anonymous Symbol]                       0x08108180   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_Init)
    [Anonymous Symbol]                       0x08108f20   Section        0  stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT)
    [Anonymous Symbol]                       0x08109644   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_BuildRxDescriptors)
    [Anonymous Symbol]                       0x08109740   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_DMAErrorCallback)
    [Anonymous Symbol]                       0x08109748   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_DeInit)
    [Anonymous Symbol]                       0x08109764   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_DescAssignMemory)
    [Anonymous Symbol]                       0x081097e4   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_EEECallback)
    [Anonymous Symbol]                       0x081097ec   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACConfig)
    [Anonymous Symbol]                       0x08109a78   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACFilterConfig)
    [Anonymous Symbol]                       0x08109b3c   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataBuffer)
    [Anonymous Symbol]                       0x08109c98   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataLength)
    [Anonymous Symbol]                       0x08109d10   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler)
    [Anonymous Symbol]                       0x08109f10   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_Init)
    [Anonymous Symbol]                       0x0810a080   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable)
    [Anonymous Symbol]                       0x0810a2bc   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_MACErrorCallback)
    [Anonymous Symbol]                       0x0810a2c4   Section        0  msp_stm32h7.o(.text.HAL_ETH_MspDeInit)
    [Anonymous Symbol]                       0x0810a344   Section        0  msp_stm32h7.o(.text.HAL_ETH_MspInit)
    [Anonymous Symbol]                       0x0810a444   Section        0  eth_stm32h7.o(.text.HAL_ETH_PMTCallback)
    [Anonymous Symbol]                       0x0810a46c   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_ReadPHYRegister)
    [Anonymous Symbol]                       0x0810a51c   Section        0  eth_stm32h7.o(.text.HAL_ETH_RxCpltCallback)
    [Anonymous Symbol]                       0x0810a544   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACConfig)
    [Anonymous Symbol]                       0x0810a584   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACFilterConfig)
    [Anonymous Symbol]                       0x0810a61c   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetRxVLANIdentifier)
    [Anonymous Symbol]                       0x0810a678   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_Start_IT)
    [Anonymous Symbol]                       0x0810a750   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop_IT)
    [Anonymous Symbol]                       0x0810a814   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit_IT)
    [Anonymous Symbol]                       0x0810a8a8   Section        0  eth_stm32h7.o(.text.HAL_ETH_TxCpltCallback)
    [Anonymous Symbol]                       0x0810a8d0   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_WakeUpCallback)
    [Anonymous Symbol]                       0x0810a8d8   Section        0  stm32h7xx_hal_eth.o(.text.HAL_ETH_WritePHYRegister)
    [Anonymous Symbol]                       0x0810a98c   Section        0  stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase)
    [Anonymous Symbol]                       0x0810abb8   Section        0  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Lock)
    [Anonymous Symbol]                       0x0810ac0c   Section        0  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program)
    [Anonymous Symbol]                       0x0810adcc   Section        0  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock)
    [Anonymous Symbol]                       0x0810ae6c   Section        0  stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    [Anonymous Symbol]                       0x0810b19c   Section        0  stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x0810b838   Section        0  stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID)
    [Anonymous Symbol]                       0x0810b864   Section        0  stm32h7xx_hal.o(.text.HAL_GetREVID)
    [Anonymous Symbol]                       0x0810b874   Section        0  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x0810b8fc   Section        0  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ActivateNotification)
    [Anonymous Symbol]                       0x0810b914   Section        0  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FreeCallback)
    [Anonymous Symbol]                       0x0810b91c   Section        0  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IRQHandler)
    [Anonymous Symbol]                       0x0810b954   Section        0  stm32h7xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x0810ba08   Section        0  main.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x0810ba14   Section        0  msp_stm32h7.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x0810ba54   Section        0  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x0810ba84   Section        0  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0810bab4   Section        0  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x0810bb18   Section        0  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0810bb64   Section        0  stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearPendingEvent)
    [Anonymous Symbol]                       0x0810bb7c   Section        0  stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode)
    [Anonymous Symbol]                       0x0810bd04   Section        0  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq)
    [Anonymous Symbol]                       0x0810bd2c   Section        0  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL1ClockFreq)
    [Anonymous Symbol]                       0x0810bfd8   Section        0  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq)
    [Anonymous Symbol]                       0x0810c284   Section        0  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq)
    [Anonymous Symbol]                       0x0810c530   Section        0  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq)
    [Anonymous Symbol]                       0x0810d008   Section        0  stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x0810d060   Section        0  stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x0810d370   Section        0  stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect)
    [Anonymous Symbol]                       0x0810d3b4   Section        0  stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    [Anonymous Symbol]                       0x0810d3c0   Section        0  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback)
    [Anonymous Symbol]                       0x0810d3c8   Section        0  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback)
    [Anonymous Symbol]                       0x0810d3d0   Section        0  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback)
    [Anonymous Symbol]                       0x0810d3d8   Section        0  com_stm32h7.o(.text.HAL_UART_ErrorCallback)
    [Anonymous Symbol]                       0x0810d474   Section        0  stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    [Anonymous Symbol]                       0x0810da28   Section        0  com_stm32h7.o(.text.HAL_UART_TxCpltCallback)
    [Anonymous Symbol]                       0x0810dac4   Section        0  irq_stm32h7.o(.text.HSEM2_IRQHandler)
    [Anonymous Symbol]                       0x0810dacc   Section        0  irq_stm32h7.o(.text.HardFault_Handler)
    IncrementRecordsDumped                   0x0810dae1   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x0810dae0   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x0810daf5   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x0810daf4   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    Initialize                               0x0810db09   Thumb Code   138  eth_stm32h7.o(.text.Initialize)
    [Anonymous Symbol]                       0x0810db08   Section        0  eth_stm32h7.o(.text.Initialize)
    Initialize                               0x0810db95   Thumb Code    80  phy_lan8742a.o(.text.Initialize)
    [Anonymous Symbol]                       0x0810db94   Section        0  phy_lan8742a.o(.text.Initialize)
    LL_ADC_Disable                           0x0810dbe5   Thumb Code    28  stm32h7xx_hal_adc.o(.text.LL_ADC_Disable)
    [Anonymous Symbol]                       0x0810dbe4   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_Disable)
    LL_ADC_DisableDeepPowerDown              0x0810dc01   Thumb Code    24  stm32h7xx_hal_adc.o(.text.LL_ADC_DisableDeepPowerDown)
    [Anonymous Symbol]                       0x0810dc00   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_DisableDeepPowerDown)
    LL_ADC_Enable                            0x0810dc19   Thumb Code    28  stm32h7xx_hal_adc.o(.text.LL_ADC_Enable)
    [Anonymous Symbol]                       0x0810dc18   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_Enable)
    LL_ADC_EnableInternalRegulator           0x0810dc35   Thumb Code    30  stm32h7xx_hal_adc.o(.text.LL_ADC_EnableInternalRegulator)
    [Anonymous Symbol]                       0x0810dc34   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_EnableInternalRegulator)
    LL_ADC_GetCommonPathInternalCh           0x0810dc55   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_GetCommonPathInternalCh)
    [Anonymous Symbol]                       0x0810dc54   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_GetCommonPathInternalCh)
    LL_ADC_GetMultimode                      0x0810dc65   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode)
    [Anonymous Symbol]                       0x0810dc64   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_GetMultimode)
    LL_ADC_GetResolution                     0x0810dc75   Thumb Code    76  stm32h7xx_hal_adc.o(.text.LL_ADC_GetResolution)
    [Anonymous Symbol]                       0x0810dc74   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_GetResolution)
    LL_ADC_INJ_IsConversionOngoing           0x0810dcc1   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing)
    [Anonymous Symbol]                       0x0810dcc0   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing)
    LL_ADC_IsCalibrationOnGoing              0x0810dcd1   Thumb Code    14  stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsCalibrationOnGoing)
    [Anonymous Symbol]                       0x0810dcd0   Section        0  stm32h7xx_hal_adc_ex.o(.text.LL_ADC_IsCalibrationOnGoing)
    LL_ADC_IsDeepPowerDownEnabled            0x0810dce1   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_IsDeepPowerDownEnabled)
    [Anonymous Symbol]                       0x0810dce0   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_IsDeepPowerDownEnabled)
    LL_ADC_IsDisableOngoing                  0x0810dcf1   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_IsDisableOngoing)
    [Anonymous Symbol]                       0x0810dcf0   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_IsDisableOngoing)
    LL_ADC_IsEnabled                         0x0810dd01   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled)
    [Anonymous Symbol]                       0x0810dd00   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_IsEnabled)
    LL_ADC_IsInternalRegulatorEnabled        0x0810dd11   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_IsInternalRegulatorEnabled)
    [Anonymous Symbol]                       0x0810dd10   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_IsInternalRegulatorEnabled)
    LL_ADC_REG_IsConversionOngoing           0x0810dd21   Thumb Code    16  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing)
    [Anonymous Symbol]                       0x0810dd20   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing)
    LL_ADC_REG_IsTriggerSourceSWStart        0x0810dd31   Thumb Code    22  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart)
    [Anonymous Symbol]                       0x0810dd30   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart)
    LL_ADC_REG_SetDataTransferMode           0x0810dd49   Thumb Code    26  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetDataTransferMode)
    [Anonymous Symbol]                       0x0810dd48   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetDataTransferMode)
    LL_ADC_REG_SetSequencerRanks             0x0810dd65   Thumb Code    58  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetSequencerRanks)
    [Anonymous Symbol]                       0x0810dd64   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_SetSequencerRanks)
    LL_ADC_REG_StartConversion               0x0810dda1   Thumb Code    28  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion)
    [Anonymous Symbol]                       0x0810dda0   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_REG_StartConversion)
    LL_ADC_SetChannelSamplingTime            0x0810ddbd   Thumb Code    54  stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSamplingTime)
    [Anonymous Symbol]                       0x0810ddbc   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSamplingTime)
    LL_ADC_SetChannelSingleDiff              0x0810ddf5   Thumb Code    52  stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSingleDiff)
    [Anonymous Symbol]                       0x0810ddf4   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetChannelSingleDiff)
    LL_ADC_SetCommonClock                    0x0810de29   Thumb Code    26  stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonClock)
    [Anonymous Symbol]                       0x0810de28   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonClock)
    LL_ADC_SetCommonPathInternalCh           0x0810de45   Thumb Code    26  stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonPathInternalCh)
    [Anonymous Symbol]                       0x0810de44   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetCommonPathInternalCh)
    LL_ADC_SetDataRightShift                 0x0810de61   Thumb Code    36  stm32h7xx_hal_adc.o(.text.LL_ADC_SetDataRightShift)
    [Anonymous Symbol]                       0x0810de60   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetDataRightShift)
    LL_ADC_SetOffset                         0x0810de85   Thumb Code    50  stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffset)
    [Anonymous Symbol]                       0x0810de84   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffset)
    LL_ADC_SetOffsetSignedSaturation         0x0810deb9   Thumb Code    40  stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffsetSignedSaturation)
    [Anonymous Symbol]                       0x0810deb8   Section        0  stm32h7xx_hal_adc.o(.text.LL_ADC_SetOffsetSignedSaturation)
    LL_ADC_StartCalibration                  0x0810dee1   Thumb Code    50  stm32h7xx_hal_adc_ex.o(.text.LL_ADC_StartCalibration)
    [Anonymous Symbol]                       0x0810dee0   Section        0  stm32h7xx_hal_adc_ex.o(.text.LL_ADC_StartCalibration)
    [Anonymous Symbol]                       0x0810df14   Section        0  main.o(.text.LMS_Load)
    LockRecord                               0x0810df25   Thumb Code    54  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x0810df24   Section        0  eventrecorder.o(.text.LockRecord)
    LockTS_Overflow                          0x0810df5d   Thumb Code    18  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x0810df5c   Section        0  eventrecorder.o(.text.LockTS_Overflow)
    MODBUS_ForceMultipleCoils                0x0810df71   Thumb Code   168  modbus.o(.text.MODBUS_ForceMultipleCoils)
    [Anonymous Symbol]                       0x0810df70   Section        0  modbus.o(.text.MODBUS_ForceMultipleCoils)
    MODBUS_ForceSingleCoil                   0x0810e019   Thumb Code    82  modbus.o(.text.MODBUS_ForceSingleCoil)
    [Anonymous Symbol]                       0x0810e018   Section        0  modbus.o(.text.MODBUS_ForceSingleCoil)
    [Anonymous Symbol]                       0x0810e06c   Section        0  modbus.o(.text.MODBUS_GetRegister)
    [Anonymous Symbol]                       0x0810e31c   Section        0  modbus.o(.text.MODBUS_GetStatus)
    MODBUS_PresetMultipleRegisters           0x0810e32d   Thumb Code   110  modbus.o(.text.MODBUS_PresetMultipleRegisters)
    [Anonymous Symbol]                       0x0810e32c   Section        0  modbus.o(.text.MODBUS_PresetMultipleRegisters)
    MODBUS_PresetSingleRegister              0x0810e39d   Thumb Code    54  modbus.o(.text.MODBUS_PresetSingleRegister)
    [Anonymous Symbol]                       0x0810e39c   Section        0  modbus.o(.text.MODBUS_PresetSingleRegister)
    MODBUS_ReadCoilStatus                    0x0810e3d5   Thumb Code   214  modbus.o(.text.MODBUS_ReadCoilStatus)
    [Anonymous Symbol]                       0x0810e3d4   Section        0  modbus.o(.text.MODBUS_ReadCoilStatus)
    MODBUS_ReadHoldingRegisters              0x0810e4ad   Thumb Code   174  modbus.o(.text.MODBUS_ReadHoldingRegisters)
    [Anonymous Symbol]                       0x0810e4ac   Section        0  modbus.o(.text.MODBUS_ReadHoldingRegisters)
    MODBUS_ReadInputRegisters                0x0810e55d   Thumb Code   174  modbus.o(.text.MODBUS_ReadInputRegisters)
    [Anonymous Symbol]                       0x0810e55c   Section        0  modbus.o(.text.MODBUS_ReadInputRegisters)
    MODBUS_ReadInputStatus                   0x0810e60d   Thumb Code   214  modbus.o(.text.MODBUS_ReadInputStatus)
    [Anonymous Symbol]                       0x0810e60c   Section        0  modbus.o(.text.MODBUS_ReadInputStatus)
    [Anonymous Symbol]                       0x0810e6e4   Section        0  modbus.o(.text.MODBUS_ReplyToQuery)
    [Anonymous Symbol]                       0x0810e880   Section        0  modbus.o(.text.MODBUS_SetRegister)
    [Anonymous Symbol]                       0x0810eccc   Section        0  modbus.o(.text.MODBUS_SetStatus)
    [Anonymous Symbol]                       0x0810ece0   Section        0  irq_stm32h7.o(.text.MemManage_Handler)
    MessageQueueGet                          0x0810ecf3   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x0810ecf2   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x0810ed33   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x0810ed32   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x0810ed8b   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0810ed8a   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0810eda8   Section        0  irq_stm32h7.o(.text.NMI_Handler)
    NVIC_EncodePriority                      0x0810edbd   Thumb Code   108  stm32h7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0810edbc   Section        0  stm32h7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0810ee28   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0810ee30   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x0810ee50   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0810ee54   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0810ee5c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x0810ee8c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x0810ee90   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0810ee94   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x0810ee98   Number         4  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x0810ee9d   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0810ee9c   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x0810eea9   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0810eea8   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x0810eeaf   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0810eeae   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x0810eebb   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x0810eeba   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x0810eec1   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x0810eec0   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_1)
    PHY_Read                                 0x0810eec9   Thumb Code    68  eth_stm32h7.o(.text.PHY_Read)
    [Anonymous Symbol]                       0x0810eec8   Section        0  eth_stm32h7.o(.text.PHY_Read)
    PHY_Write                                0x0810ef0d   Thumb Code    66  eth_stm32h7.o(.text.PHY_Write)
    [Anonymous Symbol]                       0x0810ef0c   Section        0  eth_stm32h7.o(.text.PHY_Write)
    PowerControl                             0x0810ef51   Thumb Code   284  eth_stm32h7.o(.text.PowerControl)
    [Anonymous Symbol]                       0x0810ef50   Section        0  eth_stm32h7.o(.text.PowerControl)
    PowerControl                             0x0810f06d   Thumb Code   294  phy_lan8742a.o(.text.PowerControl)
    [Anonymous Symbol]                       0x0810f06c   Section        0  phy_lan8742a.o(.text.PowerControl)
    ReadFrame                                0x0810f195   Thumb Code   128  eth_stm32h7.o(.text.ReadFrame)
    [Anonymous Symbol]                       0x0810f194   Section        0  eth_stm32h7.o(.text.ReadFrame)
    SemaphoreTokenIncrement                  0x0810f215   Thumb Code    46  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x0810f214   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SendFrame                                0x0810f245   Thumb Code   250  eth_stm32h7.o(.text.SendFrame)
    [Anonymous Symbol]                       0x0810f244   Section        0  eth_stm32h7.o(.text.SendFrame)
    SetAddressFilter                         0x0810f341   Thumb Code   524  eth_stm32h7.o(.text.SetAddressFilter)
    [Anonymous Symbol]                       0x0810f340   Section        0  eth_stm32h7.o(.text.SetAddressFilter)
    SetInterface                             0x0810f54d   Thumb Code    70  phy_lan8742a.o(.text.SetInterface)
    [Anonymous Symbol]                       0x0810f54c   Section        0  phy_lan8742a.o(.text.SetInterface)
    SetMacAddress                            0x0810f595   Thumb Code    84  eth_stm32h7.o(.text.SetMacAddress)
    [Anonymous Symbol]                       0x0810f594   Section        0  eth_stm32h7.o(.text.SetMacAddress)
    SetMode                                  0x0810f5e9   Thumb Code   246  phy_lan8742a.o(.text.SetMode)
    [Anonymous Symbol]                       0x0810f5e8   Section        0  phy_lan8742a.o(.text.SetMode)
    [Anonymous Symbol]                       0x0810f6e0   Section        0  system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemInit)
    ThreadFlagsCheck                         0x0810f711   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0810f710   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x0810f775   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x0810f774   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerRemove                              0x0810f7b9   Thumb Code    36  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x0810f7b8   Section        0  rtx_timer.o(.text.TimerRemove)
    __arm_cp.13_0                            0x0810f7dc   Number         4  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x0810f7e0   Section        0  irq_stm32h7.o(.text.UART4_IRQHandler)
    [Anonymous Symbol]                       0x0810f7f0   Section        0  irq_stm32h7.o(.text.UART5_IRQHandler)
    [Anonymous Symbol]                       0x0810f800   Section        0  irq_stm32h7.o(.text.UART7_IRQHandler)
    [Anonymous Symbol]                       0x0810f810   Section        0  irq_stm32h7.o(.text.UART8_IRQHandler)
    UART_DMAAbortOnError                     0x0810f821   Thumb Code    36  stm32h7xx_hal_uart.o(.text.UART_DMAAbortOnError)
    [Anonymous Symbol]                       0x0810f820   Section        0  stm32h7xx_hal_uart.o(.text.UART_DMAAbortOnError)
    UART_EndRxTransfer                       0x0810f845   Thumb Code    80  stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer)
    [Anonymous Symbol]                       0x0810f844   Section        0  stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer)
    UART_EndTransmit_IT                      0x0810f895   Thumb Code    42  stm32h7xx_hal_uart.o(.text.UART_EndTransmit_IT)
    [Anonymous Symbol]                       0x0810f894   Section        0  stm32h7xx_hal_uart.o(.text.UART_EndTransmit_IT)
    [Anonymous Symbol]                       0x0810f8c0   Section        0  irq_stm32h7.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x0810f8d0   Section        0  irq_stm32h7.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x0810f8e0   Section        0  irq_stm32h7.o(.text.USART3_IRQHandler)
    [Anonymous Symbol]                       0x0810f8f0   Section        0  irq_stm32h7.o(.text.USART6_IRQHandler)
    Uninitialize                             0x0810f901   Thumb Code    30  eth_stm32h7.o(.text.Uninitialize)
    [Anonymous Symbol]                       0x0810f900   Section        0  eth_stm32h7.o(.text.Uninitialize)
    Uninitialize                             0x0810f921   Thumb Code    20  phy_lan8742a.o(.text.Uninitialize)
    [Anonymous Symbol]                       0x0810f920   Section        0  phy_lan8742a.o(.text.Uninitialize)
    UnlockRecord                             0x0810f935   Thumb Code    50  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x0810f934   Section        0  eventrecorder.o(.text.UnlockRecord)
    UnlockTS_Overflow                        0x0810f969   Thumb Code    18  eventrecorder.o(.text.UnlockTS_Overflow)
    [Anonymous Symbol]                       0x0810f968   Section        0  eventrecorder.o(.text.UnlockTS_Overflow)
    UpdateTS                                 0x0810f97d   Thumb Code    26  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x0810f97c   Section        0  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x0810f998   Section        0  irq_stm32h7.o(.text.UsageFault_Handler)
    __NVIC_DisableIRQ                        0x0810f9ad   Thumb Code    56  stm32h7xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x0810f9ac   Section        0  stm32h7xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x0810f9e5   Thumb Code    48  stm32h7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0810f9e4   Section        0  stm32h7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x0810fa15   Thumb Code    16  stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x0810fa14   Section        0  stm32h7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x0810fa25   Thumb Code    66  stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x0810fa24   Section        0  stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x0810fa69   Thumb Code    60  stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0810fa68   Section        0  stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    __NVIC_SystemReset                       0x0810faa5   Thumb Code    38  task.o(.text.__NVIC_SystemReset)
    [Anonymous Symbol]                       0x0810faa4   Section        0  task.o(.text.__NVIC_SystemReset)
    __NVIC_SystemReset                       0x0810facd   Thumb Code    38  modbus.o(.text.__NVIC_SystemReset)
    [Anonymous Symbol]                       0x0810facc   Section        0  modbus.o(.text.__NVIC_SystemReset)
    [Anonymous Symbol]                       0x0810faf4   Section        0  main.o(.text.__aeabi_assert)
    __tagsym$$used.1                         0x0810fb0c   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x0810fb0c   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x0810fb2c   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x0810fb2c   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x0810fb40   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x0810fb40   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x0810fb74   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x0810fb74   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x0810fb90   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x0810fb98   Section        0  idle.o(.text.app_idle_task)
    [Anonymous Symbol]                       0x0810fce4   Section        0  task.o(.text.app_main_task)
    [Anonymous Symbol]                       0x081102e0   Section        0  sock.o(.text.app_sock_task)
    [Anonymous Symbol]                       0x0811162c   Section        0  test.o(.text.app_test_task)
    [Anonymous Symbol]                       0x081116d8   Section        0  main.o(.text.assert_failed)
    atomic_inc32                             0x081116f1   Thumb Code    32  eventrecorder.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x081116f0   Section        0  eventrecorder.o(.text.atomic_inc32)
    atomic_wr32                              0x08111711   Thumb Code    32  eventrecorder.o(.text.atomic_wr32)
    [Anonymous Symbol]                       0x08111710   Section        0  eventrecorder.o(.text.atomic_wr32)
    atomic_wr8                               0x08111731   Thumb Code    40  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08111730   Section        0  eventrecorder.o(.text.atomic_wr8)
    crc16_ccitt                              0x08111759   Thumb Code   130  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x08111758   Section        0  eventrecorder.o(.text.crc16_ccitt)
    crc32_8bit_rev                           0x081117dd   Thumb Code    92  eth_stm32h7.o(.text.crc32_8bit_rev)
    [Anonymous Symbol]                       0x081117dc   Section        0  eth_stm32h7.o(.text.crc32_8bit_rev)
    crc32_data                               0x08111839   Thumb Code    60  eth_stm32h7.o(.text.crc32_data)
    [Anonymous Symbol]                       0x08111838   Section        0  eth_stm32h7.o(.text.crc32_data)
    eth0_callback                            0x08111875   Thumb Code    24  net_config.o(.text.eth0_callback)
    [Anonymous Symbol]                       0x08111874   Section        0  net_config.o(.text.eth0_callback)
    evr_initialize                           0x0811188d   Thumb Code   262  rtx_lib.o(.text.evr_initialize)
    [Anonymous Symbol]                       0x0811188c   Section        0  rtx_lib.o(.text.evr_initialize)
    [Anonymous Symbol]                       0x08111994   Section        0  main.o(.text.main)
    ms2tick                                  0x08111a71   Thumb Code    92  net_config.o(.text.ms2tick)
    [Anonymous Symbol]                       0x08111a70   Section        0  net_config.o(.text.ms2tick)
    [Anonymous Symbol]                       0x08111acc   Section        0  net_config.o(.text.net_igmp_collect_mcast)
    [Anonymous Symbol]                       0x08111ad8   Section        0  net_config.o(.text.net_igmp_is_member)
    [Anonymous Symbol]                       0x08111ae4   Section        0  net_config.o(.text.net_igmp_process)
    [Anonymous Symbol]                       0x08111af0   Section        0  bsp_stm32h7.o(.text.net_sys_error)
    [Anonymous Symbol]                       0x08111b98   Section        0  net_config.o(.text.netif_create)
    [Anonymous Symbol]                       0x08111bec   Section        0  net_config.o(.text.netif_lock)
    [Anonymous Symbol]                       0x08111c00   Section        0  net_config.o(.text.netif_unlock)
    [Anonymous Symbol]                       0x08111c10   Section        0  net_config.o(.text.netos_delay)
    [Anonymous Symbol]                       0x08111c24   Section        0  net_config.o(.text.netos_flag_clear)
    [Anonymous Symbol]                       0x08111c38   Section        0  net_config.o(.text.netos_flag_set)
    [Anonymous Symbol]                       0x08111c4c   Section        0  net_config.o(.text.netos_flag_wait)
    [Anonymous Symbol]                       0x08111c6c   Section        0  net_config.o(.text.netos_init)
    [Anonymous Symbol]                       0x08111c90   Section        0  net_config.o(.text.netos_lock)
    [Anonymous Symbol]                       0x08111ca4   Section        0  net_config.o(.text.netos_mutex_create)
    [Anonymous Symbol]                       0x08111cdc   Section        0  net_config.o(.text.netos_thread_create)
    [Anonymous Symbol]                       0x08111cf8   Section        0  net_config.o(.text.netos_thread_pass)
    [Anonymous Symbol]                       0x08111d00   Section        0  net_config.o(.text.netos_timer_create)
    [Anonymous Symbol]                       0x08111d1c   Section        0  net_config.o(.text.netos_timer_start)
    [Anonymous Symbol]                       0x08111d3c   Section        0  net_config.o(.text.netos_unlock)
    [Anonymous Symbol]                       0x08111d4c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08111d6c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08111d70   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x08111d98   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08111d9c   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x08111dbc   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x08111dc0   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08111dc4   Section        0  rtx_kernel.o(.text.osKernelGetTickFreq)
    __arm_cp.15_0                            0x08111de4   Number         4  rtx_kernel.o(.text.osKernelGetTickFreq)
    __arm_cp.15_1                            0x08111de8   Number         4  rtx_kernel.o(.text.osKernelGetTickFreq)
    [Anonymous Symbol]                       0x08111dec   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x08111e14   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08111e18   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x08111e38   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08111e3c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x08111ea8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08111eac   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x08111f28   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08111f2c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08111f4c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08111f50   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x08111f70   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08111f74   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x08111f94   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08111f98   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x08111fb8   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08111fbc   Section        0  bsp_stm32h7.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x08112044   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x0811204c   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08112050   Section        0  rtx_lib.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08112062   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x081120ce   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08112110   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08112146   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08112180   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x081121ca   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x08112203   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08112202   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x081122ac   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x081122cc   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x081122d0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08112318   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x0811235c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x081123e4   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08112450   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphorePostProcess                0x08112455   Thumb Code    54  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x08112454   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxThreadBlock                         0x0811248d   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0811248c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x081124c1   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x081124c0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x0811253d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0811253c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08112578   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x081125c1   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x081125c0   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x081125e0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08112631   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08112630   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x08112684   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x08112689   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08112688   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x081126a6   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x081126b8   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x081126e4   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x081126f9   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x081126f8   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08112704   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x0811272b   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0811272a   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08112754   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08112764   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08112778   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x081127a8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x081127ac   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x081127b0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x081127bc   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x081127c0   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x081127f8   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x081127fc   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0811282c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x081128a0   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x081128a4   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x081128bc   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x081128c0   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x081128c4   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x081128e5   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x081128e4   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08112950   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08112954   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x081129a4   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x081129a8   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x081129c8   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x081129cc   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x08112a14   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x08112a18   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x08112a20   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08112a24   Section        0  rtx_thread.o(.text.osThreadFlagsClear)
    __arm_cp.36_0                            0x08112a44   Number         4  rtx_thread.o(.text.osThreadFlagsClear)
    [Anonymous Symbol]                       0x08112a48   Section        0  rtx_thread.o(.text.osThreadFlagsGet)
    __arm_cp.37_0                            0x08112a68   Number         4  rtx_thread.o(.text.osThreadFlagsGet)
    [Anonymous Symbol]                       0x08112a6c   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x08112ac0   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x08112ac4   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.38_0                            0x08112ae4   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x08112ae8   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x08112b08   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_1                            0x08112b0c   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08112b10   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x08112b30   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08112b34   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.26_0                            0x08112b54   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x08112b58   Section        0  rtx_timer.o(.text.osTimerNew)
    __arm_cp.3_0                             0x08112b78   Number         4  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x08112b7c   Section        0  rtx_timer.o(.text.osTimerStart)
    __arm_cp.5_0                             0x08112b9c   Number         4  rtx_timer.o(.text.osTimerStart)
    os_kernel_is_active                      0x08112ba1   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08112ba0   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    svcRtxDelay                              0x08112bd7   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08112bd6   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08112bed   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08112bec   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x08112bf5   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08112bf4   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x08112bfc   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelGetTickFreq                  0x08112c01   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x08112c00   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    svcRtxKernelInitialize                   0x08112c09   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08112c08   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x08112cfc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08112d01   Thumb Code   120  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08112d00   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x08112d78   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x08112d7c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x08112d80   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08112d85   Thumb Code   212  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08112d84   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x08112e58   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08112e5d   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08112e5c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x08112f6c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x08112f70   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08112f75   Thumb Code   176  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08112f74   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08113025   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08113024   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x081130b0   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x081130b5   Thumb Code   172  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x081130b4   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08113161   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08113160   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x081131c4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x081131c9   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x081131c8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08113278   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x0811327d   Thumb Code    84  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x0811327c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x081132d1   Thumb Code   116  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x081132d0   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_0                             0x08113344   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x08113348   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x0811334d   Thumb Code    56  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x0811334c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08113385   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08113384   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x081133cc   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsClear                   0x081133d1   Thumb Code    48  rtx_thread.o(.text.svcRtxThreadFlagsClear)
    [Anonymous Symbol]                       0x081133d0   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsClear)
    svcRtxThreadFlagsGet                     0x08113401   Thumb Code    16  rtx_thread.o(.text.svcRtxThreadFlagsGet)
    [Anonymous Symbol]                       0x08113400   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsGet)
    __arm_cp.62_0                            0x08113410   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsGet)
    svcRtxThreadFlagsSet                     0x08113415   Thumb Code   102  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08113414   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x0811347d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x0811347c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadGetId                        0x081134c5   Thumb Code     8  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x081134c4   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.20_0                            0x081134cc   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x081134d1   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x081134d0   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x081136a8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x081136ac   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x081136b0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x081136b4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x081136b9   Thumb Code    52  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x081136b8   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x081136ec   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxTimerNew                           0x081136f1   Thumb Code   116  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x081136f0   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    __arm_cp.10_0                            0x08113764   Number         4  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x08113769   Thumb Code    68  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x08113768   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    __arm_cp.12_0                            0x081137ac   Number         4  rtx_timer.o(.text.svcRtxTimerStart)
    tcp_cb_func                              0x081137b1   Thumb Code  1052  sock.o(.text.tcp_cb_func)
    [Anonymous Symbol]                       0x081137b0   Section        0  sock.o(.text.tcp_cb_func)
    tcp_sock_send                            0x08113bcd   Thumb Code   164  sock.o(.text.tcp_sock_send)
    [Anonymous Symbol]                       0x08113bcc   Section        0  sock.o(.text.tcp_sock_send)
    udp_cb_func                              0x08113c71   Thumb Code   422  task.o(.text.udp_cb_func)
    [Anonymous Symbol]                       0x08113c70   Section        0  task.o(.text.udp_cb_func)
    udp_cb_func                              0x08113e19   Thumb Code   190  sock.o(.text.udp_cb_func)
    [Anonymous Symbol]                       0x08113e18   Section        0  sock.o(.text.udp_cb_func)
    udp_cb_func                              0x08113ed9   Thumb Code    16  idle.o(.text.udp_cb_func)
    [Anonymous Symbol]                       0x08113ed8   Section        0  idle.o(.text.udp_cb_func)
    arp_cache_alloc                          0x08113ee9   Thumb Code    92  net_arp.o(i.arp_cache_alloc)
    i.arp_cache_alloc                        0x08113ee8   Section        0  net_arp.o(i.arp_cache_alloc)
    arp_cache_run                            0x08113f45   Thumb Code   240  net_arp.o(i.arp_cache_run)
    i.arp_cache_run                          0x08113f44   Section        0  net_arp.o(i.arp_cache_run)
    arp_is_cacheable                         0x08114039   Thumb Code    56  net_arp.o(i.arp_is_cacheable)
    i.arp_is_cacheable                       0x08114038   Section        0  net_arp.o(i.arp_is_cacheable)
    arp_probe_run                            0x08114071   Thumb Code    72  net_arp.o(i.arp_probe_run)
    i.arp_probe_run                          0x08114070   Section        0  net_arp.o(i.arp_probe_run)
    arp_proc_response                        0x081140b9   Thumb Code   182  net_arp.o(i.arp_proc_response)
    i.arp_proc_response                      0x081140b8   Section        0  net_arp.o(i.arp_proc_response)
    arp_que_free                             0x0811416f   Thumb Code    26  net_arp.o(i.arp_que_free)
    i.arp_que_free                           0x0811416e   Section        0  net_arp.o(i.arp_que_free)
    arp_send_reply                           0x08114189   Thumb Code   128  net_arp.o(i.arp_send_reply)
    i.arp_send_reply                         0x08114188   Section        0  net_arp.o(i.arp_send_reply)
    arp_send_request                         0x08114209   Thumb Code   158  net_arp.o(i.arp_send_request)
    i.arp_send_request                       0x08114208   Section        0  net_arp.o(i.arp_send_request)
    arp_sender_valid                         0x081142b1   Thumb Code    90  net_arp.o(i.arp_sender_valid)
    i.arp_sender_valid                       0x081142b0   Section        0  net_arp.o(i.arp_sender_valid)
    crc32_8bit                               0x08114319   Thumb Code    34  net_common.o(i.crc32_8bit)
    i.crc32_8bit                             0x08114318   Section        0  net_common.o(i.crc32_8bit)
    eth_check_link                           0x08114341   Thumb Code   154  net_eth.o(i.eth_check_link)
    i.eth_check_link                         0x08114340   Section        0  net_eth.o(i.eth_check_link)
    eth_if_map                               0x081143dd   Thumb Code    26  net_eth.o(i.eth_if_map)
    i.eth_if_map                             0x081143dc   Section        0  net_eth.o(i.eth_if_map)
    eth_iface_init                           0x081143fd   Thumb Code   486  net_eth.o(i.eth_iface_init)
    i.eth_iface_init                         0x081143fc   Section        0  net_eth.o(i.eth_iface_init)
    eth_iface_run                            0x081145e9   Thumb Code   458  net_eth.o(i.eth_iface_run)
    i.eth_iface_run                          0x081145e8   Section        0  net_eth.o(i.eth_iface_run)
    eth_lock                                 0x081147c1   Thumb Code     8  net_eth.o(i.eth_lock)
    i.eth_lock                               0x081147c0   Section        0  net_eth.o(i.eth_lock)
    eth_mtu_limit                            0x081147c9   Thumb Code    34  net_eth.o(i.eth_mtu_limit)
    i.eth_mtu_limit                          0x081147c8   Section        0  net_eth.o(i.eth_mtu_limit)
    eth_opt_len                              0x081147eb   Thumb Code    44  net_eth.o(i.eth_opt_len)
    i.eth_opt_len                            0x081147ea   Section        0  net_eth.o(i.eth_opt_len)
    eth_receive                              0x08114817   Thumb Code   136  net_eth.o(i.eth_receive)
    i.eth_receive                            0x08114816   Section        0  net_eth.o(i.eth_receive)
    eth_unlock                               0x0811489f   Thumb Code     8  net_eth.o(i.eth_unlock)
    i.eth_unlock                             0x0811489e   Section        0  net_eth.o(i.eth_unlock)
    frag_map_session                         0x081148a9   Thumb Code   120  net_ip4_frag.o(i.frag_map_session)
    i.frag_map_session                       0x081148a8   Section        0  net_ip4_frag.o(i.frag_map_session)
    hex2uc                                   0x08114925   Thumb Code    34  net_common.o(i.hex2uc)
    i.hex2uc                                 0x08114924   Section        0  net_common.o(i.hex2uc)
    ip4_get_chksum                           0x08114947   Thumb Code    12  net_ip4.o(i.ip4_get_chksum)
    i.ip4_get_chksum                         0x08114946   Section        0  net_ip4.o(i.ip4_get_chksum)
    ip4_get_mtu                              0x08114953   Thumb Code    42  net_ip4.o(i.ip4_get_mtu)
    i.ip4_get_mtu                            0x08114952   Section        0  net_ip4.o(i.ip4_get_mtu)
    mem_lock                                 0x0811497d   Thumb Code     8  net_mem.o(i.mem_lock)
    i.mem_lock                               0x0811497c   Section        0  net_mem.o(i.mem_lock)
    mem_unlock                               0x08114989   Thumb Code     8  net_mem.o(i.mem_unlock)
    i.mem_unlock                             0x08114988   Section        0  net_mem.o(i.mem_unlock)
    i.netCore_Thread                         0x08114994   Section        0  net_sys.o(i.netCore_Thread)
    i.netETH_Notify                          0x081149f8   Section        0  net_eth.o(i.netETH_Notify)
    i.netETH_ReceiveRaw                      0x081149fa   Section        0  net_eth.o(i.netETH_ReceiveRaw)
    i.netETH_Thread                          0x081149fc   Section        0  net_eth.o(i.netETH_Thread)
    i.netIF_GetOption                        0x08114a70   Section        0  net_sys.o(i.netIF_GetOption)
    i.netInitialize                          0x08114aec   Section        0  net_sys.o(i.netInitialize)
    i.netMAC_aton                            0x08114b60   Section        0  net_addr.o(i.netMAC_aton)
    i.netTCP_Abort                           0x08114bbe   Section        0  net_tcp.o(i.netTCP_Abort)
    i.netTCP_GetBuffer                       0x08114bd6   Section        0  net_tcp.o(i.netTCP_GetBuffer)
    i.netTCP_GetSocket                       0x08114bde   Section        0  net_tcp.o(i.netTCP_GetSocket)
    i.netTCP_GetState                        0x08114bf6   Section        0  net_tcp.o(i.netTCP_GetState)
    i.netTCP_Listen                          0x08114bfa   Section        0  net_tcp.o(i.netTCP_Listen)
    i.netTCP_Send                            0x08114c16   Section        0  net_tcp.o(i.netTCP_Send)
    i.netTCP_SendReady                       0x08114c3c   Section        0  net_tcp.o(i.netTCP_SendReady)
    i.netTCP_SetOption                       0x08114c40   Section        0  net_tcp.o(i.netTCP_SetOption)
    i.netUDP_GetBuffer                       0x08114c60   Section        0  net_udp.o(i.netUDP_GetBuffer)
    i.netUDP_GetSocket                       0x08114c68   Section        0  net_udp.o(i.netUDP_GetSocket)
    i.netUDP_Open                            0x08114c80   Section        0  net_udp.o(i.netUDP_Open)
    i.netUDP_Send                            0x08114c9c   Section        0  net_udp.o(i.netUDP_Send)
    i.net_addr4_aton                         0x08114cc2   Section        0  net_addr.o(i.net_addr4_aton)
    i.net_addr4_to_mac                       0x08114d20   Section        0  net_addr.o(i.net_addr4_to_mac)
    i.net_addr_find_route                    0x08114d3e   Section        0  net_addr.o(i.net_addr_find_route)
    i.net_addr_get_local                     0x08114d4c   Section        0  net_addr.o(i.net_addr_get_local)
    i.net_addr_is_unspec                     0x08114d60   Section        0  net_addr.o(i.net_addr_is_unspec)
    i.net_arp_cache_add                      0x08114d74   Section        0  net_arp.o(i.net_arp_cache_add)
    i.net_arp_cache_early                    0x08114e14   Section        0  net_arp.o(i.net_arp_cache_early)
    i.net_arp_cache_find                     0x08114e9c   Section        0  net_arp.o(i.net_arp_cache_find)
    i.net_arp_cache_init                     0x08114f1c   Section        0  net_arp.o(i.net_arp_cache_init)
    i.net_arp_cache_run                      0x08114f54   Section        0  net_arp.o(i.net_arp_cache_run)
    i.net_arp_enqueue                        0x08114f70   Section        0  net_arp.o(i.net_arp_enqueue)
    i.net_arp_notify                         0x08114fd6   Section        0  net_arp.o(i.net_arp_notify)
    i.net_arp_process                        0x08114ff6   Section        0  net_arp.o(i.net_arp_process)
    i.net_atoi                               0x08115158   Section        0  net_common.o(i.net_atoi)
    i.net_chksum_buf                         0x0811519a   Section        0  net_common.o(i.net_chksum_buf)
    i.net_crc_buf                            0x081151ca   Section        0  net_common.o(i.net_crc_buf)
    i.net_eth_callback                       0x081151e8   Section        0  net_eth.o(i.net_eth_callback)
    i.net_eth_config_mcast                   0x081151f6   Section        0  net_eth.o(i.net_eth_config_mcast)
    i.net_eth_get_option                     0x08115248   Section        0  net_eth.o(i.net_eth_get_option)
    i.net_eth_iface_init                     0x081152cc   Section        0  net_eth.o(i.net_eth_iface_init)
    i.net_eth_iface_run                      0x081152e8   Section        0  net_eth.o(i.net_eth_iface_run)
    i.net_eth_output                         0x08115304   Section        0  net_eth.o(i.net_eth_output)
    i.net_eth_send_frame                     0x0811539c   Section        0  net_eth.o(i.net_eth_send_frame)
    i.net_icmp_init                          0x0811545c   Section        0  net_icmp.o(i.net_icmp_init)
    i.net_icmp_process                       0x08115474   Section        0  net_icmp.o(i.net_icmp_process)
    i.net_icmp_send_echo                     0x0811557c   Section        0  net_icmp.o(i.net_icmp_send_echo)
    i.net_if_map_all                         0x081155fc   Section        0  net_sys.o(i.net_if_map_all)
    i.net_ip4_chk_frame                      0x08115608   Section        0  net_ip4.o(i.net_ip4_chk_frame)
    i.net_ip4_chksum                         0x08115710   Section        0  net_ip4.o(i.net_ip4_chksum)
    i.net_ip4_chksum_buf                     0x0811573c   Section        0  net_ip4.o(i.net_ip4_chksum_buf)
    i.net_ip4_find_route                     0x08115744   Section        0  net_ip4.o(i.net_ip4_find_route)
    i.net_ip4_frag_add                       0x081157c4   Section        0  net_ip4_frag.o(i.net_ip4_frag_add)
    i.net_ip4_frag_get                       0x081158e8   Section        0  net_ip4_frag.o(i.net_ip4_frag_get)
    i.net_ip4_frag_init                      0x08115994   Section        0  net_ip4_frag.o(i.net_ip4_frag_init)
    i.net_ip4_frag_run                       0x081159a4   Section        0  net_ip4_frag.o(i.net_ip4_frag_run)
    i.net_ip4_get_local                      0x081159e0   Section        0  net_ip4.o(i.net_ip4_get_local)
    i.net_ip4_init                           0x08115a0c   Section        0  net_ip4.o(i.net_ip4_init)
    i.net_ip4_is_onlink                      0x08115a24   Section        0  net_ip4.o(i.net_ip4_is_onlink)
    i.net_ip4_is_subcast                     0x08115a44   Section        0  net_ip4.o(i.net_ip4_is_subcast)
    i.net_ip4_reass_frame                    0x08115a6a   Section        0  net_ip4.o(i.net_ip4_reass_frame)
    i.net_ip4_send_frame                     0x08115a78   Section        0  net_ip4.o(i.net_ip4_send_frame)
    i.net_ip4_tx_offl_hl                     0x08115b9c   Section        0  net_ip4.o(i.net_ip4_tx_offl_hl)
    i.net_loop_iface_init                    0x08115bc8   Section        0  net_loopback.o(i.net_loop_iface_init)
    i.net_loop_iface_run                     0x08115be4   Section        0  net_loopback.o(i.net_loop_iface_run)
    i.net_loop_send_frame                    0x08115c5c   Section        0  net_loopback.o(i.net_loop_send_frame)
    i.net_mem_alloc                          0x08115cb4   Section        0  net_mem.o(i.net_mem_alloc)
    i.net_mem_avail                          0x08115d40   Section        0  net_mem.o(i.net_mem_avail)
    i.net_mem_free                           0x08115d5c   Section        0  net_mem.o(i.net_mem_free)
    i.net_mem_init                           0x08115dd8   Section        0  net_mem.o(i.net_mem_init)
    i.net_mem_shrink                         0x08115e34   Section        0  net_mem.o(i.net_mem_shrink)
    i.net_ping_client_init                   0x08115e6c   Section        0  net_ping_core.o(i.net_ping_client_init)
    i.net_ping_client_run                    0x08115e7c   Section        0  net_ping_core.o(i.net_ping_client_run)
    i.net_rand32                             0x08115ebc   Section        0  net_sys.o(i.net_rand32)
    i.net_sys_lock                           0x08115ed8   Section        0  net_sys.o(i.net_sys_lock)
    i.net_sys_resume                         0x08115ee4   Section        0  net_sys.o(i.net_sys_resume)
    i.net_sys_tick                           0x08115efc   Section        0  net_sys.o(i.net_sys_tick)
    i.net_sys_unlock                         0x08115f10   Section        0  net_sys.o(i.net_sys_unlock)
    i.net_sys_wakeup                         0x08115f1c   Section        0  net_sys.o(i.net_sys_wakeup)
    i.net_tcp_abort                          0x08115f3c   Section        0  net_tcp.o(i.net_tcp_abort)
    i.net_tcp_check_send                     0x08115f94   Section        0  net_tcp.o(i.net_tcp_check_send)
    i.net_tcp_get_buf                        0x08115fd0   Section        0  net_tcp.o(i.net_tcp_get_buf)
    i.net_tcp_get_socket                     0x08115ff0   Section        0  net_tcp.o(i.net_tcp_get_socket)
    i.net_tcp_get_state                      0x08116034   Section        0  net_tcp.o(i.net_tcp_get_state)
    i.net_tcp_listen                         0x0811605c   Section        0  net_tcp.o(i.net_tcp_listen)
    i.net_tcp_process                        0x081160cc   Section        0  net_tcp.o(i.net_tcp_process)
    i.net_tcp_send                           0x0811659c   Section        0  net_tcp.o(i.net_tcp_send)
    i.net_tcp_set_option                     0x0811667c   Section        0  net_tcp.o(i.net_tcp_set_option)
    i.net_tcp_socket_init                    0x08116710   Section        0  net_tcp.o(i.net_tcp_socket_init)
    i.net_tcp_socket_run                     0x08116724   Section        0  net_tcp.o(i.net_tcp_socket_run)
    i.net_udp_get_buf                        0x081169e8   Section        0  net_udp.o(i.net_udp_get_buf)
    i.net_udp_get_socket                     0x08116a08   Section        0  net_udp.o(i.net_udp_get_socket)
    i.net_udp_open                           0x08116a50   Section        0  net_udp.o(i.net_udp_open)
    i.net_udp_process                        0x08116abc   Section        0  net_udp.o(i.net_udp_process)
    i.net_udp_send_if                        0x08116b90   Section        0  net_udp.o(i.net_udp_send_if)
    i.net_udp_socket_init                    0x08116cf8   Section        0  net_udp.o(i.net_udp_socket_init)
    i.net_xtouc                              0x08116d08   Section        0  net_common.o(i.net_xtouc)
    ping_send_req                            0x08116d25   Thumb Code    14  net_ping_core.o(i.ping_send_req)
    i.ping_send_req                          0x08116d24   Section        0  net_ping_core.o(i.ping_send_req)
    que_free_list                            0x08116d39   Thumb Code    26  net_ip4_frag.o(i.que_free_list)
    i.que_free_list                          0x08116d38   Section        0  net_ip4_frag.o(i.que_free_list)
    sys_map_if                               0x08116d53   Thumb Code    24  net_sys.o(i.sys_map_if)
    i.sys_map_if                             0x08116d52   Section        0  net_sys.o(i.sys_map_if)
    sys_proc_tick                            0x08116d6d   Thumb Code    72  net_sys.o(i.sys_proc_tick)
    i.sys_proc_tick                          0x08116d6c   Section        0  net_sys.o(i.sys_proc_tick)
    tcp_map_socket                           0x08116db9   Thumb Code   160  net_tcp.o(i.tcp_map_socket)
    i.tcp_map_socket                         0x08116db8   Section        0  net_tcp.o(i.tcp_map_socket)
    tcp_parse_opt                            0x08116e61   Thumb Code    94  net_tcp.o(i.tcp_parse_opt)
    i.tcp_parse_opt                          0x08116e60   Section        0  net_tcp.o(i.tcp_parse_opt)
    tcp_proc_acknr                           0x08116ec1   Thumb Code   192  net_tcp.o(i.tcp_proc_acknr)
    i.tcp_proc_acknr                         0x08116ec0   Section        0  net_tcp.o(i.tcp_proc_acknr)
    tcp_proc_dupack                          0x08116f85   Thumb Code    82  net_tcp.o(i.tcp_proc_dupack)
    i.tcp_proc_dupack                        0x08116f84   Section        0  net_tcp.o(i.tcp_proc_dupack)
    tcp_que_free                             0x08116fd7   Thumb Code    26  net_tcp.o(i.tcp_que_free)
    i.tcp_que_free                           0x08116fd6   Section        0  net_tcp.o(i.tcp_que_free)
    tcp_que_init                             0x08116ff1   Thumb Code    26  net_tcp.o(i.tcp_que_init)
    i.tcp_que_init                           0x08116ff0   Section        0  net_tcp.o(i.tcp_que_init)
    tcp_que_resend                           0x0811700d   Thumb Code   142  net_tcp.o(i.tcp_que_resend)
    i.tcp_que_resend                         0x0811700c   Section        0  net_tcp.o(i.tcp_que_resend)
    tcp_send_ctrl                            0x081170a1   Thumb Code   122  net_tcp.o(i.tcp_send_ctrl)
    i.tcp_send_ctrl                          0x081170a0   Section        0  net_tcp.o(i.tcp_send_ctrl)
    tcp_send_data                            0x0811711b   Thumb Code    94  net_tcp.o(i.tcp_send_data)
    i.tcp_send_data                          0x0811711a   Section        0  net_tcp.o(i.tcp_send_data)
    tcp_send_reset                           0x08117179   Thumb Code   112  net_tcp.o(i.tcp_send_reset)
    i.tcp_send_reset                         0x08117178   Section        0  net_tcp.o(i.tcp_send_reset)
    tcp_set_cwnd                             0x081171e9   Thumb Code    38  net_tcp.o(i.tcp_set_cwnd)
    i.tcp_set_cwnd                           0x081171e8   Section        0  net_tcp.o(i.tcp_set_cwnd)
    tcp_transit                              0x08117211   Thumb Code   100  net_tcp.o(i.tcp_transit)
    i.tcp_transit                            0x08117210   Section        0  net_tcp.o(i.tcp_transit)
    tcp_write                                0x08117279   Thumb Code   194  net_tcp.o(i.tcp_write)
    i.tcp_write                              0x08117278   Section        0  net_tcp.o(i.tcp_write)
    udp_port_in_use                          0x08117341   Thumb Code    40  net_udp.o(i.udp_port_in_use)
    i.udp_port_in_use                        0x08117340   Section        0  net_udp.o(i.udp_port_in_use)
    $v0                                      0x0811736c   Number         0  dfixu.o(x$fpl$dfixu)
    x$fpl$dfixu                              0x0811736c   Section       90  dfixu.o(x$fpl$dfixu)
    $v0                                      0x081173c6   Number         0  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dfltu                              0x081173c6   Section       38  dflt_clz.o(x$fpl$dfltu)
    $v0                                      0x081173ec   Number         0  dmul.o(x$fpl$dmul)
    x$fpl$dmul                               0x081173ec   Section      340  dmul.o(x$fpl$dmul)
    $v0                                      0x08117540   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x08117540   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x081175dc   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x081175dc   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x081175e8   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x081175e8   Section       26  fpinit.o(x$fpl$fpinit)
    x$fpl$usenofp                            0x08117602   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x08117604   Section       44  net_loopback.o(.constdata)
    loop_ll_config                           0x08117630   Data          12  net_loopback.o(.constdata)
    .constdata                               0x08117630   Section       12  net_loopback.o(.constdata)
    .constdata                               0x0811763c   Section       18  net_ping_core.o(.constdata)
    .constdata                               0x0811764e   Section        4  net_ip4.o(.constdata)
    .constdata                               0x08117652   Section        6  net_addr.o(.constdata)
    .constdata                               0x08117658   Section        6  net_addr.o(.constdata)
    .constdata                               0x08117660   Section        4  net_version.o(.constdata)
    __tagsym$$used.4                         0x08117664   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x081176d4   Number         0  rtx_lib.o(.rodata)
    .L__const.HAL_ETH_MspInit.GPIO_InitStruct 0x0811770c   Data          20  msp_stm32h7.o(.rodata..L__const.HAL_ETH_MspInit.GPIO_InitStruct)
    .L__const.app_idle_task.addr             0x08117720   Data          20  idle.o(.rodata..L__const.app_idle_task.addr)
    DMA_CalcBaseAndBitshift.flagBitshiftOffset 0x08117744   Data           8  stm32h7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    [Anonymous Symbol]                       0x08117744   Section        0  stm32h7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    DriverCapabilities                       0x0811774c   Data           4  eth_stm32h7.o(.rodata.DriverCapabilities)
    [Anonymous Symbol]                       0x0811774c   Section        0  eth_stm32h7.o(.rodata.DriverCapabilities)
    DriverVersion                            0x08117750   Data           4  eth_stm32h7.o(.rodata.DriverVersion)
    [Anonymous Symbol]                       0x08117750   Section        0  eth_stm32h7.o(.rodata.DriverVersion)
    DriverVersion                            0x08117754   Data           4  phy_lan8742a.o(.rodata.DriverVersion)
    [Anonymous Symbol]                       0x08117754   Section        0  phy_lan8742a.o(.rodata.DriverVersion)
    __tagsym$$used.0                         0x081177bc   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    Initialize.mac_def                       0x081177d4   Data           6  eth_stm32h7.o(.rodata.Initialize.mac_def)
    [Anonymous Symbol]                       0x081177d4   Section        0  eth_stm32h7.o(.rodata.Initialize.mac_def)
    LED_Struct                               0x081177e4   Data          24  led_stm32h7.o(.rodata.LED_Struct)
    [Anonymous Symbol]                       0x081177e4   Section        0  led_stm32h7.o(.rodata.LED_Struct)
    R_Registers                              0x081177fc   Data         512  modbus.o(.rodata.R_Registers)
    [Anonymous Symbol]                       0x081177fc   Section        0  modbus.o(.rodata.R_Registers)
    W_Registers                              0x081179fc   Data        1024  modbus.o(.rodata.W_Registers)
    [Anonymous Symbol]                       0x081179fc   Section        0  modbus.o(.rodata.W_Registers)
    .L__const.EE_PageTransfer.receive        0x08117e8c   Data          32  eeprom.o(.rodata.cst32)
    eth0_arp_config                          0x08117eac   Data          20  net_config.o(.rodata.eth0_arp_config)
    [Anonymous Symbol]                       0x08117eac   Section        0  net_config.o(.rodata.eth0_arp_config)
    eth0_icmp_config                         0x08117ec0   Data          12  net_config.o(.rodata.eth0_icmp_config)
    [Anonymous Symbol]                       0x08117ec0   Section        0  net_config.o(.rodata.eth0_icmp_config)
    eth0_ip4_config                          0x08117ecc   Data          40  net_config.o(.rodata.eth0_ip4_config)
    [Anonymous Symbol]                       0x08117ecc   Section        0  net_config.o(.rodata.eth0_ip4_config)
    eth0_ll_config                           0x08117ef4   Data          32  net_config.o(.rodata.eth0_ll_config)
    [Anonymous Symbol]                       0x08117ef4   Section        0  net_config.o(.rodata.eth0_ll_config)
    eth0_lock_attr                           0x08117f14   Data          16  net_config.o(.rodata.eth0_lock_attr)
    [Anonymous Symbol]                       0x08117f14   Section        0  net_config.o(.rodata.eth0_lock_attr)
    eth0_thread_attr                         0x08117f24   Data          36  net_config.o(.rodata.eth0_thread_attr)
    [Anonymous Symbol]                       0x08117f24   Section        0  net_config.o(.rodata.eth0_thread_attr)
    mem_lock_attr                            0x08117f48   Data          16  net_config.o(.rodata.mem_lock_attr)
    [Anonymous Symbol]                       0x08117f48   Section        0  net_config.o(.rodata.mem_lock_attr)
    net_lock_attr                            0x08117fb4   Data          16  net_config.o(.rodata.net_lock_attr)
    [Anonymous Symbol]                       0x08117fb4   Section        0  net_config.o(.rodata.net_lock_attr)
    net_thread_attr                          0x08117ff8   Data          36  net_config.o(.rodata.net_thread_attr)
    [Anonymous Symbol]                       0x08117ff8   Section        0  net_config.o(.rodata.net_thread_attr)
    net_timer_attr                           0x0811801c   Data          16  net_config.o(.rodata.net_timer_attr)
    [Anonymous Symbol]                       0x0811801c   Section        0  net_config.o(.rodata.net_timer_attr)
    os_idle_thread_attr                      0x0811804c   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x0811804c   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08118070   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08118070   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08118088   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08118088   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x081180ac   Data          23  main.o(.rodata.str1.1)
    .L.str.16                                0x081180ac   Data          24  main.o(.rodata.str1.1)
    .L.str.2                                 0x081180ac   Data          24  main.o(.rodata.str1.1)
    .L.str.4                                 0x081180ac   Data          24  main.o(.rodata.str1.1)
    .L.str.6                                 0x081180ac   Data          24  main.o(.rodata.str1.1)
    .L.str.76                                0x081180ac   Data          24  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081180ac   Section        0  main.o(.rodata.str1.1)
    .L.str.1                                 0x081180c4   Data          11  main.o(.rodata.str1.1)
    .L.str.12                                0x081180cf   Data          71  task.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081180cf   Section        0  task.o(.rodata.str1.1)
    .L.str.10                                0x08118116   Data          71  task.o(.rodata.str1.1)
    .L.str.11                                0x0811815d   Data          71  task.o(.rodata.str1.1)
    .L.str.4                                 0x081181a4   Data          18  task.o(.rodata.str1.1)
    .L.str.7                                 0x081181b6   Data          21  task.o(.rodata.str1.1)
    .L.str.8                                 0x081181cb   Data          21  task.o(.rodata.str1.1)
    .L.str.15                                0x081181e0   Data          21  task.o(.rodata.str1.1)
    .L.str.9                                 0x081181f5   Data          25  task.o(.rodata.str1.1)
    .L.str.13                                0x0811820e   Data          58  task.o(.rodata.str1.1)
    .L.str.19                                0x08118248   Data          73  task.o(.rodata.str1.1)
    .L.str.6                                 0x08118291   Data          30  task.o(.rodata.str1.1)
    .L.str.14                                0x081182af   Data          40  task.o(.rodata.str1.1)
    .L.str.5                                 0x081182d7   Data          11  task.o(.rodata.str1.1)
    .L.str.35                                0x081182f6   Data          84  sock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081182f6   Section        0  sock.o(.rodata.str1.1)
    .L.str.36                                0x0811834a   Data          84  sock.o(.rodata.str1.1)
    .L.str.37                                0x0811839e   Data          84  sock.o(.rodata.str1.1)
    .L.str.38                                0x081183f2   Data          84  sock.o(.rodata.str1.1)
    .L.str.39                                0x08118446   Data          84  sock.o(.rodata.str1.1)
    .L.str.40                                0x0811849a   Data          84  sock.o(.rodata.str1.1)
    .L.str.41                                0x081184ee   Data          84  sock.o(.rodata.str1.1)
    .L.str.42                                0x08118542   Data          84  sock.o(.rodata.str1.1)
    .L.str.44                                0x08118596   Data          37  sock.o(.rodata.str1.1)
    .L.str.46                                0x081185bb   Data          37  sock.o(.rodata.str1.1)
    .L.str.48                                0x081185e0   Data          37  sock.o(.rodata.str1.1)
    .L.str.50                                0x08118605   Data          37  sock.o(.rodata.str1.1)
    .L.str.52                                0x0811862a   Data          37  sock.o(.rodata.str1.1)
    .L.str.54                                0x0811864f   Data          37  sock.o(.rodata.str1.1)
    .L.str.56                                0x08118674   Data          37  sock.o(.rodata.str1.1)
    .L.str.58                                0x08118699   Data          37  sock.o(.rodata.str1.1)
    .L.str.60                                0x081186be   Data          46  sock.o(.rodata.str1.1)
    .L.str.62                                0x081186ec   Data          46  sock.o(.rodata.str1.1)
    .L.str.64                                0x0811871a   Data          46  sock.o(.rodata.str1.1)
    .L.str.66                                0x08118748   Data          46  sock.o(.rodata.str1.1)
    .L.str.68                                0x08118776   Data          46  sock.o(.rodata.str1.1)
    .L.str.70                                0x081187a4   Data          46  sock.o(.rodata.str1.1)
    .L.str.72                                0x081187d2   Data          46  sock.o(.rodata.str1.1)
    .L.str.74                                0x08118800   Data          46  sock.o(.rodata.str1.1)
    .L.str                                   0x0811882e   Data          18  sock.o(.rodata.str1.1)
    .L.str.19                                0x08118840   Data          67  sock.o(.rodata.str1.1)
    .L.str.20                                0x08118883   Data          67  sock.o(.rodata.str1.1)
    .L.str.21                                0x081188c6   Data          67  sock.o(.rodata.str1.1)
    .L.str.22                                0x08118909   Data          67  sock.o(.rodata.str1.1)
    .L.str.23                                0x0811894c   Data          67  sock.o(.rodata.str1.1)
    .L.str.24                                0x0811898f   Data          67  sock.o(.rodata.str1.1)
    .L.str.25                                0x081189d2   Data          67  sock.o(.rodata.str1.1)
    .L.str.26                                0x08118a15   Data          67  sock.o(.rodata.str1.1)
    .L.str.27                                0x08118a58   Data          67  sock.o(.rodata.str1.1)
    .L.str.28                                0x08118a9b   Data          67  sock.o(.rodata.str1.1)
    .L.str.29                                0x08118ade   Data          67  sock.o(.rodata.str1.1)
    .L.str.30                                0x08118b21   Data          67  sock.o(.rodata.str1.1)
    .L.str.31                                0x08118b64   Data          67  sock.o(.rodata.str1.1)
    .L.str.32                                0x08118ba7   Data          67  sock.o(.rodata.str1.1)
    .L.str.33                                0x08118bea   Data          67  sock.o(.rodata.str1.1)
    .L.str.34                                0x08118c2d   Data          67  sock.o(.rodata.str1.1)
    .L.str.11                                0x08118c70   Data          66  sock.o(.rodata.str1.1)
    .L.str.12                                0x08118cb2   Data          66  sock.o(.rodata.str1.1)
    .L.str.13                                0x08118cf4   Data          66  sock.o(.rodata.str1.1)
    .L.str.14                                0x08118d36   Data          66  sock.o(.rodata.str1.1)
    .L.str.15                                0x08118d78   Data          66  sock.o(.rodata.str1.1)
    .L.str.16                                0x08118dba   Data          66  sock.o(.rodata.str1.1)
    .L.str.17                                0x08118dfc   Data          66  sock.o(.rodata.str1.1)
    .L.str.18                                0x08118e3e   Data          66  sock.o(.rodata.str1.1)
    .L.str.45                                0x08118e80   Data          40  sock.o(.rodata.str1.1)
    .L.str.47                                0x08118ea8   Data          40  sock.o(.rodata.str1.1)
    .L.str.49                                0x08118ed0   Data          40  sock.o(.rodata.str1.1)
    .L.str.51                                0x08118ef8   Data          40  sock.o(.rodata.str1.1)
    .L.str.53                                0x08118f20   Data          40  sock.o(.rodata.str1.1)
    .L.str.55                                0x08118f48   Data          40  sock.o(.rodata.str1.1)
    .L.str.57                                0x08118f70   Data          40  sock.o(.rodata.str1.1)
    .L.str.59                                0x08118f98   Data          40  sock.o(.rodata.str1.1)
    .L.str.2                                 0x08118fc0   Data          35  sock.o(.rodata.str1.1)
    .L.str.3                                 0x08118fe3   Data          64  sock.o(.rodata.str1.1)
    .L.str.4                                 0x08119023   Data          64  sock.o(.rodata.str1.1)
    .L.str.5                                 0x08119063   Data          64  sock.o(.rodata.str1.1)
    .L.str.6                                 0x081190a3   Data          64  sock.o(.rodata.str1.1)
    .L.str.7                                 0x081190e3   Data          64  sock.o(.rodata.str1.1)
    .L.str.8                                 0x08119123   Data          64  sock.o(.rodata.str1.1)
    .L.str.9                                 0x08119163   Data          64  sock.o(.rodata.str1.1)
    .L.str.10                                0x081191a3   Data          64  sock.o(.rodata.str1.1)
    .L.str.61                                0x081191e3   Data          34  sock.o(.rodata.str1.1)
    .L.str.63                                0x08119205   Data          34  sock.o(.rodata.str1.1)
    .L.str.65                                0x08119227   Data          34  sock.o(.rodata.str1.1)
    .L.str.67                                0x08119249   Data          34  sock.o(.rodata.str1.1)
    .L.str.69                                0x0811926b   Data          34  sock.o(.rodata.str1.1)
    .L.str.71                                0x0811928d   Data          34  sock.o(.rodata.str1.1)
    .L.str.73                                0x081192af   Data          34  sock.o(.rodata.str1.1)
    .L.str.75                                0x081192d1   Data          34  sock.o(.rodata.str1.1)
    .L.str.77                                0x081192f3   Data          45  sock.o(.rodata.str1.1)
    .L.str.83                                0x08119320   Data          30  sock.o(.rodata.str1.1)
    .L.str.82                                0x0811933e   Data          59  sock.o(.rodata.str1.1)
    .L.str.84                                0x08119379   Data          59  sock.o(.rodata.str1.1)
    .L.str.78                                0x081193b4   Data          59  sock.o(.rodata.str1.1)
    .L.str.79                                0x081193ef   Data          59  sock.o(.rodata.str1.1)
    .L.str.80                                0x0811942a   Data          59  sock.o(.rodata.str1.1)
    .L.str.81                                0x08119465   Data          59  sock.o(.rodata.str1.1)
    .L.str.2                                 0x081194a0   Data          67  sock.o(.rodata.str1.1)
    .L.str.3                                 0x081194a0   Data          67  sock.o(.rodata.str1.1)
    .L.str.43                                0x081194a0   Data          67  sock.o(.rodata.str1.1)
    .L.str.1                                 0x081194e3   Data          11  sock.o(.rodata.str1.1)
    .L.str                                   0x081194ee   Data          18  test.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081194ee   Section        0  test.o(.rodata.str1.1)
    .L.str.3                                 0x08119500   Data          22  test.o(.rodata.str1.1)
    .L.str.1                                 0x08119516   Data          11  test.o(.rodata.str1.1)
    .L.str.4                                 0x08119521   Data          62  idle.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119521   Section        0  idle.o(.rodata.str1.1)
    .L.str                                   0x0811955f   Data          18  idle.o(.rodata.str1.1)
    .L.str.2                                 0x08119571   Data          35  idle.o(.rodata.str1.1)
    .L.str.5                                 0x08119594   Data          46  idle.o(.rodata.str1.1)
    .L.str.1                                 0x081195c2   Data          11  idle.o(.rodata.str1.1)
    .L.str                                   0x081195cd   Data          28  bsp_stm32h7.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081195cd   Section        0  bsp_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x081195e9   Data          28  irq_stm32h7.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081195e9   Section        0  irq_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x08119605   Data          28  com_stm32h7.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119605   Section        0  com_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x08119621   Data          28  adc_stm32h7.o(.rodata.str1.1)
    .L.str.1                                 0x08119621   Data          72  com_stm32h7.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119621   Section        0  adc_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x0811963d   Data          28  eep_stm32h7.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0811963d   Section        0  eep_stm32h7.o(.rodata.str1.1)
    .L.str.1                                 0x08119659   Data          21  fifo.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119659   Section        0  fifo.o(.rodata.str1.1)
    .L.str.2                                 0x08119669   Data          55  com_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x0811966e   Data           6  fifo.o(.rodata.str1.1)
    .L.str                                   0x08119674   Data         112  stm32h7xx_hal.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119674   Section        0  stm32h7xx_hal.o(.rodata.str1.1)
    .L.str.3                                 0x081196a0   Data          80  com_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x081196e4   Data         116  stm32h7xx_hal_adc.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081196e4   Section        0  stm32h7xx_hal_adc.o(.rodata.str1.1)
    .L.str.4                                 0x081196f0   Data          38  com_stm32h7.o(.rodata.str1.1)
    .L.str                                   0x08119758   Data         119  stm32h7xx_hal_adc_ex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119758   Section        0  stm32h7xx_hal_adc_ex.o(.rodata.str1.1)
    .L.str                                   0x081197cf   Data         119  stm32h7xx_hal_cortex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081197cf   Section        0  stm32h7xx_hal_cortex.o(.rodata.str1.1)
    .L.str                                   0x08119846   Data         116  stm32h7xx_hal_dma.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119846   Section        0  stm32h7xx_hal_dma.o(.rodata.str1.1)
    .L.str                                   0x081198ba   Data         118  stm32h7xx_hal_flash.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081198ba   Section        0  stm32h7xx_hal_flash.o(.rodata.str1.1)
    .L.str                                   0x08119930   Data         121  stm32h7xx_hal_flash_ex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119930   Section        0  stm32h7xx_hal_flash_ex.o(.rodata.str1.1)
    .L.str                                   0x081199a9   Data         117  stm32h7xx_hal_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x081199a9   Section        0  stm32h7xx_hal_gpio.o(.rodata.str1.1)
    .L.str                                   0x08119a1e   Data         119  stm32h7xx_hal_pwr_ex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119a1e   Section        0  stm32h7xx_hal_pwr_ex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119a95   Section        0  net_config.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08119b44   Section        0  rtx_kernel.o(.rodata.str1.4)
    sys_fn_init                              0x08119b50   Data          32  net_config.o(.rodata.sys_fn_init)
    [Anonymous Symbol]                       0x08119b50   Section        0  net_config.o(.rodata.sys_fn_init)
    sys_fn_run                               0x08119b70   Data          28  net_config.o(.rodata.sys_fn_run)
    [Anonymous Symbol]                       0x08119b70   Section        0  net_config.o(.rodata.sys_fn_run)
    loop_control                             0x10000000   Data           4  net_loopback.o(.data)
    .data                                    0x10000000   Section        4  net_loopback.o(.data)
    dfrag                                    0x10000004   Data           4  net_ip4_frag.o(.data)
    .data                                    0x10000004   Section        4  net_ip4_frag.o(.data)
    .data                                    0x10000008   Section        1  net_icmp.o(.data)
    port                                     0x1000000a   Data           2  net_udp.o(.data)
    .data                                    0x1000000a   Section        2  net_udp.o(.data)
    socket                                   0x1000000c   Data           1  net_tcp.o(.data)
    .data                                    0x1000000c   Section        4  net_tcp.o(.data)
    port                                     0x1000000e   Data           2  net_tcp.o(.data)
    ip4_control                              0x10000010   Data           8  net_ip4.o(.data)
    .data                                    0x10000010   Section        8  net_ip4.o(.data)
    os_mpi_thread                            0x100005a8   Data          24  rtx_lib.o(.data.os.thread.mpi)
    [Anonymous Symbol]                       0x100005a8   Section        0  rtx_lib.o(.data.os.thread.mpi)
    tcp_soc                                  0x100005c0   Data          32  sock.o(.data.tcp_soc)
    [Anonymous Symbol]                       0x100005c0   Section        0  sock.o(.data.tcp_soc)
    udp_soc                                  0x100005e0   Data           4  sock.o(.data.udp_soc)
    [Anonymous Symbol]                       0x100005e0   Section        0  sock.o(.data.udp_soc)
    .bss                                     0x10000600   Section      160  net_eth.o(.bss)
    .bss                                     0x100006a0   Section       24  net_arp.o(.bss)
    addr                                     0x100006b8   Data          16  net_udp.o(.bss)
    .bss                                     0x100006b8   Section       16  net_udp.o(.bss)
    .bss                                     0x100006c8   Section       32  net_ping_core.o(.bss)
    name_buf                                 0x100006e8   Data          16  net_sys.o(.bss)
    .bss                                     0x100006e8   Section       56  net_sys.o(.bss)
    os_id                                    0x10000714   Data          12  net_sys.o(.bss)
    mem_control                              0x10000720   Data          20  net_mem.o(.bss)
    .bss                                     0x10000720   Section       20  net_mem.o(.bss)
    .bss                                     0x10000734   Section       96  libspace.o(.bss)
    DMARxDscrTab                             0x10000794   Data          96  eth_stm32h7.o(.bss.DMARxDscrTab)
    [Anonymous Symbol]                       0x10000794   Section        0  eth_stm32h7.o(.bss.DMARxDscrTab)
    DMATxDscrTab                             0x100007f4   Data          96  eth_stm32h7.o(.bss.DMATxDscrTab)
    [Anonymous Symbol]                       0x100007f4   Section        0  eth_stm32h7.o(.bss.DMATxDscrTab)
    DataVar                                  0x10000854   Data           4  eeprom.o(.bss.DataVar)
    [Anonymous Symbol]                       0x10000854   Section        0  eeprom.o(.bss.DataVar)
    Emac                                     0x10000858   Data          36  eth_stm32h7.o(.bss.Emac)
    [Anonymous Symbol]                       0x10000858   Section        0  eth_stm32h7.o(.bss.Emac)
    HAL_ADC_MspInit.DMA_HandleStruct         0x1000087c   Data         120  msp_stm32h7.o(.bss.HAL_ADC_MspInit.DMA_HandleStruct)
    [Anonymous Symbol]                       0x1000087c   Section        0  msp_stm32h7.o(.bss.HAL_ADC_MspInit.DMA_HandleStruct)
    HAL_GetTick.ticks                        0x100008f4   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x100008f4   Section        0  main.o(.bss.HAL_GetTick.ticks)
    MAC_Config                               0x10000938   Data         100  eth_stm32h7.o(.bss.MAC_Config)
    [Anonymous Symbol]                       0x10000938   Section        0  eth_stm32h7.o(.bss.MAC_Config)
    MAC_Filter                               0x1000099c   Data          16  eth_stm32h7.o(.bss.MAC_Filter)
    [Anonymous Symbol]                       0x1000099c   Section        0  eth_stm32h7.o(.bss.MAC_Filter)
    MODBUS_SetRegister.lValue                0x100009ac   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue)
    [Anonymous Symbol]                       0x100009ac   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue)
    MODBUS_SetRegister.lValue.1              0x100009b0   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.1)
    [Anonymous Symbol]                       0x100009b0   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.1)
    MODBUS_SetRegister.lValue.2              0x100009b4   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.2)
    [Anonymous Symbol]                       0x100009b4   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.2)
    MODBUS_SetRegister.lValue.3              0x100009b8   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.3)
    [Anonymous Symbol]                       0x100009b8   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.3)
    MODBUS_SetRegister.lValue.4              0x100009bc   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.4)
    [Anonymous Symbol]                       0x100009bc   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.4)
    MODBUS_SetRegister.lValue.5              0x100009c0   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.5)
    [Anonymous Symbol]                       0x100009c0   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.5)
    MODBUS_SetRegister.lValue.6              0x100009c4   Data           4  modbus.o(.bss.MODBUS_SetRegister.lValue.6)
    [Anonymous Symbol]                       0x100009c4   Section        0  modbus.o(.bss.MODBUS_SetRegister.lValue.6)
    PHY                                      0x100009c8   Data          12  phy_lan8742a.o(.bss.PHY)
    [Anonymous Symbol]                       0x100009c8   Section        0  phy_lan8742a.o(.bss.PHY)
    Rx_Buff                                  0x100009d4   Data        6112  eth_stm32h7.o(.bss.Rx_Buff)
    [Anonymous Symbol]                       0x100009d4   Section        0  eth_stm32h7.o(.bss.Rx_Buff)
    TCP_QueueSpaces                          0x100021b4   Data        8192  sock.o(.bss.TCP_QueueSpaces)
    [Anonymous Symbol]                       0x100021b4   Section        0  sock.o(.bss.TCP_QueueSpaces)
    TCP_QueueStruct                          0x100041b4   Data         128  sock.o(.bss.TCP_QueueStruct)
    [Anonymous Symbol]                       0x100041b4   Section        0  sock.o(.bss.TCP_QueueStruct)
    TS_OverflowLock                          0x10004234   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x10004234   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    TX_Buff                                  0x10004235   Data        6112  eth_stm32h7.o(.bss.TX_Buff)
    [Anonymous Symbol]                       0x10004235   Section        0  eth_stm32h7.o(.bss.TX_Buff)
    TX_Config                                0x10005a18   Data          52  eth_stm32h7.o(.bss.TX_Config)
    [Anonymous Symbol]                       0x10005a18   Section        0  eth_stm32h7.o(.bss.TX_Config)
    eth0_arp_table                           0x10005a5c   Data         200  net_config.o(.bss.eth0_arp_table)
    [Anonymous Symbol]                       0x10005a5c   Section        0  net_config.o(.bss.eth0_arp_table)
    eth0_localm                              0x10005b24   Data          24  net_config.o(.bss.eth0_localm)
    [Anonymous Symbol]                       0x10005b24   Section        0  net_config.o(.bss.eth0_localm)
    eth0_mac_addr                            0x10005b3c   Data           6  net_config.o(.bss.eth0_mac_addr)
    [Anonymous Symbol]                       0x10005b3c   Section        0  net_config.o(.bss.eth0_mac_addr)
    eth0_stack                               0x10005b48   Data        1024  net_config.o(.bss.eth0_stack)
    [Anonymous Symbol]                       0x10005b48   Section        0  net_config.o(.bss.eth0_stack)
    eth0_state                               0x10005f48   Data           4  net_config.o(.bss.eth0_state)
    [Anonymous Symbol]                       0x10005f48   Section        0  net_config.o(.bss.eth0_state)
    hETH                                     0x10005f4c   Data         136  eth_stm32h7.o(.bss.hETH)
    [Anonymous Symbol]                       0x10005f4c   Section        0  eth_stm32h7.o(.bss.hETH)
    ip4_frag_scb                             0x10005fd4   Data          40  net_config.o(.bss.ip4_frag_scb)
    [Anonymous Symbol]                       0x10005fd4   Section        0  net_config.o(.bss.ip4_frag_scb)
    k_mul                                    0x10005ffc   Data           4  net_config.o(.bss.k_mul)
    [Anonymous Symbol]                       0x10005ffc   Section        0  net_config.o(.bss.k_mul)
    mem_pool                                 0x10006000   Data       32768  net_config.o(.bss.mem_pool)
    [Anonymous Symbol]                       0x10006000   Section        0  net_config.o(.bss.mem_pool)
    net_stack                                0x1000e000   Data        2048  net_config.o(.bss.net_stack)
    [Anonymous Symbol]                       0x1000e000   Section        0  net_config.o(.bss.net_stack)
    EventBuffer                              0x1000e800   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x1000e800   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x1000ec00   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x1000ec80   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x1000eca8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x1000eca8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x1000ece8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x10016ce8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x10016ce8   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x10016cec   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x10016cec   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x10016d20   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x10016d20   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    net_lock_cb                              0x10016d70   Data          28  net_config.o(.bss.os.mutex.cb)
    [Anonymous Symbol]                       0x10016d70   Section        0  net_config.o(.bss.os.mutex.cb)
    mem_lock_cb                              0x10016d8c   Data          28  net_config.o(.bss.os.mutex.cb)
    eth0_lock_cb                             0x10016da8   Data          16  net_config.o(.bss.os.semaphore.cb)
    [Anonymous Symbol]                       0x10016da8   Section        0  net_config.o(.bss.os.semaphore.cb)
    os_thread_cb                             0x10016db8   Data        1088  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x10016db8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x100171f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x1001723c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    net_thread_cb                            0x10017280   Data          68  net_config.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x10017280   Section        0  net_config.o(.bss.os.thread.cb)
    eth0_thread_cb                           0x100172c4   Data          68  net_config.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x10017308   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x10017308   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x10017508   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x10017508   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    net_timer_cb                             0x10017708   Data          32  net_config.o(.bss.os.timer.cb)
    [Anonymous Symbol]                       0x10017708   Section        0  net_config.o(.bss.os.timer.cb)
    os_kernel_is_active.os_kernel_active     0x10017728   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x10017728   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    tcp_scb                                  0x10017748   Data        1600  net_config.o(.bss.tcp_scb)
    [Anonymous Symbol]                       0x10017748   Section        0  net_config.o(.bss.tcp_scb)
    udp_scb                                  0x10017d88   Data         320  net_config.o(.bss.udp_scb)
    [Anonymous Symbol]                       0x10017d88   Section        0  net_config.o(.bss.udp_scb)
    Heap_Mem                                 0x10017ec8   Data        4096  startup_stm32h755xx.o(HEAP)
    HEAP                                     0x10017ec8   Section     4096  startup_stm32h755xx.o(HEAP)
    Stack_Mem                                0x10018ec8   Data        1024  startup_stm32h755xx.o(STACK)
    STACK                                    0x10018ec8   Section     1024  startup_stm32h755xx.o(STACK)
    __initial_sp                             0x100192c8   Data           0  startup_stm32h755xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000298   Number         0  startup_stm32h755xx.o ABSOLUTE
    __Vectors                                0x08100000   Data           4  startup_stm32h755xx.o(RESET)
    __Vectors_End                            0x08100298   Data           0  startup_stm32h755xx.o(RESET)
    __main                                   0x08100299   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x081002a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x081002a1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x081002a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x081002af   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x081002d5   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x081002d5   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x08100331   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0810034d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0810034f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08100353   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08100355   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08100357   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08100359   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08100359   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08100359   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0810035f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08100367   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0810036b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0810036b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08100373   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08100375   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08100375   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08100379   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08100381   Thumb Code     8  startup_stm32h755xx.o(.text)
    ADC3_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    ADC_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel0_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel1_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel2_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel3_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel4_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel5_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel6_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    BDMA_Channel7_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    CEC_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    CM4_SEV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    CM7_SEV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    COMP1_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    CRS_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    CRYP_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DCMI_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DFSDM1_FLT0_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DFSDM1_FLT1_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DFSDM1_FLT2_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DFSDM1_FLT3_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2D_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMAMUX1_OVR_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    DMAMUX2_OVR_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    ECC_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    ETH_WKUP_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI0_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI15_10_IRQHandler                     0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI1_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI2_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI3_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI4_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    EXTI9_5_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FDCAN1_IT0_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FDCAN1_IT1_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FDCAN2_IT0_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FDCAN2_IT1_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FDCAN_CAL_IRQHandler                     0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FLASH_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FMC_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    FPU_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HASH_RNG_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HOLD_CORE_IRQHandler                     0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_FLT_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_Master_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_TIMA_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_TIMB_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_TIMC_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_TIMD_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HRTIM1_TIME_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    HSEM1_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C1_ER_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C1_EV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C2_ER_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C2_EV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C3_ER_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C3_EV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C4_ER_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    I2C4_EV_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    JPEG_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPTIM1_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPTIM2_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPTIM3_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPTIM4_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPTIM5_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LPUART1_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LTDC_ER_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    LTDC_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    MDIOS_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    MDIOS_WKUP_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    MDMA_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_FS_EP1_IN_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_FS_EP1_OUT_IRQHandler                0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_FS_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_HS_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    PVD_AVD_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    QUADSPI_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    RCC_IRQHandler                           0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    RTC_Alarm_IRQHandler                     0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    RTC_WKUP_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SAI1_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SAI2_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SAI3_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SAI4_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SDMMC1_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SDMMC2_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPDIF_RX_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI1_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI2_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI3_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI4_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI5_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SPI6_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    SWPMI1_IRQHandler                        0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM15_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM16_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM17_IRQHandler                         0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM1_BRK_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM1_CC_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM1_UP_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM2_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM3_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM4_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM5_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM6_DAC_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM7_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM8_CC_IRQHandler                       0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    WAKEUP_PIN_IRQHandler                    0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    WWDG_IRQHandler                          0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    WWDG_RST_IRQHandler                      0x0810039b   Thumb Code     0  startup_stm32h755xx.o(.text)
    __user_initial_stackheap                 0x0810039d   Thumb Code     0  startup_stm32h755xx.o(.text)
    SVC_Handler                              0x081003c1   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x0810045b   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x0810046b   Thumb Code    16  irq_armv7m.o(.text)
    memcmp                                   0x08100489   Thumb Code    88  memcmp.o(.text)
    __aeabi_memcpy                           0x081004e1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x081004e1   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08100547   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x0810056b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0810056b   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0810056f   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x081005af   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x081005af   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x081005af   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x081005b3   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x081005fd   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x081005ff   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08100601   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08100603   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08100603   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08100603   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0810064b   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08100667   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x081006b1   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x081006c5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x081006c5   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x081006cd   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x081006d9   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x081006d9   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x081006db   Thumb Code     0  indicate_semi.o(.text)
    ADC_ConfigureBoostMode                   0x081006dd   Thumb Code   534  stm32h7xx_hal_adc.o(.text.ADC_ConfigureBoostMode)
    ADC_DMAConvCplt                          0x081008f5   Thumb Code   210  stm32h7xx_hal_adc.o(.text.ADC_DMAConvCplt)
    ADC_DMAError                             0x081009c9   Thumb Code    42  stm32h7xx_hal_adc.o(.text.ADC_DMAError)
    ADC_DMAHalfConvCplt                      0x081009f5   Thumb Code    22  stm32h7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt)
    ADC_Disable                              0x08100a0d   Thumb Code   196  stm32h7xx_hal_adc.o(.text.ADC_Disable)
    ADC_Enable                               0x08100ad1   Thumb Code   328  stm32h7xx_hal_adc.o(.text.ADC_Enable)
    ADC_Init                                 0x08100c19   Thumb Code   350  adc_stm32h7.o(.text.ADC_Init)
    BusFault_Handler                         0x08100d79   Thumb Code    18  irq_stm32h7.o(.text.BusFault_Handler)
    DMA2_Stream2_IRQHandler                  0x08101061   Thumb Code    18  irq_stm32h7.o(.text.DMA2_Stream2_IRQHandler)
    DebugMon_Handler                         0x08101ae9   Thumb Code    18  irq_stm32h7.o(.text.DebugMon_Handler)
    EEP_Init                                 0x08101afd   Thumb Code    78  eep_stm32h7.o(.text.EEP_Init)
    EEP_ReadVariable                         0x08101b4d   Thumb Code    26  eep_stm32h7.o(.text.EEP_ReadVariable)
    EEP_WriteVariable                        0x08101b69   Thumb Code    74  eep_stm32h7.o(.text.EEP_WriteVariable)
    EE_Init                                  0x08101d41   Thumb Code  1136  eeprom.o(.text.EE_Init)
    EE_ReadVariable                          0x08102399   Thumb Code   182  eeprom.o(.text.EE_ReadVariable)
    EE_WriteVariable                         0x0810259d   Thumb Code    64  eeprom.o(.text.EE_WriteVariable)
    ETH_IRQHandler                           0x081026e9   Thumb Code    16  eth_stm32h7.o(.text.ETH_IRQHandler)
    ErrorHandler                             0x08103039   Thumb Code    52  main.o(.text.ErrorHandler)
    EventRecorderDisable                     0x081031c9   Thumb Code   146  eventrecorder.o(.text.EventRecorderDisable)
    EventRecorderEnable                      0x0810325d   Thumb Code   146  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x081032f1   Thumb Code   452  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x081034b5   Thumb Code    74  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x08103501   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerGetFreq                0x0810350d   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    EventRecorderTimerSetup                  0x08103519   Thumb Code    36  eventrecorder.o(.text.EventRecorderTimerSetup)
    FIFO_FlushQueue                          0x0810353d   Thumb Code    50  fifo.o(.text.FIFO_FlushQueue)
    FIFO_GetAvailable                        0x08103571   Thumb Code    46  fifo.o(.text.FIFO_GetAvailable)
    FIFO_GetCount                            0x081035a1   Thumb Code    54  fifo.o(.text.FIFO_GetCount)
    FIFO_InitQueue                           0x081035d9   Thumb Code    76  fifo.o(.text.FIFO_InitQueue)
    FIFO_PullQueue                           0x08103625   Thumb Code   134  fifo.o(.text.FIFO_PullQueue)
    FIFO_PushQueue                           0x081036ad   Thumb Code   138  fifo.o(.text.FIFO_PushQueue)
    FLASH_Erase_Sector                       0x08103739   Thumb Code   222  stm32h7xx_hal_flash_ex.o(.text.FLASH_Erase_Sector)
    FLASH_WaitForLastOperation               0x0810392d   Thumb Code   414  stm32h7xx_hal_flash.o(.text.FLASH_WaitForLastOperation)
    HAL_ADCEx_Calibration_Start              0x08103c99   Thumb Code   344  stm32h7xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start)
    HAL_ADC_ConfigChannel                    0x08103df1   Thumb Code  3802  stm32h7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    HAL_ADC_ConvCpltCallback                 0x08104cd1   Thumb Code   280  adc_stm32h7.o(.text.HAL_ADC_ConvCpltCallback)
    HAL_ADC_ConvHalfCpltCallback             0x08104de9   Thumb Code     8  stm32h7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback)
    HAL_ADC_ErrorCallback                    0x08104df1   Thumb Code     8  stm32h7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback)
    HAL_ADC_Init                             0x08104df9   Thumb Code  2428  stm32h7xx_hal_adc.o(.text.HAL_ADC_Init)
    HAL_ADC_MspInit                          0x08105775   Thumb Code   384  msp_stm32h7.o(.text.HAL_ADC_MspInit)
    HAL_ADC_Start_DMA                        0x081058f5   Thumb Code   550  stm32h7xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
    HAL_DMA_Abort                            0x08105b1d   Thumb Code  2424  stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort)
    HAL_DMA_Abort_IT                         0x08106495   Thumb Code  1706  stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    HAL_DMA_DeInit                           0x08106b41   Thumb Code  1148  stm32h7xx_hal_dma.o(.text.HAL_DMA_DeInit)
    HAL_DMA_IRQHandler                       0x08106fbd   Thumb Code  4546  stm32h7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    HAL_DMA_Init                             0x08108181   Thumb Code  3488  stm32h7xx_hal_dma.o(.text.HAL_DMA_Init)
    HAL_DMA_Start_IT                         0x08108f21   Thumb Code  1828  stm32h7xx_hal_dma.o(.text.HAL_DMA_Start_IT)
    HAL_ETH_BuildRxDescriptors               0x08109645   Thumb Code   250  stm32h7xx_hal_eth.o(.text.HAL_ETH_BuildRxDescriptors)
    HAL_ETH_DMAErrorCallback                 0x08109741   Thumb Code     8  stm32h7xx_hal_eth.o(.text.HAL_ETH_DMAErrorCallback)
    HAL_ETH_DeInit                           0x08109749   Thumb Code    28  stm32h7xx_hal_eth.o(.text.HAL_ETH_DeInit)
    HAL_ETH_DescAssignMemory                 0x08109765   Thumb Code   126  stm32h7xx_hal_eth.o(.text.HAL_ETH_DescAssignMemory)
    HAL_ETH_EEECallback                      0x081097e5   Thumb Code     8  stm32h7xx_hal_eth.o(.text.HAL_ETH_EEECallback)
    HAL_ETH_GetMACConfig                     0x081097ed   Thumb Code   650  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACConfig)
    HAL_ETH_GetMACFilterConfig               0x08109a79   Thumb Code   194  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetMACFilterConfig)
    HAL_ETH_GetRxDataBuffer                  0x08109b3d   Thumb Code   346  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataBuffer)
    HAL_ETH_GetRxDataLength                  0x08109c99   Thumb Code   118  stm32h7xx_hal_eth.o(.text.HAL_ETH_GetRxDataLength)
    HAL_ETH_IRQHandler                       0x08109d11   Thumb Code   512  stm32h7xx_hal_eth.o(.text.HAL_ETH_IRQHandler)
    HAL_ETH_Init                             0x08109f11   Thumb Code   366  stm32h7xx_hal_eth.o(.text.HAL_ETH_Init)
    HAL_ETH_IsRxDataAvailable                0x0810a081   Thumb Code   570  stm32h7xx_hal_eth.o(.text.HAL_ETH_IsRxDataAvailable)
    HAL_ETH_MACErrorCallback                 0x0810a2bd   Thumb Code     8  stm32h7xx_hal_eth.o(.text.HAL_ETH_MACErrorCallback)
    HAL_ETH_MspDeInit                        0x0810a2c5   Thumb Code   126  msp_stm32h7.o(.text.HAL_ETH_MspDeInit)
    HAL_ETH_MspInit                          0x0810a345   Thumb Code   254  msp_stm32h7.o(.text.HAL_ETH_MspInit)
    HAL_ETH_PMTCallback                      0x0810a445   Thumb Code    40  eth_stm32h7.o(.text.HAL_ETH_PMTCallback)
    HAL_ETH_ReadPHYRegister                  0x0810a46d   Thumb Code   176  stm32h7xx_hal_eth.o(.text.HAL_ETH_ReadPHYRegister)
    HAL_ETH_RxCpltCallback                   0x0810a51d   Thumb Code    40  eth_stm32h7.o(.text.HAL_ETH_RxCpltCallback)
    HAL_ETH_SetMACConfig                     0x0810a545   Thumb Code    64  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACConfig)
    HAL_ETH_SetMACFilterConfig               0x0810a585   Thumb Code   152  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetMACFilterConfig)
    HAL_ETH_SetRxVLANIdentifier              0x0810a61d   Thumb Code    90  stm32h7xx_hal_eth.o(.text.HAL_ETH_SetRxVLANIdentifier)
    HAL_ETH_Start_IT                         0x0810a679   Thumb Code   214  stm32h7xx_hal_eth.o(.text.HAL_ETH_Start_IT)
    HAL_ETH_Stop_IT                          0x0810a751   Thumb Code   194  stm32h7xx_hal_eth.o(.text.HAL_ETH_Stop_IT)
    HAL_ETH_Transmit_IT                      0x0810a815   Thumb Code   148  stm32h7xx_hal_eth.o(.text.HAL_ETH_Transmit_IT)
    HAL_ETH_TxCpltCallback                   0x0810a8a9   Thumb Code    40  eth_stm32h7.o(.text.HAL_ETH_TxCpltCallback)
    HAL_ETH_WakeUpCallback                   0x0810a8d1   Thumb Code     8  stm32h7xx_hal_eth.o(.text.HAL_ETH_WakeUpCallback)
    HAL_ETH_WritePHYRegister                 0x0810a8d9   Thumb Code   180  stm32h7xx_hal_eth.o(.text.HAL_ETH_WritePHYRegister)
    HAL_FLASHEx_Erase                        0x0810a98d   Thumb Code   556  stm32h7xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase)
    HAL_FLASH_Lock                           0x0810abb9   Thumb Code    82  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Lock)
    HAL_FLASH_Program                        0x0810ac0d   Thumb Code   446  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Program)
    HAL_FLASH_Unlock                         0x0810adcd   Thumb Code   158  stm32h7xx_hal_flash.o(.text.HAL_FLASH_Unlock)
    HAL_GPIO_DeInit                          0x0810ae6d   Thumb Code   814  stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    HAL_GPIO_Init                            0x0810b19d   Thumb Code  1692  stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GetCurrentCPUID                      0x0810b839   Thumb Code    42  stm32h7xx_hal_cortex.o(.text.HAL_GetCurrentCPUID)
    HAL_GetREVID                             0x0810b865   Thumb Code    14  stm32h7xx_hal.o(.text.HAL_GetREVID)
    HAL_GetTick                              0x0810b875   Thumb Code   134  main.o(.text.HAL_GetTick)
    HAL_HSEM_ActivateNotification            0x0810b8fd   Thumb Code    24  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_ActivateNotification)
    HAL_HSEM_FreeCallback                    0x0810b915   Thumb Code     8  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_FreeCallback)
    HAL_HSEM_IRQHandler                      0x0810b91d   Thumb Code    54  stm32h7xx_hal_hsem.o(.text.HAL_HSEM_IRQHandler)
    HAL_Init                                 0x0810b955   Thumb Code   180  stm32h7xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x0810ba09   Thumb Code    10  main.o(.text.HAL_InitTick)
    HAL_MspInit                              0x0810ba15   Thumb Code    64  msp_stm32h7.o(.text.HAL_MspInit)
    HAL_NVIC_DisableIRQ                      0x0810ba55   Thumb Code    48  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    HAL_NVIC_EnableIRQ                       0x0810ba85   Thumb Code    48  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x0810bab5   Thumb Code    98  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x0810bb19   Thumb Code    74  stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_ClearPendingEvent              0x0810bb65   Thumb Code    24  stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ClearPendingEvent)
    HAL_PWREx_EnterSTOPMode                  0x0810bb7d   Thumb Code   392  stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOPMode)
    HAL_RCCEx_GetD3PCLK1Freq                 0x0810bd05   Thumb Code    38  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq)
    HAL_RCCEx_GetPLL1ClockFreq               0x0810bd2d   Thumb Code   684  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL1ClockFreq)
    HAL_RCCEx_GetPLL2ClockFreq               0x0810bfd9   Thumb Code   684  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq)
    HAL_RCCEx_GetPLL3ClockFreq               0x0810c285   Thumb Code   684  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq)
    HAL_RCCEx_GetPeriphCLKFreq               0x0810c531   Thumb Code  2776  stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq)
    HAL_RCC_GetHCLKFreq                      0x0810d009   Thumb Code    86  stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetSysClockFreq                  0x0810d061   Thumb Code   784  stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_SYSCFG_ETHInterfaceSelect            0x0810d371   Thumb Code    66  stm32h7xx_hal.o(.text.HAL_SYSCFG_ETHInterfaceSelect)
    HAL_UARTEx_RxEventCallback               0x0810d3b5   Thumb Code    12  stm32h7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    HAL_UARTEx_RxFifoFullCallback            0x0810d3c1   Thumb Code     8  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback)
    HAL_UARTEx_TxFifoEmptyCallback           0x0810d3c9   Thumb Code     8  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback)
    HAL_UARTEx_WakeupCallback                0x0810d3d1   Thumb Code     8  stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback)
    HAL_UART_ErrorCallback                   0x0810d3d9   Thumb Code   156  com_stm32h7.o(.text.HAL_UART_ErrorCallback)
    HAL_UART_IRQHandler                      0x0810d475   Thumb Code  1460  stm32h7xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    HAL_UART_TxCpltCallback                  0x0810da29   Thumb Code   156  com_stm32h7.o(.text.HAL_UART_TxCpltCallback)
    HSEM2_IRQHandler                         0x0810dac5   Thumb Code     8  irq_stm32h7.o(.text.HSEM2_IRQHandler)
    HardFault_Handler                        0x0810dacd   Thumb Code    18  irq_stm32h7.o(.text.HardFault_Handler)
    LMS_Load                                 0x0810df15   Thumb Code    16  main.o(.text.LMS_Load)
    MODBUS_GetRegister                       0x0810e06d   Thumb Code   686  modbus.o(.text.MODBUS_GetRegister)
    MODBUS_GetStatus                         0x0810e31d   Thumb Code    16  modbus.o(.text.MODBUS_GetStatus)
    MODBUS_ReplyToQuery                      0x0810e6e5   Thumb Code   412  modbus.o(.text.MODBUS_ReplyToQuery)
    MODBUS_SetRegister                       0x0810e881   Thumb Code  1100  modbus.o(.text.MODBUS_SetRegister)
    MODBUS_SetStatus                         0x0810eccd   Thumb Code    18  modbus.o(.text.MODBUS_SetStatus)
    MemManage_Handler                        0x0810ece1   Thumb Code    18  irq_stm32h7.o(.text.MemManage_Handler)
    NMI_Handler                              0x0810eda9   Thumb Code    18  irq_stm32h7.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x0810ee29   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0810ee31   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0810ee55   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0810ee5d   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    SystemInit                               0x0810f6e1   Thumb Code    48  system_stm32h7xx_dualcore_boot_cm4_cm7.o(.text.SystemInit)
    UART4_IRQHandler                         0x0810f7e1   Thumb Code    16  irq_stm32h7.o(.text.UART4_IRQHandler)
    UART5_IRQHandler                         0x0810f7f1   Thumb Code    16  irq_stm32h7.o(.text.UART5_IRQHandler)
    UART7_IRQHandler                         0x0810f801   Thumb Code    16  irq_stm32h7.o(.text.UART7_IRQHandler)
    UART8_IRQHandler                         0x0810f811   Thumb Code    16  irq_stm32h7.o(.text.UART8_IRQHandler)
    USART1_IRQHandler                        0x0810f8c1   Thumb Code    16  irq_stm32h7.o(.text.USART1_IRQHandler)
    USART2_IRQHandler                        0x0810f8d1   Thumb Code    16  irq_stm32h7.o(.text.USART2_IRQHandler)
    USART3_IRQHandler                        0x0810f8e1   Thumb Code    16  irq_stm32h7.o(.text.USART3_IRQHandler)
    USART6_IRQHandler                        0x0810f8f1   Thumb Code    16  irq_stm32h7.o(.text.USART6_IRQHandler)
    UsageFault_Handler                       0x0810f999   Thumb Code    18  irq_stm32h7.o(.text.UsageFault_Handler)
    __aeabi_assert                           0x0810faf5   Thumb Code    22  main.o(.text.__aeabi_assert)
    _mutex_acquire                           0x0810fb0d   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x0810fb2d   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x0810fb41   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x0810fb75   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x0810fb91   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    app_idle_task                            0x0810fb99   Thumb Code   332  idle.o(.text.app_idle_task)
    app_main_task                            0x0810fce5   Thumb Code  1532  task.o(.text.app_main_task)
    app_sock_task                            0x081102e1   Thumb Code  4938  sock.o(.text.app_sock_task)
    app_test_task                            0x0811162d   Thumb Code   170  test.o(.text.app_test_task)
    assert_failed                            0x081116d9   Thumb Code    22  main.o(.text.assert_failed)
    main                                     0x08111995   Thumb Code   218  main.o(.text.main)
    net_igmp_collect_mcast                   0x08111acd   Thumb Code    12  net_config.o(.text.net_igmp_collect_mcast)
    net_igmp_is_member                       0x08111ad9   Thumb Code    12  net_config.o(.text.net_igmp_is_member)
    net_igmp_process                         0x08111ae5   Thumb Code    10  net_config.o(.text.net_igmp_process)
    net_sys_error                            0x08111af1   Thumb Code   168  bsp_stm32h7.o(.text.net_sys_error)
    netif_create                             0x08111b99   Thumb Code    82  net_config.o(.text.netif_create)
    netif_lock                               0x08111bed   Thumb Code    20  net_config.o(.text.netif_lock)
    netif_unlock                             0x08111c01   Thumb Code    16  net_config.o(.text.netif_unlock)
    netos_delay                              0x08111c11   Thumb Code    20  net_config.o(.text.netos_delay)
    netos_flag_clear                         0x08111c25   Thumb Code    18  net_config.o(.text.netos_flag_clear)
    netos_flag_set                           0x08111c39   Thumb Code    20  net_config.o(.text.netos_flag_set)
    netos_flag_wait                          0x08111c4d   Thumb Code    32  net_config.o(.text.netos_flag_wait)
    netos_init                               0x08111c6d   Thumb Code    34  net_config.o(.text.netos_init)
    netos_lock                               0x08111c91   Thumb Code    20  net_config.o(.text.netos_lock)
    netos_mutex_create                       0x08111ca5   Thumb Code    54  net_config.o(.text.netos_mutex_create)
    netos_thread_create                      0x08111cdd   Thumb Code    26  net_config.o(.text.netos_thread_create)
    netos_thread_pass                        0x08111cf9   Thumb Code     8  net_config.o(.text.netos_thread_pass)
    netos_timer_create                       0x08111d01   Thumb Code    28  net_config.o(.text.netos_timer_create)
    netos_timer_start                        0x08111d1d   Thumb Code    30  net_config.o(.text.netos_timer_start)
    netos_unlock                             0x08111d3d   Thumb Code    16  net_config.o(.text.netos_unlock)
    osDelay                                  0x08111d4d   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08111d71   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08111d9d   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelGetTickFreq                      0x08111dc5   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickFreq)
    osKernelInitialize                       0x08111ded   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08111e19   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08111e3d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08111ead   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08111f2d   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08111f51   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08111f75   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08111f99   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08111fbd   Thumb Code   134  bsp_stm32h7.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08112045   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x0811204d   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08112051   Thumb Code    18  rtx_lib.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08112063   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x081120cf   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08112111   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08112147   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08112181   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x081121cb   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x081122ad   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x081122d1   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08112319   Thumb Code    66  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x0811235d   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x081123e5   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08112579   Thumb Code    72  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x081125e1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x081126a7   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x081126b9   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x081126e5   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08112705   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08112755   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08112765   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x08112779   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x081127b1   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x081127c1   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x081127fd   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0811282d   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x081128a5   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x081128c5   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x08112955   Thumb Code    80  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x081129a9   Thumb Code    32  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x081129cd   Thumb Code    72  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x08112a19   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsClear                       0x08112a25   Thumb Code    32  rtx_thread.o(.text.osThreadFlagsClear)
    osThreadFlagsGet                         0x08112a49   Thumb Code    32  rtx_thread.o(.text.osThreadFlagsGet)
    osThreadFlagsSet                         0x08112a6d   Thumb Code    84  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x08112ac5   Thumb Code    32  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x08112ae9   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08112b11   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x08112b35   Thumb Code    32  rtx_thread.o(.text.osThreadYield)
    osTimerNew                               0x08112b59   Thumb Code    32  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x08112b7d   Thumb Code    32  rtx_timer.o(.text.osTimerStart)
    netCore_Thread                           0x08114995   Thumb Code    90  net_sys.o(i.netCore_Thread)
    netETH_Notify                            0x081149f9   Thumb Code     2  net_eth.o(i.netETH_Notify)
    netETH_ReceiveRaw                        0x081149fb   Thumb Code     2  net_eth.o(i.netETH_ReceiveRaw)
    netETH_Thread                            0x081149fd   Thumb Code   114  net_eth.o(i.netETH_Thread)
    netIF_GetOption                          0x08114a71   Thumb Code   118  net_sys.o(i.netIF_GetOption)
    netInitialize                            0x08114aed   Thumb Code   104  net_sys.o(i.netInitialize)
    netMAC_aton                              0x08114b61   Thumb Code    94  net_addr.o(i.netMAC_aton)
    netTCP_Abort                             0x08114bbf   Thumb Code    24  net_tcp.o(i.netTCP_Abort)
    netTCP_GetBuffer                         0x08114bd7   Thumb Code     8  net_tcp.o(i.netTCP_GetBuffer)
    netTCP_GetSocket                         0x08114bdf   Thumb Code    24  net_tcp.o(i.netTCP_GetSocket)
    netTCP_GetState                          0x08114bf7   Thumb Code     4  net_tcp.o(i.netTCP_GetState)
    netTCP_Listen                            0x08114bfb   Thumb Code    28  net_tcp.o(i.netTCP_Listen)
    netTCP_Send                              0x08114c17   Thumb Code    38  net_tcp.o(i.netTCP_Send)
    netTCP_SendReady                         0x08114c3d   Thumb Code     4  net_tcp.o(i.netTCP_SendReady)
    netTCP_SetOption                         0x08114c41   Thumb Code    32  net_tcp.o(i.netTCP_SetOption)
    netUDP_GetBuffer                         0x08114c61   Thumb Code     8  net_udp.o(i.netUDP_GetBuffer)
    netUDP_GetSocket                         0x08114c69   Thumb Code    24  net_udp.o(i.netUDP_GetSocket)
    netUDP_Open                              0x08114c81   Thumb Code    28  net_udp.o(i.netUDP_Open)
    netUDP_Send                              0x08114c9d   Thumb Code    38  net_udp.o(i.netUDP_Send)
    net_addr4_aton                           0x08114cc3   Thumb Code    94  net_addr.o(i.net_addr4_aton)
    net_addr4_to_mac                         0x08114d21   Thumb Code    30  net_addr.o(i.net_addr4_to_mac)
    net_addr_find_route                      0x08114d3f   Thumb Code    14  net_addr.o(i.net_addr_find_route)
    net_addr_get_local                       0x08114d4d   Thumb Code    14  net_addr.o(i.net_addr_get_local)
    net_addr_is_unspec                       0x08114d61   Thumb Code    20  net_addr.o(i.net_addr_is_unspec)
    net_arp_cache_add                        0x08114d75   Thumb Code   160  net_arp.o(i.net_arp_cache_add)
    net_arp_cache_early                      0x08114e15   Thumb Code   134  net_arp.o(i.net_arp_cache_early)
    net_arp_cache_find                       0x08114e9d   Thumb Code   124  net_arp.o(i.net_arp_cache_find)
    net_arp_cache_init                       0x08114f1d   Thumb Code    52  net_arp.o(i.net_arp_cache_init)
    net_arp_cache_run                        0x08114f55   Thumb Code    22  net_arp.o(i.net_arp_cache_run)
    net_arp_enqueue                          0x08114f71   Thumb Code   102  net_arp.o(i.net_arp_enqueue)
    net_arp_notify                           0x08114fd7   Thumb Code    32  net_arp.o(i.net_arp_notify)
    net_arp_process                          0x08114ff7   Thumb Code   354  net_arp.o(i.net_arp_process)
    net_atoi                                 0x08115159   Thumb Code    66  net_common.o(i.net_atoi)
    net_chksum_buf                           0x0811519b   Thumb Code    48  net_common.o(i.net_chksum_buf)
    net_crc_buf                              0x081151cb   Thumb Code    30  net_common.o(i.net_crc_buf)
    net_eth_callback                         0x081151e9   Thumb Code    14  net_eth.o(i.net_eth_callback)
    net_eth_config_mcast                     0x081151f7   Thumb Code    82  net_eth.o(i.net_eth_config_mcast)
    net_eth_get_option                       0x08115249   Thumb Code   130  net_eth.o(i.net_eth_get_option)
    net_eth_iface_init                       0x081152cd   Thumb Code    22  net_eth.o(i.net_eth_iface_init)
    net_eth_iface_run                        0x081152e9   Thumb Code    22  net_eth.o(i.net_eth_iface_run)
    net_eth_output                           0x08115305   Thumb Code   152  net_eth.o(i.net_eth_output)
    net_eth_send_frame                       0x0811539d   Thumb Code   188  net_eth.o(i.net_eth_send_frame)
    net_icmp_init                            0x0811545d   Thumb Code    20  net_icmp.o(i.net_icmp_init)
    net_icmp_process                         0x08115475   Thumb Code   250  net_icmp.o(i.net_icmp_process)
    net_icmp_send_echo                       0x0811557d   Thumb Code   120  net_icmp.o(i.net_icmp_send_echo)
    net_if_map_all                           0x081155fd   Thumb Code     6  net_sys.o(i.net_if_map_all)
    net_ip4_chk_frame                        0x08115609   Thumb Code   252  net_ip4.o(i.net_ip4_chk_frame)
    net_ip4_chksum                           0x08115711   Thumb Code    44  net_ip4.o(i.net_ip4_chksum)
    net_ip4_chksum_buf                       0x0811573d   Thumb Code     6  net_ip4.o(i.net_ip4_chksum_buf)
    net_ip4_find_route                       0x08115745   Thumb Code   104  net_ip4.o(i.net_ip4_find_route)
    net_ip4_frag_add                         0x081157c5   Thumb Code   284  net_ip4_frag.o(i.net_ip4_frag_add)
    net_ip4_frag_get                         0x081158e9   Thumb Code   168  net_ip4_frag.o(i.net_ip4_frag_get)
    net_ip4_frag_init                        0x08115995   Thumb Code    12  net_ip4_frag.o(i.net_ip4_frag_init)
    net_ip4_frag_run                         0x081159a5   Thumb Code    50  net_ip4_frag.o(i.net_ip4_frag_run)
    net_ip4_get_local                        0x081159e1   Thumb Code    40  net_ip4.o(i.net_ip4_get_local)
    net_ip4_init                             0x08115a0d   Thumb Code    14  net_ip4.o(i.net_ip4_init)
    net_ip4_is_onlink                        0x08115a25   Thumb Code    32  net_ip4.o(i.net_ip4_is_onlink)
    net_ip4_is_subcast                       0x08115a45   Thumb Code    38  net_ip4.o(i.net_ip4_is_subcast)
    net_ip4_reass_frame                      0x08115a6b   Thumb Code    14  net_ip4.o(i.net_ip4_reass_frame)
    net_ip4_send_frame                       0x08115a79   Thumb Code   282  net_ip4.o(i.net_ip4_send_frame)
    net_ip4_tx_offl_hl                       0x08115b9d   Thumb Code    42  net_ip4.o(i.net_ip4_tx_offl_hl)
    net_loop_iface_init                      0x08115bc9   Thumb Code    22  net_loopback.o(i.net_loop_iface_init)
    net_loop_iface_run                       0x08115be5   Thumb Code   112  net_loopback.o(i.net_loop_iface_run)
    net_loop_send_frame                      0x08115c5d   Thumb Code    82  net_loopback.o(i.net_loop_send_frame)
    net_mem_alloc                            0x08115cb5   Thumb Code   130  net_mem.o(i.net_mem_alloc)
    net_mem_avail                            0x08115d41   Thumb Code    22  net_mem.o(i.net_mem_avail)
    net_mem_free                             0x08115d5d   Thumb Code   114  net_mem.o(i.net_mem_free)
    net_mem_init                             0x08115dd9   Thumb Code    84  net_mem.o(i.net_mem_init)
    net_mem_shrink                           0x08115e35   Thumb Code    52  net_mem.o(i.net_mem_shrink)
    net_ping_client_init                     0x08115e6d   Thumb Code    10  net_ping_core.o(i.net_ping_client_init)
    net_ping_client_run                      0x08115e7d   Thumb Code    56  net_ping_core.o(i.net_ping_client_run)
    net_rand32                               0x08115ebd   Thumb Code    18  net_sys.o(i.net_rand32)
    net_sys_lock                             0x08115ed9   Thumb Code     8  net_sys.o(i.net_sys_lock)
    net_sys_resume                           0x08115ee5   Thumb Code    22  net_sys.o(i.net_sys_resume)
    net_sys_tick                             0x08115efd   Thumb Code    16  net_sys.o(i.net_sys_tick)
    net_sys_unlock                           0x08115f11   Thumb Code     8  net_sys.o(i.net_sys_unlock)
    net_sys_wakeup                           0x08115f1d   Thumb Code    26  net_sys.o(i.net_sys_wakeup)
    net_tcp_abort                            0x08115f3d   Thumb Code    84  net_tcp.o(i.net_tcp_abort)
    net_tcp_check_send                       0x08115f95   Thumb Code    54  net_tcp.o(i.net_tcp_check_send)
    net_tcp_get_buf                          0x08115fd1   Thumb Code    30  net_tcp.o(i.net_tcp_get_buf)
    net_tcp_get_socket                       0x08115ff1   Thumb Code    62  net_tcp.o(i.net_tcp_get_socket)
    net_tcp_get_state                        0x08116035   Thumb Code    36  net_tcp.o(i.net_tcp_get_state)
    net_tcp_listen                           0x0811605d   Thumb Code   106  net_tcp.o(i.net_tcp_listen)
    net_tcp_process                          0x081160cd   Thumb Code  1230  net_tcp.o(i.net_tcp_process)
    net_tcp_send                             0x0811659d   Thumb Code   214  net_tcp.o(i.net_tcp_send)
    net_tcp_set_option                       0x0811667d   Thumb Code   144  net_tcp.o(i.net_tcp_set_option)
    net_tcp_socket_init                      0x08116711   Thumb Code    16  net_tcp.o(i.net_tcp_socket_init)
    net_tcp_socket_run                       0x08116725   Thumb Code   696  net_tcp.o(i.net_tcp_socket_run)
    net_udp_get_buf                          0x081169e9   Thumb Code    30  net_udp.o(i.net_udp_get_buf)
    net_udp_get_socket                       0x08116a09   Thumb Code    66  net_udp.o(i.net_udp_get_socket)
    net_udp_open                             0x08116a51   Thumb Code   100  net_udp.o(i.net_udp_open)
    net_udp_process                          0x08116abd   Thumb Code   198  net_udp.o(i.net_udp_process)
    net_udp_send_if                          0x08116b91   Thumb Code   350  net_udp.o(i.net_udp_send_if)
    net_udp_socket_init                      0x08116cf9   Thumb Code    12  net_udp.o(i.net_udp_socket_init)
    net_xtouc                                0x08116d09   Thumb Code    26  net_common.o(i.net_xtouc)
    __aeabi_d2uiz                            0x0811736d   Thumb Code     0  dfixu.o(x$fpl$dfixu)
    _dfixu                                   0x0811736d   Thumb Code    90  dfixu.o(x$fpl$dfixu)
    __aeabi_ui2d                             0x081173c7   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x081173c7   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x081173ed   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x081173ed   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x08117541   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x081175dd   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    _fp_init                                 0x081175e9   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08117601   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08117601   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __I$use$fp                               0x08117602   Number         0  usenofp.o(x$fpl$usenofp)
    net_loop_if_config                       0x08117604   Data          44  net_loopback.o(.constdata)
    net_ping_payload                         0x0811763c   Data          18  net_ping_core.o(.constdata)
    net_addr4_loopback                       0x0811764e   Data           4  net_ip4.o(.constdata)
    net_addr_unspec                          0x08117652   Data           6  net_addr.o(.constdata)
    net_addr_bcast                           0x08117658   Data           6  net_addr.o(.constdata)
    net_lib_version                          0x08117660   Data           4  net_version.o(.constdata)
    network_ip4_release_v7.16.0              0x08117660   Data           4  net_version.o(.constdata)
    osRtxConfig                              0x08117664   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x081176d4   Data          56  rtx_lib.o(.rodata)
    D1CorePrescTable                         0x08117734   Data          16  system_stm32h7xx_dualcore_boot_cm4_cm7.o(.rodata.D1CorePrescTable)
    Driver_ETH_MAC0                          0x08117758   Data          68  eth_stm32h7.o(.rodata.Driver_ETH_MAC0)
    Driver_ETH_PHY0                          0x0811779c   Data          32  phy_lan8742a.o(.rodata.Driver_ETH_PHY0)
    EventRecorderInfo                        0x081177bc   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    LED0                                     0x081177dc   Data           4  led_stm32h7.o(.rodata.LED0)
    LED1                                     0x081177e0   Data           4  led_stm32h7.o(.rodata.LED1)
    app_idle_attr                            0x08117dfc   Data          36  task.o(.rodata.app_idle_attr)
    app_main_attr                            0x08117e20   Data          36  task.o(.rodata.app_main_attr)
    app_sock_attr                            0x08117e44   Data          36  task.o(.rodata.app_sock_attr)
    app_test_attr                            0x08117e68   Data          36  task.o(.rodata.app_test_attr)
    net_arp_list                             0x08117f58   Data           8  net_config.o(.rodata.net_arp_list)
    net_eth0_if_config                       0x08117f60   Data          44  net_config.o(.rodata.net_eth0_if_config)
    net_eth_list                             0x08117f8c   Data           8  net_config.o(.rodata.net_eth_list)
    net_icmp_list                            0x08117f94   Data           8  net_config.o(.rodata.net_icmp_list)
    net_if_inet_def                          0x08117f9c   Data           4  net_config.o(.rodata.net_if_inet_def)
    net_if_link_def                          0x08117fa0   Data           4  net_config.o(.rodata.net_if_link_def)
    net_if_list_all                          0x08117fa4   Data           8  net_config.o(.rodata.net_if_list_all)
    net_ip4_frag_config                      0x08117fac   Data           8  net_config.o(.rodata.net_ip4_frag_config)
    net_sys_config                           0x08117fc4   Data          28  net_config.o(.rodata.net_sys_config)
    net_tcp_config                           0x08117fe0   Data          24  net_config.o(.rodata.net_tcp_config)
    net_udp_config                           0x0811802c   Data          12  net_config.o(.rodata.net_udp_config)
    netif_getopt_func                        0x08118038   Data          16  net_config.o(.rodata.netif_getopt_func)
    osRtxUserSVC                             0x08118048   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08119b8c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08119bac   Number         0  anon$$obj.o(Region$$Table)
    net_eth0_icmp_control                    0x10000008   Data           1  net_icmp.o(.data)
    SystemCoreClock                          0x10000018   Data           4  system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemCoreClock)
    SystemD2Clock                            0x1000001c   Data           4  system_stm32h7xx_dualcore_boot_cm4_cm7.o(.data.SystemD2Clock)
    hADC1                                    0x10000020   Data         100  adc_stm32h7.o(.data.hADC1)
    hUART1                                   0x10000084   Data         144  com_stm32h7.o(.data.hUART1)
    hUART2                                   0x10000114   Data         144  com_stm32h7.o(.data.hUART2)
    hUART3                                   0x100001a4   Data         144  com_stm32h7.o(.data.hUART3)
    hUART4                                   0x10000234   Data         144  com_stm32h7.o(.data.hUART4)
    hUART5                                   0x100002c4   Data         144  com_stm32h7.o(.data.hUART5)
    hUART6                                   0x10000354   Data         144  com_stm32h7.o(.data.hUART6)
    hUART7                                   0x100003e4   Data         144  com_stm32h7.o(.data.hUART7)
    hUART8                                   0x10000474   Data         144  com_stm32h7.o(.data.hUART8)
    osRtxInfo                                0x10000504   Data         164  rtx_kernel.o(.data.os)
    net_eth0_if_control                      0x10000600   Data         160  net_eth.o(.bss)
    net_eth0_arp_control                     0x100006a0   Data          24  net_arp.o(.bss)
    net_ping_control                         0x100006c8   Data          32  net_ping_core.o(.bss)
    net_sys_control                          0x100006f8   Data          28  net_sys.o(.bss)
    __libspace_start                         0x10000734   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x10000794   Data           0  libspace.o(.bss)
    LocalMS                                  0x100008f8   Data          64  main.o(.bss.LocalMS)
    app_idle_tid                             0x10005a4c   Data           4  task.o(.bss.app_idle_tid)
    app_main_tid                             0x10005a50   Data           4  task.o(.bss.app_main_tid)
    app_sock_tid                             0x10005a54   Data           4  task.o(.bss.app_sock_tid)
    app_test_tid                             0x10005a58   Data           4  task.o(.bss.app_test_tid)
    .bss.os.msgqueue.cb$$Base                0x10016cec   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x10016d20   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.mutex.cb$$Base                   0x10016d70   Number         0  net_config.o(.bss.os.mutex.cb)
    .bss.os.mutex.cb$$Limit                  0x10016da8   Number         0  net_config.o(.bss.os.mutex.cb)
    .bss.os.semaphore.cb$$Base               0x10016da8   Number         0  net_config.o(.bss.os.semaphore.cb)
    .bss.os.semaphore.cb$$Limit              0x10016db8   Number         0  net_config.o(.bss.os.semaphore.cb)
    .bss.os.thread.cb$$Base                  0x10016db8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x10017308   Number         0  net_config.o(.bss.os.thread.cb)
    .bss.os.timer.cb$$Base                   0x10017708   Number         0  net_config.o(.bss.os.timer.cb)
    .bss.os.timer.cb$$Limit                  0x10017728   Number         0  net_config.o(.bss.os.timer.cb)
    pFlash                                   0x1001772c   Data          28  stm32h7xx_hal_flash.o(.bss.pFlash)
    ADC1_Values                              0x30046000   Data           6  adc_stm32h7.o(.bss.ARM.__at_0x30046000)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08100299

  Load Region LR_IROM1 (Base: 0x08100000, Size: 0x0001a1c0, Max: 0x00100000, ABSOLUTE, COMPRESSED[0x00019c40])

    Execution Region ER_IROM1 (Exec base: 0x08100000, Load base: 0x08100000, Size: 0x00019bac, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08100000   0x08100000   0x00000298   Data   RO         2247    RESET               startup_stm32h755xx.o
    0x08100298   0x08100298   0x00000008   Code   RO         3529  * !!!main             c_w.l(__main.o)
    0x081002a0   0x081002a0   0x00000034   Code   RO         3720    !!!scatter          c_w.l(__scatter.o)
    0x081002d4   0x081002d4   0x0000005a   Code   RO         3718    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x0810032e   0x0810032e   0x00000002   PAD
    0x08100330   0x08100330   0x0000001c   Code   RO         3722    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0810034c   0x0810034c   0x00000002   Code   RO         3583    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0810034e   0x0810034e   0x00000004   Code   RO         3595    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3598    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3601    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3603    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3605    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3608    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3610    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3612    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3614    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3616    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3618    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3620    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3622    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3624    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3626    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3628    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3632    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3634    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3636    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000000   Code   RO         3638    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08100352   0x08100352   0x00000002   Code   RO         3639    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08100354   0x08100354   0x00000002   Code   RO         3674    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3702    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3704    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3707    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3710    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3712    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000000   Code   RO         3715    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08100356   0x08100356   0x00000002   Code   RO         3716    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08100358   0x08100358   0x00000000   Code   RO         3543    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08100358   0x08100358   0x00000000   Code   RO         3556    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08100358   0x08100358   0x00000006   Code   RO         3568    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0810035e   0x0810035e   0x00000008   Code   RO         3557    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08100366   0x08100366   0x00000004   Code   RO         3559    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0810036a   0x0810036a   0x00000000   Code   RO         3561    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0810036a   0x0810036a   0x00000008   Code   RO         3562    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08100372   0x08100372   0x00000002   Code   RO         3587    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08100374   0x08100374   0x00000000   Code   RO         3645    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08100374   0x08100374   0x00000004   Code   RO         3646    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08100378   0x08100378   0x00000006   Code   RO         3647    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0810037e   0x0810037e   0x00000002   PAD
    0x08100380   0x08100380   0x00000040   Code   RO         2248    .text               startup_stm32h755xx.o
    0x081003c0   0x081003c0   0x000000c8   Code   RO         2730    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x08100488   0x08100488   0x00000058   Code   RO         3515    .text               c_w.l(memcmp.o)
    0x081004e0   0x081004e0   0x0000008a   Code   RO         3519    .text               c_w.l(rt_memcpy_v6.o)
    0x0810056a   0x0810056a   0x00000044   Code   RO         3521    .text               c_w.l(rt_memclr.o)
    0x081005ae   0x081005ae   0x0000004e   Code   RO         3523    .text               c_w.l(rt_memclr_w.o)
    0x081005fc   0x081005fc   0x00000006   Code   RO         3527    .text               c_w.l(heapauxi.o)
    0x08100602   0x08100602   0x00000064   Code   RO         3548    .text               c_w.l(rt_memcpy_w.o)
    0x08100666   0x08100666   0x0000004a   Code   RO         3572    .text               c_w.l(sys_stackheap_outer.o)
    0x081006b0   0x081006b0   0x00000012   Code   RO         3574    .text               c_w.l(exit.o)
    0x081006c2   0x081006c2   0x00000002   PAD
    0x081006c4   0x081006c4   0x00000008   Code   RO         3584    .text               c_w.l(libspace.o)
    0x081006cc   0x081006cc   0x0000000c   Code   RO         3640    .text               c_w.l(sys_exit.o)
    0x081006d8   0x081006d8   0x00000002   Code   RO         3663    .text               c_w.l(use_no_semi.o)
    0x081006da   0x081006da   0x00000000   Code   RO         3665    .text               c_w.l(indicate_semi.o)
    0x081006da   0x081006da   0x00000002   PAD
    0x081006dc   0x081006dc   0x00000216   Code   RO          763    .text.ADC_ConfigureBoostMode  stm32h7xx_hal_adc.o
    0x081008f2   0x081008f2   0x00000002   PAD
    0x081008f4   0x081008f4   0x000000d2   Code   RO          797    .text.ADC_DMAConvCplt  stm32h7xx_hal_adc.o
    0x081009c6   0x081009c6   0x00000002   PAD
    0x081009c8   0x081009c8   0x0000002a   Code   RO          801    .text.ADC_DMAError  stm32h7xx_hal_adc.o
    0x081009f2   0x081009f2   0x00000002   PAD
    0x081009f4   0x081009f4   0x00000016   Code   RO          799    .text.ADC_DMAHalfConvCplt  stm32h7xx_hal_adc.o
    0x08100a0a   0x08100a0a   0x00000002   PAD
    0x08100a0c   0x08100a0c   0x000000c4   Code   RO          769    .text.ADC_Disable   stm32h7xx_hal_adc.o
    0x08100ad0   0x08100ad0   0x00000148   Code   RO          777    .text.ADC_Enable    stm32h7xx_hal_adc.o
    0x08100c18   0x08100c18   0x0000015e   Code   RO          299    .text.ADC_Init      adc_stm32h7.o
    0x08100d76   0x08100d76   0x00000002   PAD
    0x08100d78   0x08100d78   0x00000012   Code   RO          116    .text.BusFault_Handler  irq_stm32h7.o
    0x08100d8a   0x08100d8a   0x00000002   PAD
    0x08100d8c   0x08100d8c   0x000002c2   Code   RO          227    .text.Control       eth_stm32h7.o
    0x0810104e   0x0810104e   0x00000002   PAD
    0x08101050   0x08101050   0x0000000e   Code   RO          225    .text.ControlTimer  eth_stm32h7.o
    0x0810105e   0x0810105e   0x00000002   PAD
    0x08101060   0x08101060   0x00000012   Code   RO          122    .text.DMA2_Stream2_IRQHandler  irq_stm32h7.o
    0x08101072   0x08101072   0x00000002   PAD
    0x08101074   0x08101074   0x000001ca   Code   RO         1085    .text.DMA_CalcBaseAndBitshift  stm32h7xx_hal_dma.o
    0x0810123e   0x0810123e   0x00000002   PAD
    0x08101240   0x08101240   0x00000178   Code   RO         1087    .text.DMA_CalcDMAMUXChannelBaseAndMask  stm32h7xx_hal_dma.o
    0x081013b8   0x081013b8   0x0000012a   Code   RO         1089    .text.DMA_CalcDMAMUXRequestGenBaseAndMask  stm32h7xx_hal_dma.o
    0x081014e2   0x081014e2   0x00000002   PAD
    0x081014e4   0x081014e4   0x000000f0   Code   RO         1083    .text.DMA_CheckFifoParam  stm32h7xx_hal_dma.o
    0x081015d4   0x081015d4   0x00000514   Code   RO         1095    .text.DMA_SetConfig  stm32h7xx_hal_dma.o
    0x08101ae8   0x08101ae8   0x00000012   Code   RO          120    .text.DebugMon_Handler  irq_stm32h7.o
    0x08101afa   0x08101afa   0x00000002   PAD
    0x08101afc   0x08101afc   0x0000004e   Code   RO          311    .text.EEP_Init      eep_stm32h7.o
    0x08101b4a   0x08101b4a   0x00000002   PAD
    0x08101b4c   0x08101b4c   0x0000001a   Code   RO          315    .text.EEP_ReadVariable  eep_stm32h7.o
    0x08101b66   0x08101b66   0x00000002   PAD
    0x08101b68   0x08101b68   0x0000004a   Code   RO          317    .text.EEP_WriteVariable  eep_stm32h7.o
    0x08101bb2   0x08101bb2   0x00000002   PAD
    0x08101bb4   0x08101bb4   0x000000c8   Code   RO          421    .text.EE_FindValidPage  eeprom.o
    0x08101c7c   0x08101c7c   0x000000c4   Code   RO          415    .text.EE_Format     eeprom.o
    0x08101d40   0x08101d40   0x00000470   Code   RO          411    .text.EE_Init       eeprom.o
    0x081021b0   0x081021b0   0x000001e6   Code   RO          425    .text.EE_PageTransfer  eeprom.o
    0x08102396   0x08102396   0x00000002   PAD
    0x08102398   0x08102398   0x000000b6   Code   RO          417    .text.EE_ReadVariable  eeprom.o
    0x0810244e   0x0810244e   0x00000002   PAD
    0x08102450   0x08102450   0x000000fa   Code   RO          419    .text.EE_VerifyPageFullWriteVariable  eeprom.o
    0x0810254a   0x0810254a   0x00000002   PAD
    0x0810254c   0x0810254c   0x0000004e   Code   RO          413    .text.EE_VerifyPageFullyErased  eeprom.o
    0x0810259a   0x0810259a   0x00000002   PAD
    0x0810259c   0x0810259c   0x00000040   Code   RO          423    .text.EE_WriteVariable  eeprom.o
    0x081025dc   0x081025dc   0x00000092   Code   RO         1160    .text.ETH_DMARxDescListInit  stm32h7xx_hal_eth.o
    0x0810266e   0x0810266e   0x00000002   PAD
    0x08102670   0x08102670   0x00000078   Code   RO         1158    .text.ETH_DMATxDescListInit  stm32h7xx_hal_eth.o
    0x081026e8   0x081026e8   0x00000010   Code   RO          191    .text.ETH_IRQHandler  eth_stm32h7.o
    0x081026f8   0x081026f8   0x000000e6   Code   RO         1156    .text.ETH_MACDMAConfig  stm32h7xx_hal_eth.o
    0x081027de   0x081027de   0x00000002   PAD
    0x081027e0   0x081027e0   0x000000dc   Code   RO         1154    .text.ETH_MAC_MDIO_ClkConfig  stm32h7xx_hal_eth.o
    0x081028bc   0x081028bc   0x000004d0   Code   RO         1178    .text.ETH_Prepare_Tx_Descriptors  stm32h7xx_hal_eth.o
    0x08102d8c   0x08102d8c   0x000000d6   Code   RO         1222    .text.ETH_SetDMAConfig  stm32h7xx_hal_eth.o
    0x08102e62   0x08102e62   0x00000002   PAD
    0x08102e64   0x08102e64   0x000001d4   Code   RO         1218    .text.ETH_SetMACConfig  stm32h7xx_hal_eth.o
    0x08103038   0x08103038   0x00000034   Code   RO           14    .text.ErrorHandler  main.o
    0x0810306c   0x0810306c   0x0000005a   Code   RO          525    .text.EventGetTS    eventrecorder.o
    0x081030c6   0x081030c6   0x00000002   PAD
    0x081030c8   0x081030c8   0x000000fe   Code   RO          527    .text.EventRecordItem  eventrecorder.o
    0x081031c6   0x081031c6   0x00000002   PAD
    0x081031c8   0x081031c8   0x00000092   Code   RO          531    .text.EventRecorderDisable  eventrecorder.o
    0x0810325a   0x0810325a   0x00000002   PAD
    0x0810325c   0x0810325c   0x00000092   Code   RO          523    .text.EventRecorderEnable  eventrecorder.o
    0x081032ee   0x081032ee   0x00000002   PAD
    0x081032f0   0x081032f0   0x000001c4   Code   RO          519    .text.EventRecorderInitialize  eventrecorder.o
    0x081034b4   0x081034b4   0x0000004a   Code   RO          529    .text.EventRecorderStart  eventrecorder.o
    0x081034fe   0x081034fe   0x00000002   PAD
    0x08103500   0x08103500   0x0000000c   Code   RO          517    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x0810350c   0x0810350c   0x0000000c   Code   RO          515    .text.EventRecorderTimerGetFreq  eventrecorder.o
    0x08103518   0x08103518   0x00000024   Code   RO          513    .text.EventRecorderTimerSetup  eventrecorder.o
    0x0810353c   0x0810353c   0x00000032   Code   RO          329    .text.FIFO_FlushQueue  fifo.o
    0x0810356e   0x0810356e   0x00000002   PAD
    0x08103570   0x08103570   0x0000002e   Code   RO          333    .text.FIFO_GetAvailable  fifo.o
    0x0810359e   0x0810359e   0x00000002   PAD
    0x081035a0   0x081035a0   0x00000036   Code   RO          331    .text.FIFO_GetCount  fifo.o
    0x081035d6   0x081035d6   0x00000002   PAD
    0x081035d8   0x081035d8   0x0000004c   Code   RO          327    .text.FIFO_InitQueue  fifo.o
    0x08103624   0x08103624   0x00000086   Code   RO          347    .text.FIFO_PullQueue  fifo.o
    0x081036aa   0x081036aa   0x00000002   PAD
    0x081036ac   0x081036ac   0x0000008a   Code   RO          345    .text.FIFO_PushQueue  fifo.o
    0x08103736   0x08103736   0x00000002   PAD
    0x08103738   0x08103738   0x000000de   Code   RO         1347    .text.FLASH_Erase_Sector  stm32h7xx_hal_flash_ex.o
    0x08103816   0x08103816   0x00000002   PAD
    0x08103818   0x08103818   0x00000114   Code   RO         1345    .text.FLASH_MassErase  stm32h7xx_hal_flash_ex.o
    0x0810392c   0x0810392c   0x0000019e   Code   RO         1308    .text.FLASH_WaitForLastOperation  stm32h7xx_hal_flash.o
    0x08103aca   0x08103aca   0x00000002   PAD
    0x08103acc   0x08103acc   0x00000014   Code   RO          201    .text.GetCapabilities  eth_stm32h7.o
    0x08103ae0   0x08103ae0   0x00000060   Code   RO          501    .text.GetLinkInfo   phy_lan8742a.o
    0x08103b40   0x08103b40   0x00000044   Code   RO          499    .text.GetLinkState  phy_lan8742a.o
    0x08103b84   0x08103b84   0x0000007c   Code   RO          209    .text.GetMacAddress  eth_stm32h7.o
    0x08103c00   0x08103c00   0x00000012   Code   RO          557    .text.GetRecordIndex  eventrecorder.o
    0x08103c12   0x08103c12   0x00000002   PAD
    0x08103c14   0x08103c14   0x00000044   Code   RO          219    .text.GetRxFrameSize  eth_stm32h7.o
    0x08103c58   0x08103c58   0x0000000c   Code   RO          221    .text.GetRxFrameTime  eth_stm32h7.o
    0x08103c64   0x08103c64   0x0000000c   Code   RO          223    .text.GetTxFrameTime  eth_stm32h7.o
    0x08103c70   0x08103c70   0x00000014   Code   RO          199    .text.GetVersion    eth_stm32h7.o
    0x08103c84   0x08103c84   0x00000014   Code   RO          487    .text.GetVersion    phy_lan8742a.o
    0x08103c98   0x08103c98   0x00000158   Code   RO          885    .text.HAL_ADCEx_Calibration_Start  stm32h7xx_hal_adc_ex.o
    0x08103df0   0x08103df0   0x00000eda   Code   RO          821    .text.HAL_ADC_ConfigChannel  stm32h7xx_hal_adc.o
    0x08104cca   0x08104cca   0x00000006   PAD
    0x08104cd0   0x08104cd0   0x00000118   Code   RO          297    .text.HAL_ADC_ConvCpltCallback  adc_stm32h7.o
    0x08104de8   0x08104de8   0x00000008   Code   RO          819    .text.HAL_ADC_ConvHalfCpltCallback  stm32h7xx_hal_adc.o
    0x08104df0   0x08104df0   0x00000008   Code   RO          817    .text.HAL_ADC_ErrorCallback  stm32h7xx_hal_adc.o
    0x08104df8   0x08104df8   0x0000097c   Code   RO          743    .text.HAL_ADC_Init  stm32h7xx_hal_adc.o
    0x08105774   0x08105774   0x00000180   Code   RO          162    .text.HAL_ADC_MspInit  msp_stm32h7.o
    0x081058f4   0x081058f4   0x00000226   Code   RO          795    .text.HAL_ADC_Start_DMA  stm32h7xx_hal_adc.o
    0x08105b1a   0x08105b1a   0x00000002   PAD
    0x08105b1c   0x08105b1c   0x00000978   Code   RO         1099    .text.HAL_DMA_Abort  stm32h7xx_hal_dma.o
    0x08106494   0x08106494   0x000006aa   Code   RO         1101    .text.HAL_DMA_Abort_IT  stm32h7xx_hal_dma.o
    0x08106b3e   0x08106b3e   0x00000002   PAD
    0x08106b40   0x08106b40   0x0000047c   Code   RO         1091    .text.HAL_DMA_DeInit  stm32h7xx_hal_dma.o
    0x08106fbc   0x08106fbc   0x000011c2   Code   RO         1105    .text.HAL_DMA_IRQHandler  stm32h7xx_hal_dma.o
    0x0810817e   0x0810817e   0x00000002   PAD
    0x08108180   0x08108180   0x00000da0   Code   RO         1081    .text.HAL_DMA_Init  stm32h7xx_hal_dma.o
    0x08108f20   0x08108f20   0x00000724   Code   RO         1097    .text.HAL_DMA_Start_IT  stm32h7xx_hal_dma.o
    0x08109644   0x08109644   0x000000fa   Code   RO         1190    .text.HAL_ETH_BuildRxDescriptors  stm32h7xx_hal_eth.o
    0x0810973e   0x0810973e   0x00000002   PAD
    0x08109740   0x08109740   0x00000008   Code   RO         1198    .text.HAL_ETH_DMAErrorCallback  stm32h7xx_hal_eth.o
    0x08109748   0x08109748   0x0000001c   Code   RO         1162    .text.HAL_ETH_DeInit  stm32h7xx_hal_eth.o
    0x08109764   0x08109764   0x0000007e   Code   RO         1166    .text.HAL_ETH_DescAssignMemory  stm32h7xx_hal_eth.o
    0x081097e2   0x081097e2   0x00000002   PAD
    0x081097e4   0x081097e4   0x00000008   Code   RO         1204    .text.HAL_ETH_EEECallback  stm32h7xx_hal_eth.o
    0x081097ec   0x081097ec   0x0000028a   Code   RO         1212    .text.HAL_ETH_GetMACConfig  stm32h7xx_hal_eth.o
    0x08109a76   0x08109a76   0x00000002   PAD
    0x08109a78   0x08109a78   0x000000c2   Code   RO         1228    .text.HAL_ETH_GetMACFilterConfig  stm32h7xx_hal_eth.o
    0x08109b3a   0x08109b3a   0x00000002   PAD
    0x08109b3c   0x08109b3c   0x0000015a   Code   RO         1184    .text.HAL_ETH_GetRxDataBuffer  stm32h7xx_hal_eth.o
    0x08109c96   0x08109c96   0x00000002   PAD
    0x08109c98   0x08109c98   0x00000076   Code   RO         1186    .text.HAL_ETH_GetRxDataLength  stm32h7xx_hal_eth.o
    0x08109d0e   0x08109d0e   0x00000002   PAD
    0x08109d10   0x08109d10   0x00000200   Code   RO         1192    .text.HAL_ETH_IRQHandler  stm32h7xx_hal_eth.o
    0x08109f10   0x08109f10   0x0000016e   Code   RO         1150    .text.HAL_ETH_Init  stm32h7xx_hal_eth.o
    0x0810a07e   0x0810a07e   0x00000002   PAD
    0x0810a080   0x0810a080   0x0000023a   Code   RO         1182    .text.HAL_ETH_IsRxDataAvailable  stm32h7xx_hal_eth.o
    0x0810a2ba   0x0810a2ba   0x00000002   PAD
    0x0810a2bc   0x0810a2bc   0x00000008   Code   RO         1200    .text.HAL_ETH_MACErrorCallback  stm32h7xx_hal_eth.o
    0x0810a2c4   0x0810a2c4   0x0000007e   Code   RO          156    .text.HAL_ETH_MspDeInit  msp_stm32h7.o
    0x0810a342   0x0810a342   0x00000002   PAD
    0x0810a344   0x0810a344   0x000000fe   Code   RO          154    .text.HAL_ETH_MspInit  msp_stm32h7.o
    0x0810a442   0x0810a442   0x00000002   PAD
    0x0810a444   0x0810a444   0x00000028   Code   RO          197    .text.HAL_ETH_PMTCallback  eth_stm32h7.o
    0x0810a46c   0x0810a46c   0x000000b0   Code   RO         1208    .text.HAL_ETH_ReadPHYRegister  stm32h7xx_hal_eth.o
    0x0810a51c   0x0810a51c   0x00000028   Code   RO          195    .text.HAL_ETH_RxCpltCallback  eth_stm32h7.o
    0x0810a544   0x0810a544   0x00000040   Code   RO         1216    .text.HAL_ETH_SetMACConfig  stm32h7xx_hal_eth.o
    0x0810a584   0x0810a584   0x00000098   Code   RO         1226    .text.HAL_ETH_SetMACFilterConfig  stm32h7xx_hal_eth.o
    0x0810a61c   0x0810a61c   0x0000005a   Code   RO         1234    .text.HAL_ETH_SetRxVLANIdentifier  stm32h7xx_hal_eth.o
    0x0810a676   0x0810a676   0x00000002   PAD
    0x0810a678   0x0810a678   0x000000d6   Code   RO         1170    .text.HAL_ETH_Start_IT  stm32h7xx_hal_eth.o
    0x0810a74e   0x0810a74e   0x00000002   PAD
    0x0810a750   0x0810a750   0x000000c2   Code   RO         1174    .text.HAL_ETH_Stop_IT  stm32h7xx_hal_eth.o
    0x0810a812   0x0810a812   0x00000002   PAD
    0x0810a814   0x0810a814   0x00000094   Code   RO         1180    .text.HAL_ETH_Transmit_IT  stm32h7xx_hal_eth.o
    0x0810a8a8   0x0810a8a8   0x00000028   Code   RO          193    .text.HAL_ETH_TxCpltCallback  eth_stm32h7.o
    0x0810a8d0   0x0810a8d0   0x00000008   Code   RO         1206    .text.HAL_ETH_WakeUpCallback  stm32h7xx_hal_eth.o
    0x0810a8d8   0x0810a8d8   0x000000b4   Code   RO         1210    .text.HAL_ETH_WritePHYRegister  stm32h7xx_hal_eth.o
    0x0810a98c   0x0810a98c   0x0000022c   Code   RO         1343    .text.HAL_FLASHEx_Erase  stm32h7xx_hal_flash_ex.o
    0x0810abb8   0x0810abb8   0x00000052   Code   RO         1320    .text.HAL_FLASH_Lock  stm32h7xx_hal_flash.o
    0x0810ac0a   0x0810ac0a   0x00000002   PAD
    0x0810ac0c   0x0810ac0c   0x000001be   Code   RO         1306    .text.HAL_FLASH_Program  stm32h7xx_hal_flash.o
    0x0810adca   0x0810adca   0x00000002   PAD
    0x0810adcc   0x0810adcc   0x0000009e   Code   RO         1318    .text.HAL_FLASH_Unlock  stm32h7xx_hal_flash.o
    0x0810ae6a   0x0810ae6a   0x00000002   PAD
    0x0810ae6c   0x0810ae6c   0x0000032e   Code   RO         1413    .text.HAL_GPIO_DeInit  stm32h7xx_hal_gpio.o
    0x0810b19a   0x0810b19a   0x00000002   PAD
    0x0810b19c   0x0810b19c   0x0000069c   Code   RO         1411    .text.HAL_GPIO_Init  stm32h7xx_hal_gpio.o
    0x0810b838   0x0810b838   0x0000002a   Code   RO         1071    .text.HAL_GetCurrentCPUID  stm32h7xx_hal_cortex.o
    0x0810b862   0x0810b862   0x00000002   PAD
    0x0810b864   0x0810b864   0x0000000e   Code   RO          638    .text.HAL_GetREVID  stm32h7xx_hal.o
    0x0810b872   0x0810b872   0x00000002   PAD
    0x0810b874   0x0810b874   0x00000086   Code   RO           10    .text.HAL_GetTick   main.o
    0x0810b8fa   0x0810b8fa   0x00000002   PAD
    0x0810b8fc   0x0810b8fc   0x00000018   Code   RO         1449    .text.HAL_HSEM_ActivateNotification  stm32h7xx_hal_hsem.o
    0x0810b914   0x0810b914   0x00000008   Code   RO         1455    .text.HAL_HSEM_FreeCallback  stm32h7xx_hal_hsem.o
    0x0810b91c   0x0810b91c   0x00000036   Code   RO         1453    .text.HAL_HSEM_IRQHandler  stm32h7xx_hal_hsem.o
    0x0810b952   0x0810b952   0x00000002   PAD
    0x0810b954   0x0810b954   0x000000b4   Code   RO          610    .text.HAL_Init      stm32h7xx_hal.o
    0x0810ba08   0x0810ba08   0x0000000a   Code   RO           12    .text.HAL_InitTick  main.o
    0x0810ba12   0x0810ba12   0x00000002   PAD
    0x0810ba14   0x0810ba14   0x00000040   Code   RO          150    .text.HAL_MspInit   msp_stm32h7.o
    0x0810ba54   0x0810ba54   0x00000030   Code   RO         1023    .text.HAL_NVIC_DisableIRQ  stm32h7xx_hal_cortex.o
    0x0810ba84   0x0810ba84   0x00000030   Code   RO         1019    .text.HAL_NVIC_EnableIRQ  stm32h7xx_hal_cortex.o
    0x0810bab4   0x0810bab4   0x00000062   Code   RO         1011    .text.HAL_NVIC_SetPriority  stm32h7xx_hal_cortex.o
    0x0810bb16   0x0810bb16   0x00000002   PAD
    0x0810bb18   0x0810bb18   0x0000004a   Code   RO         1007    .text.HAL_NVIC_SetPriorityGrouping  stm32h7xx_hal_cortex.o
    0x0810bb62   0x0810bb62   0x00000002   PAD
    0x0810bb64   0x0810bb64   0x00000018   Code   RO         1521    .text.HAL_PWREx_ClearPendingEvent  stm32h7xx_hal_pwr_ex.o
    0x0810bb7c   0x0810bb7c   0x00000188   Code   RO         1519    .text.HAL_PWREx_EnterSTOPMode  stm32h7xx_hal_pwr_ex.o
    0x0810bd04   0x0810bd04   0x00000026   Code   RO         1653    .text.HAL_RCCEx_GetD3PCLK1Freq  stm32h7xx_hal_rcc_ex.o
    0x0810bd2a   0x0810bd2a   0x00000002   PAD
    0x0810bd2c   0x0810bd2c   0x000002ac   Code   RO         1647    .text.HAL_RCCEx_GetPLL1ClockFreq  stm32h7xx_hal_rcc_ex.o
    0x0810bfd8   0x0810bfd8   0x000002ac   Code   RO         1649    .text.HAL_RCCEx_GetPLL2ClockFreq  stm32h7xx_hal_rcc_ex.o
    0x0810c284   0x0810c284   0x000002ac   Code   RO         1651    .text.HAL_RCCEx_GetPLL3ClockFreq  stm32h7xx_hal_rcc_ex.o
    0x0810c530   0x0810c530   0x00000ad8   Code   RO         1645    .text.HAL_RCCEx_GetPeriphCLKFreq  stm32h7xx_hal_rcc_ex.o
    0x0810d008   0x0810d008   0x00000056   Code   RO         1615    .text.HAL_RCC_GetHCLKFreq  stm32h7xx_hal_rcc.o
    0x0810d05e   0x0810d05e   0x00000002   PAD
    0x0810d060   0x0810d060   0x00000310   Code   RO         1607    .text.HAL_RCC_GetSysClockFreq  stm32h7xx_hal_rcc.o
    0x0810d370   0x0810d370   0x00000042   Code   RO          658    .text.HAL_SYSCFG_ETHInterfaceSelect  stm32h7xx_hal.o
    0x0810d3b2   0x0810d3b2   0x00000002   PAD
    0x0810d3b4   0x0810d3b4   0x0000000c   Code   RO         2147    .text.HAL_UARTEx_RxEventCallback  stm32h7xx_hal_uart.o
    0x0810d3c0   0x0810d3c0   0x00000008   Code   RO         2206    .text.HAL_UARTEx_RxFifoFullCallback  stm32h7xx_hal_uart_ex.o
    0x0810d3c8   0x0810d3c8   0x00000008   Code   RO         2208    .text.HAL_UARTEx_TxFifoEmptyCallback  stm32h7xx_hal_uart_ex.o
    0x0810d3d0   0x0810d3d0   0x00000008   Code   RO         2204    .text.HAL_UARTEx_WakeupCallback  stm32h7xx_hal_uart_ex.o
    0x0810d3d8   0x0810d3d8   0x0000009c   Code   RO          261    .text.HAL_UART_ErrorCallback  com_stm32h7.o
    0x0810d474   0x0810d474   0x000005b4   Code   RO         2141    .text.HAL_UART_IRQHandler  stm32h7xx_hal_uart.o
    0x0810da28   0x0810da28   0x0000009c   Code   RO          257    .text.HAL_UART_TxCpltCallback  com_stm32h7.o
    0x0810dac4   0x0810dac4   0x00000008   Code   RO          140    .text.HSEM2_IRQHandler  irq_stm32h7.o
    0x0810dacc   0x0810dacc   0x00000012   Code   RO          112    .text.HardFault_Handler  irq_stm32h7.o
    0x0810dade   0x0810dade   0x00000002   PAD
    0x0810dae0   0x0810dae0   0x00000012   Code   RO          565    .text.IncrementRecordsDumped  eventrecorder.o
    0x0810daf2   0x0810daf2   0x00000002   PAD
    0x0810daf4   0x0810daf4   0x00000012   Code   RO          563    .text.IncrementRecordsWritten  eventrecorder.o
    0x0810db06   0x0810db06   0x00000002   PAD
    0x0810db08   0x0810db08   0x0000008a   Code   RO          203    .text.Initialize    eth_stm32h7.o
    0x0810db92   0x0810db92   0x00000002   PAD
    0x0810db94   0x0810db94   0x00000050   Code   RO          489    .text.Initialize    phy_lan8742a.o
    0x0810dbe4   0x0810dbe4   0x0000001c   Code   RO          875    .text.LL_ADC_Disable  stm32h7xx_hal_adc.o
    0x0810dc00   0x0810dc00   0x00000018   Code   RO          749    .text.LL_ADC_DisableDeepPowerDown  stm32h7xx_hal_adc.o
    0x0810dc18   0x0810dc18   0x0000001c   Code   RO          873    .text.LL_ADC_Enable  stm32h7xx_hal_adc.o
    0x0810dc34   0x0810dc34   0x0000001e   Code   RO          753    .text.LL_ADC_EnableInternalRegulator  stm32h7xx_hal_adc.o
    0x0810dc52   0x0810dc52   0x00000002   PAD
    0x0810dc54   0x0810dc54   0x00000010   Code   RO          837    .text.LL_ADC_GetCommonPathInternalCh  stm32h7xx_hal_adc.o
    0x0810dc64   0x0810dc64   0x00000010   Code   RO          775    .text.LL_ADC_GetMultimode  stm32h7xx_hal_adc.o
    0x0810dc74   0x0810dc74   0x0000004c   Code   RO          823    .text.LL_ADC_GetResolution  stm32h7xx_hal_adc.o
    0x0810dcc0   0x0810dcc0   0x00000010   Code   RO          761    .text.LL_ADC_INJ_IsConversionOngoing  stm32h7xx_hal_adc.o
    0x0810dcd0   0x0810dcd0   0x0000000e   Code   RO          889    .text.LL_ADC_IsCalibrationOnGoing  stm32h7xx_hal_adc_ex.o
    0x0810dcde   0x0810dcde   0x00000002   PAD
    0x0810dce0   0x0810dce0   0x00000010   Code   RO          747    .text.LL_ADC_IsDeepPowerDownEnabled  stm32h7xx_hal_adc.o
    0x0810dcf0   0x0810dcf0   0x00000010   Code   RO          867    .text.LL_ADC_IsDisableOngoing  stm32h7xx_hal_adc.o
    0x0810dd00   0x0810dd00   0x00000010   Code   RO          757    .text.LL_ADC_IsEnabled  stm32h7xx_hal_adc.o
    0x0810dd10   0x0810dd10   0x00000010   Code   RO          751    .text.LL_ADC_IsInternalRegulatorEnabled  stm32h7xx_hal_adc.o
    0x0810dd20   0x0810dd20   0x00000010   Code   RO          755    .text.LL_ADC_REG_IsConversionOngoing  stm32h7xx_hal_adc.o
    0x0810dd30   0x0810dd30   0x00000016   Code   RO          787    .text.LL_ADC_REG_IsTriggerSourceSWStart  stm32h7xx_hal_adc.o
    0x0810dd46   0x0810dd46   0x00000002   PAD
    0x0810dd48   0x0810dd48   0x0000001a   Code   RO          803    .text.LL_ADC_REG_SetDataTransferMode  stm32h7xx_hal_adc.o
    0x0810dd62   0x0810dd62   0x00000002   PAD
    0x0810dd64   0x0810dd64   0x0000003a   Code   RO          825    .text.LL_ADC_REG_SetSequencerRanks  stm32h7xx_hal_adc.o
    0x0810dd9e   0x0810dd9e   0x00000002   PAD
    0x0810dda0   0x0810dda0   0x0000001c   Code   RO          779    .text.LL_ADC_REG_StartConversion  stm32h7xx_hal_adc.o
    0x0810ddbc   0x0810ddbc   0x00000036   Code   RO          827    .text.LL_ADC_SetChannelSamplingTime  stm32h7xx_hal_adc.o
    0x0810ddf2   0x0810ddf2   0x00000002   PAD
    0x0810ddf4   0x0810ddf4   0x00000034   Code   RO          835    .text.LL_ADC_SetChannelSingleDiff  stm32h7xx_hal_adc.o
    0x0810de28   0x0810de28   0x0000001a   Code   RO          759    .text.LL_ADC_SetCommonClock  stm32h7xx_hal_adc.o
    0x0810de42   0x0810de42   0x00000002   PAD
    0x0810de44   0x0810de44   0x0000001a   Code   RO          839    .text.LL_ADC_SetCommonPathInternalCh  stm32h7xx_hal_adc.o
    0x0810de5e   0x0810de5e   0x00000002   PAD
    0x0810de60   0x0810de60   0x00000024   Code   RO          833    .text.LL_ADC_SetDataRightShift  stm32h7xx_hal_adc.o
    0x0810de84   0x0810de84   0x00000032   Code   RO          829    .text.LL_ADC_SetOffset  stm32h7xx_hal_adc.o
    0x0810deb6   0x0810deb6   0x00000002   PAD
    0x0810deb8   0x0810deb8   0x00000028   Code   RO          831    .text.LL_ADC_SetOffsetSignedSaturation  stm32h7xx_hal_adc.o
    0x0810dee0   0x0810dee0   0x00000032   Code   RO          887    .text.LL_ADC_StartCalibration  stm32h7xx_hal_adc_ex.o
    0x0810df12   0x0810df12   0x00000002   PAD
    0x0810df14   0x0810df14   0x00000010   Code   RO            2    .text.LMS_Load      main.o
    0x0810df24   0x0810df24   0x00000036   Code   RO          559    .text.LockRecord    eventrecorder.o
    0x0810df5a   0x0810df5a   0x00000002   PAD
    0x0810df5c   0x0810df5c   0x00000012   Code   RO          547    .text.LockTS_Overflow  eventrecorder.o
    0x0810df6e   0x0810df6e   0x00000002   PAD
    0x0810df70   0x0810df70   0x000000a8   Code   RO          391    .text.MODBUS_ForceMultipleCoils  modbus.o
    0x0810e018   0x0810e018   0x00000052   Code   RO          387    .text.MODBUS_ForceSingleCoil  modbus.o
    0x0810e06a   0x0810e06a   0x00000002   PAD
    0x0810e06c   0x0810e06c   0x000002ae   Code   RO          371    .text.MODBUS_GetRegister  modbus.o
    0x0810e31a   0x0810e31a   0x00000002   PAD
    0x0810e31c   0x0810e31c   0x00000010   Code   RO          367    .text.MODBUS_GetStatus  modbus.o
    0x0810e32c   0x0810e32c   0x0000006e   Code   RO          393    .text.MODBUS_PresetMultipleRegisters  modbus.o
    0x0810e39a   0x0810e39a   0x00000002   PAD
    0x0810e39c   0x0810e39c   0x00000036   Code   RO          389    .text.MODBUS_PresetSingleRegister  modbus.o
    0x0810e3d2   0x0810e3d2   0x00000002   PAD
    0x0810e3d4   0x0810e3d4   0x000000d6   Code   RO          379    .text.MODBUS_ReadCoilStatus  modbus.o
    0x0810e4aa   0x0810e4aa   0x00000002   PAD
    0x0810e4ac   0x0810e4ac   0x000000ae   Code   RO          383    .text.MODBUS_ReadHoldingRegisters  modbus.o
    0x0810e55a   0x0810e55a   0x00000002   PAD
    0x0810e55c   0x0810e55c   0x000000ae   Code   RO          385    .text.MODBUS_ReadInputRegisters  modbus.o
    0x0810e60a   0x0810e60a   0x00000002   PAD
    0x0810e60c   0x0810e60c   0x000000d6   Code   RO          381    .text.MODBUS_ReadInputStatus  modbus.o
    0x0810e6e2   0x0810e6e2   0x00000002   PAD
    0x0810e6e4   0x0810e6e4   0x0000019c   Code   RO          377    .text.MODBUS_ReplyToQuery  modbus.o
    0x0810e880   0x0810e880   0x0000044c   Code   RO          373    .text.MODBUS_SetRegister  modbus.o
    0x0810eccc   0x0810eccc   0x00000012   Code   RO          369    .text.MODBUS_SetStatus  modbus.o
    0x0810ecde   0x0810ecde   0x00000002   PAD
    0x0810ece0   0x0810ece0   0x00000012   Code   RO          114    .text.MemManage_Handler  irq_stm32h7.o
    0x0810ecf2   0x0810ecf2   0x00000040   Code   RO         3277    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0810ed32   0x0810ed32   0x00000058   Code   RO         3271    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0810ed8a   0x0810ed8a   0x0000001c   Code   RO         3269    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0810eda6   0x0810eda6   0x00000002   PAD
    0x0810eda8   0x0810eda8   0x00000012   Code   RO          110    .text.NMI_Handler   irq_stm32h7.o
    0x0810edba   0x0810edba   0x00000002   PAD
    0x0810edbc   0x0810edbc   0x0000006c   Code   RO         1017    .text.NVIC_EncodePriority  stm32h7xx_hal_cortex.o
    0x0810ee28   0x0810ee28   0x00000008   Code   RO         3315    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x0810ee30   0x0810ee30   0x00000024   Code   RO         3311    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x0810ee54   0x0810ee54   0x00000006   Code   RO         3317    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x0810ee5a   0x0810ee5a   0x00000002   PAD
    0x0810ee5c   0x0810ee5c   0x00000040   Code   RO         3309    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x0810ee9c   0x0810ee9c   0x0000000c   Code   RO         2441    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x0810eea8   0x0810eea8   0x00000006   Code   RO         2583    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_thread.o)
    0x0810eeae   0x0810eeae   0x0000000c   Code   RO         3285    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0810eeba   0x0810eeba   0x00000006   Code   RO         2443    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x0810eec0   0x0810eec0   0x00000006   Code   RO         2585    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_thread.o)
    0x0810eec6   0x0810eec6   0x00000002   PAD
    0x0810eec8   0x0810eec8   0x00000044   Code   RO          229    .text.PHY_Read      eth_stm32h7.o
    0x0810ef0c   0x0810ef0c   0x00000042   Code   RO          231    .text.PHY_Write     eth_stm32h7.o
    0x0810ef4e   0x0810ef4e   0x00000002   PAD
    0x0810ef50   0x0810ef50   0x0000011c   Code   RO          207    .text.PowerControl  eth_stm32h7.o
    0x0810f06c   0x0810f06c   0x00000126   Code   RO          493    .text.PowerControl  phy_lan8742a.o
    0x0810f192   0x0810f192   0x00000002   PAD
    0x0810f194   0x0810f194   0x00000080   Code   RO          217    .text.ReadFrame     eth_stm32h7.o
    0x0810f214   0x0810f214   0x0000002e   Code   RO         2717    .text.SemaphoreTokenIncrement  RTX_CM4F.lib(rtx_semaphore.o)
    0x0810f242   0x0810f242   0x00000002   PAD
    0x0810f244   0x0810f244   0x000000fa   Code   RO          215    .text.SendFrame     eth_stm32h7.o
    0x0810f33e   0x0810f33e   0x00000002   PAD
    0x0810f340   0x0810f340   0x0000020c   Code   RO          213    .text.SetAddressFilter  eth_stm32h7.o
    0x0810f54c   0x0810f54c   0x00000046   Code   RO          495    .text.SetInterface  phy_lan8742a.o
    0x0810f592   0x0810f592   0x00000002   PAD
    0x0810f594   0x0810f594   0x00000054   Code   RO          211    .text.SetMacAddress  eth_stm32h7.o
    0x0810f5e8   0x0810f5e8   0x000000f6   Code   RO          497    .text.SetMode       phy_lan8742a.o
    0x0810f6de   0x0810f6de   0x00000002   PAD
    0x0810f6e0   0x0810f6e0   0x00000030   Code   RO         2255    .text.SystemInit    system_stm32h7xx_dualcore_boot_cm4_cm7.o
    0x0810f710   0x0810f710   0x00000064   Code   RO         2535    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x0810f774   0x0810f774   0x00000044   Code   RO         2635    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x0810f7b8   0x0810f7b8   0x00000028   Code   RO         2643    .text.TimerRemove   RTX_CM4F.lib(rtx_timer.o)
    0x0810f7e0   0x0810f7e0   0x00000010   Code   RO          130    .text.UART4_IRQHandler  irq_stm32h7.o
    0x0810f7f0   0x0810f7f0   0x00000010   Code   RO          132    .text.UART5_IRQHandler  irq_stm32h7.o
    0x0810f800   0x0810f800   0x00000010   Code   RO          136    .text.UART7_IRQHandler  irq_stm32h7.o
    0x0810f810   0x0810f810   0x00000010   Code   RO          138    .text.UART8_IRQHandler  irq_stm32h7.o
    0x0810f820   0x0810f820   0x00000024   Code   RO         2143    .text.UART_DMAAbortOnError  stm32h7xx_hal_uart.o
    0x0810f844   0x0810f844   0x00000050   Code   RO         2113    .text.UART_EndRxTransfer  stm32h7xx_hal_uart.o
    0x0810f894   0x0810f894   0x0000002a   Code   RO         2149    .text.UART_EndTransmit_IT  stm32h7xx_hal_uart.o
    0x0810f8be   0x0810f8be   0x00000002   PAD
    0x0810f8c0   0x0810f8c0   0x00000010   Code   RO          124    .text.USART1_IRQHandler  irq_stm32h7.o
    0x0810f8d0   0x0810f8d0   0x00000010   Code   RO          126    .text.USART2_IRQHandler  irq_stm32h7.o
    0x0810f8e0   0x0810f8e0   0x00000010   Code   RO          128    .text.USART3_IRQHandler  irq_stm32h7.o
    0x0810f8f0   0x0810f8f0   0x00000010   Code   RO          134    .text.USART6_IRQHandler  irq_stm32h7.o
    0x0810f900   0x0810f900   0x0000001e   Code   RO          205    .text.Uninitialize  eth_stm32h7.o
    0x0810f91e   0x0810f91e   0x00000002   PAD
    0x0810f920   0x0810f920   0x00000014   Code   RO          491    .text.Uninitialize  phy_lan8742a.o
    0x0810f934   0x0810f934   0x00000032   Code   RO          561    .text.UnlockRecord  eventrecorder.o
    0x0810f966   0x0810f966   0x00000002   PAD
    0x0810f968   0x0810f968   0x00000012   Code   RO          549    .text.UnlockTS_Overflow  eventrecorder.o
    0x0810f97a   0x0810f97a   0x00000002   PAD
    0x0810f97c   0x0810f97c   0x0000001a   Code   RO          551    .text.UpdateTS      eventrecorder.o
    0x0810f996   0x0810f996   0x00000002   PAD
    0x0810f998   0x0810f998   0x00000012   Code   RO          118    .text.UsageFault_Handler  irq_stm32h7.o
    0x0810f9aa   0x0810f9aa   0x00000002   PAD
    0x0810f9ac   0x0810f9ac   0x00000038   Code   RO         1025    .text.__NVIC_DisableIRQ  stm32h7xx_hal_cortex.o
    0x0810f9e4   0x0810f9e4   0x00000030   Code   RO         1021    .text.__NVIC_EnableIRQ  stm32h7xx_hal_cortex.o
    0x0810fa14   0x0810fa14   0x00000010   Code   RO         1013    .text.__NVIC_GetPriorityGrouping  stm32h7xx_hal_cortex.o
    0x0810fa24   0x0810fa24   0x00000042   Code   RO         1015    .text.__NVIC_SetPriority  stm32h7xx_hal_cortex.o
    0x0810fa66   0x0810fa66   0x00000002   PAD
    0x0810fa68   0x0810fa68   0x0000003c   Code   RO         1009    .text.__NVIC_SetPriorityGrouping  stm32h7xx_hal_cortex.o
    0x0810faa4   0x0810faa4   0x00000026   Code   RO           37    .text.__NVIC_SystemReset  task.o
    0x0810faca   0x0810faca   0x00000002   PAD
    0x0810facc   0x0810facc   0x00000026   Code   RO          375    .text.__NVIC_SystemReset  modbus.o
    0x0810faf2   0x0810faf2   0x00000002   PAD
    0x0810faf4   0x0810faf4   0x00000016   Code   RO            8    .text.__aeabi_assert  main.o
    0x0810fb0a   0x0810fb0a   0x00000002   PAD
    0x0810fb0c   0x0810fb0c   0x00000020   Code   RO          448    .text._mutex_acquire  rtx_lib.o
    0x0810fb2c   0x0810fb2c   0x00000012   Code   RO          452    .text._mutex_free   rtx_lib.o
    0x0810fb3e   0x0810fb3e   0x00000002   PAD
    0x0810fb40   0x0810fb40   0x00000032   Code   RO          446    .text._mutex_initialize  rtx_lib.o
    0x0810fb72   0x0810fb72   0x00000002   PAD
    0x0810fb74   0x0810fb74   0x0000001c   Code   RO          450    .text._mutex_release  rtx_lib.o
    0x0810fb90   0x0810fb90   0x00000008   Code   RO          436    .text._platform_post_stackheap_init  rtx_lib.o
    0x0810fb98   0x0810fb98   0x0000014c   Code   RO           85    .text.app_idle_task  idle.o
    0x0810fce4   0x0810fce4   0x000005fc   Code   RO           33    .text.app_main_task  task.o
    0x081102e0   0x081102e0   0x0000134a   Code   RO           56    .text.app_sock_task  sock.o
    0x0811162a   0x0811162a   0x00000002   PAD
    0x0811162c   0x0811162c   0x000000aa   Code   RO           76    .text.app_test_task  test.o
    0x081116d6   0x081116d6   0x00000002   PAD
    0x081116d8   0x081116d8   0x00000016   Code   RO           16    .text.assert_failed  main.o
    0x081116ee   0x081116ee   0x00000002   PAD
    0x081116f0   0x081116f0   0x00000020   Code   RO          567    .text.atomic_inc32  eventrecorder.o
    0x08111710   0x08111710   0x00000020   Code   RO          555    .text.atomic_wr32   eventrecorder.o
    0x08111730   0x08111730   0x00000028   Code   RO          553    .text.atomic_wr8    eventrecorder.o
    0x08111758   0x08111758   0x00000082   Code   RO          521    .text.crc16_ccitt   eventrecorder.o
    0x081117da   0x081117da   0x00000002   PAD
    0x081117dc   0x081117dc   0x0000005c   Code   RO          235    .text.crc32_8bit_rev  eth_stm32h7.o
    0x08111838   0x08111838   0x0000003c   Code   RO          233    .text.crc32_data    eth_stm32h7.o
    0x08111874   0x08111874   0x00000018   Code   RO         2331    .text.eth0_callback  net_config.o
    0x0811188c   0x0811188c   0x00000106   Code   RO          440    .text.evr_initialize  rtx_lib.o
    0x08111992   0x08111992   0x00000002   PAD
    0x08111994   0x08111994   0x000000da   Code   RO           18    .text.main          main.o
    0x08111a6e   0x08111a6e   0x00000002   PAD
    0x08111a70   0x08111a70   0x0000005c   Code   RO         2285    .text.ms2tick       net_config.o
    0x08111acc   0x08111acc   0x0000000c   Code   RO         2317    .text.net_igmp_collect_mcast  net_config.o
    0x08111ad8   0x08111ad8   0x0000000c   Code   RO         2315    .text.net_igmp_is_member  net_config.o
    0x08111ae4   0x08111ae4   0x0000000a   Code   RO         2319    .text.net_igmp_process  net_config.o
    0x08111aee   0x08111aee   0x00000002   PAD
    0x08111af0   0x08111af0   0x000000a8   Code   RO          100    .text.net_sys_error  bsp_stm32h7.o
    0x08111b98   0x08111b98   0x00000052   Code   RO         2303    .text.netif_create  net_config.o
    0x08111bea   0x08111bea   0x00000002   PAD
    0x08111bec   0x08111bec   0x00000014   Code   RO         2307    .text.netif_lock    net_config.o
    0x08111c00   0x08111c00   0x00000010   Code   RO         2309    .text.netif_unlock  net_config.o
    0x08111c10   0x08111c10   0x00000014   Code   RO         2301    .text.netos_delay   net_config.o
    0x08111c24   0x08111c24   0x00000012   Code   RO         2299    .text.netos_flag_clear  net_config.o
    0x08111c36   0x08111c36   0x00000002   PAD
    0x08111c38   0x08111c38   0x00000014   Code   RO         2297    .text.netos_flag_set  net_config.o
    0x08111c4c   0x08111c4c   0x00000020   Code   RO         2295    .text.netos_flag_wait  net_config.o
    0x08111c6c   0x08111c6c   0x00000022   Code   RO         2269    .text.netos_init    net_config.o
    0x08111c8e   0x08111c8e   0x00000002   PAD
    0x08111c90   0x08111c90   0x00000014   Code   RO         2291    .text.netos_lock    net_config.o
    0x08111ca4   0x08111ca4   0x00000036   Code   RO         2287    .text.netos_mutex_create  net_config.o
    0x08111cda   0x08111cda   0x00000002   PAD
    0x08111cdc   0x08111cdc   0x0000001a   Code   RO         2271    .text.netos_thread_create  net_config.o
    0x08111cf6   0x08111cf6   0x00000002   PAD
    0x08111cf8   0x08111cf8   0x00000008   Code   RO         2277    .text.netos_thread_pass  net_config.o
    0x08111d00   0x08111d00   0x0000001c   Code   RO         2279    .text.netos_timer_create  net_config.o
    0x08111d1c   0x08111d1c   0x0000001e   Code   RO         2283    .text.netos_timer_start  net_config.o
    0x08111d3a   0x08111d3a   0x00000002   PAD
    0x08111d3c   0x08111d3c   0x00000010   Code   RO         2293    .text.netos_unlock  net_config.o
    0x08111d4c   0x08111d4c   0x00000024   Code   RO         2601    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x08111d70   0x08111d70   0x0000002c   Code   RO         2393    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08111d9c   0x08111d9c   0x00000028   Code   RO         2409    .text.osKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x08111dc4   0x08111dc4   0x00000028   Code   RO         2413    .text.osKernelGetTickFreq  RTX_CM4F.lib(rtx_kernel.o)
    0x08111dec   0x08111dec   0x0000002c   Code   RO         2387    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08111e18   0x08111e18   0x00000024   Code   RO         2397    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08111e3c   0x08111e3c   0x00000070   Code   RO         3245    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08111eac   0x08111eac   0x00000080   Code   RO         3243    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08111f2c   0x08111f2c   0x00000024   Code   RO         2667    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08111f50   0x08111f50   0x00000024   Code   RO         2673    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08111f74   0x08111f74   0x00000024   Code   RO         2663    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x08111f98   0x08111f98   0x00000024   Code   RO         2669    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08111fbc   0x08111fbc   0x00000086   Code   RO           98    .text.osRtxErrorNotify  bsp_stm32h7.o
    0x08112042   0x08112042   0x00000002   PAD
    0x08112044   0x08112044   0x00000008   Code   RO          476    .text.osRtxIdleThread  rtx_config.o
    0x0811204c   0x0811204c   0x00000004   Code   RO         2385    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x08112050   0x08112050   0x00000012   Code   RO          438    .text.osRtxKernelPreInit  rtx_lib.o
    0x08112062   0x08112062   0x0000006c   Code   RO         3171    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x081120ce   0x081120ce   0x00000042   Code   RO         3173    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x08112110   0x08112110   0x00000036   Code   RO         3169    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x08112146   0x08112146   0x0000003a   Code   RO         3185    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x08112180   0x08112180   0x0000004a   Code   RO         3187    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x081121ca   0x081121ca   0x00000038   Code   RO         3183    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x08112202   0x08112202   0x000000aa   Code   RO         3267    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x081122ac   0x081122ac   0x00000024   Code   RO         3235    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x081122d0   0x081122d0   0x00000048   Code   RO         2659    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08112318   0x08112318   0x00000042   Code   RO         2661    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x0811235a   0x0811235a   0x00000002   PAD
    0x0811235c   0x0811235c   0x00000088   Code   RO         3297    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x081123e4   0x081123e4   0x00000070   Code   RO         3299    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x08112454   0x08112454   0x00000036   Code   RO         2711    .text.osRtxSemaphorePostProcess  RTX_CM4F.lib(rtx_semaphore.o)
    0x0811248a   0x0811248a   0x00000002   PAD
    0x0811248c   0x0811248c   0x00000034   Code   RO         2475    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x081124c0   0x081124c0   0x0000007c   Code   RO         2483    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x0811253c   0x0811253c   0x0000003c   Code   RO         2479    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08112578   0x08112578   0x00000048   Code   RO         2465    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x081125c0   0x081125c0   0x00000020   Code   RO         2567    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x081125e0   0x081125e0   0x00000050   Code   RO         2473    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x08112630   0x08112630   0x00000058   Code   RO         2559    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x08112688   0x08112688   0x0000001e   Code   RO         2565    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x081126a6   0x081126a6   0x00000012   Code   RO         2457    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x081126b8   0x081126b8   0x0000002c   Code   RO         2455    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x081126e4   0x081126e4   0x00000014   Code   RO         2461    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x081126f8   0x081126f8   0x0000000c   Code   RO         2467    .text.osRtxThreadListRoot  RTX_CM4F.lib(rtx_thread.o)
    0x08112704   0x08112704   0x00000026   Code   RO         2459    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x0811272a   0x0811272a   0x00000028   Code   RO         2533    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x08112752   0x08112752   0x00000002   PAD
    0x08112754   0x08112754   0x00000010   Code   RO         2463    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x08112764   0x08112764   0x00000014   Code   RO         2469    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x08112778   0x08112778   0x00000038   Code   RO         2485    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x081127b0   0x081127b0   0x00000010   Code   RO         2471    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x081127c0   0x081127c0   0x0000003c   Code   RO         2481    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x081127fc   0x081127fc   0x00000030   Code   RO         2477    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x0811282c   0x0811282c   0x00000078   Code   RO         3295    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x081128a4   0x081128a4   0x00000020   Code   RO         2617    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x081128c4   0x081128c4   0x00000020   Code   RO         2621    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x081128e4   0x081128e4   0x00000070   Code   RO         2619    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x08112954   0x08112954   0x00000054   Code   RO         2699    .text.osSemaphoreAcquire  RTX_CM4F.lib(rtx_semaphore.o)
    0x081129a8   0x081129a8   0x00000024   Code   RO         2695    .text.osSemaphoreNew  RTX_CM4F.lib(rtx_semaphore.o)
    0x081129cc   0x081129cc   0x0000004c   Code   RO         2701    .text.osSemaphoreRelease  RTX_CM4F.lib(rtx_semaphore.o)
    0x08112a18   0x08112a18   0x0000000c   Code   RO         2517    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08112a24   0x08112a24   0x00000024   Code   RO         2527    .text.osThreadFlagsClear  RTX_CM4F.lib(rtx_thread.o)
    0x08112a48   0x08112a48   0x00000024   Code   RO         2529    .text.osThreadFlagsGet  RTX_CM4F.lib(rtx_thread.o)
    0x08112a6c   0x08112a6c   0x00000058   Code   RO         2525    .text.osThreadFlagsSet  RTX_CM4F.lib(rtx_thread.o)
    0x08112ac4   0x08112ac4   0x00000024   Code   RO         2531    .text.osThreadFlagsWait  RTX_CM4F.lib(rtx_thread.o)
    0x08112ae8   0x08112ae8   0x00000028   Code   RO         2493    .text.osThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x08112b10   0x08112b10   0x00000024   Code   RO         2489    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x08112b34   0x08112b34   0x00000024   Code   RO         2507    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x08112b58   0x08112b58   0x00000024   Code   RO         2623    .text.osTimerNew    RTX_CM4F.lib(rtx_timer.o)
    0x08112b7c   0x08112b7c   0x00000024   Code   RO         2627    .text.osTimerStart  RTX_CM4F.lib(rtx_timer.o)
    0x08112ba0   0x08112ba0   0x00000036   Code   RO          444    .text.os_kernel_is_active  rtx_lib.o
    0x08112bd6   0x08112bd6   0x00000016   Code   RO         2605    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x08112bec   0x08112bec   0x00000008   Code   RO         2395    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08112bf4   0x08112bf4   0x0000000c   Code   RO         2411    .text.svcRtxKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x08112c00   0x08112c00   0x00000008   Code   RO         2415    .text.svcRtxKernelGetTickFreq  RTX_CM4F.lib(rtx_kernel.o)
    0x08112c08   0x08112c08   0x000000f8   Code   RO         2425    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08112d00   0x08112d00   0x00000084   Code   RO         2427    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08112d84   0x08112d84   0x000000d8   Code   RO         3279    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08112e5c   0x08112e5c   0x00000118   Code   RO         3237    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08112f74   0x08112f74   0x000000b0   Code   RO         3275    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08113024   0x08113024   0x00000090   Code   RO         2679    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x081130b4   0x081130b4   0x000000ac   Code   RO         2685    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08113160   0x08113160   0x00000068   Code   RO         2675    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x081131c8   0x081131c8   0x000000b4   Code   RO         2681    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x0811327c   0x0811327c   0x00000054   Code   RO         2715    .text.svcRtxSemaphoreAcquire  RTX_CM4F.lib(rtx_semaphore.o)
    0x081132d0   0x081132d0   0x0000007c   Code   RO         2709    .text.svcRtxSemaphoreNew  RTX_CM4F.lib(rtx_semaphore.o)
    0x0811334c   0x0811334c   0x00000038   Code   RO         2719    .text.svcRtxSemaphoreRelease  RTX_CM4F.lib(rtx_semaphore.o)
    0x08113384   0x08113384   0x0000004c   Code   RO         2563    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x081133d0   0x081133d0   0x00000030   Code   RO         2577    .text.svcRtxThreadFlagsClear  RTX_CM4F.lib(rtx_thread.o)
    0x08113400   0x08113400   0x00000014   Code   RO         2579    .text.svcRtxThreadFlagsGet  RTX_CM4F.lib(rtx_thread.o)
    0x08113414   0x08113414   0x00000066   Code   RO         2575    .text.svcRtxThreadFlagsSet  RTX_CM4F.lib(rtx_thread.o)
    0x0811347a   0x0811347a   0x00000002   PAD
    0x0811347c   0x0811347c   0x00000048   Code   RO         2581    .text.svcRtxThreadFlagsWait  RTX_CM4F.lib(rtx_thread.o)
    0x081134c4   0x081134c4   0x0000000c   Code   RO         2495    .text.svcRtxThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x081134d0   0x081134d0   0x000001e8   Code   RO         2487    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x081136b8   0x081136b8   0x00000038   Code   RO         2549    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x081136f0   0x081136f0   0x00000078   Code   RO         2637    .text.svcRtxTimerNew  RTX_CM4F.lib(rtx_timer.o)
    0x08113768   0x08113768   0x00000048   Code   RO         2641    .text.svcRtxTimerStart  RTX_CM4F.lib(rtx_timer.o)
    0x081137b0   0x081137b0   0x0000041c   Code   RO           60    .text.tcp_cb_func   sock.o
    0x08113bcc   0x08113bcc   0x000000a4   Code   RO           62    .text.tcp_sock_send  sock.o
    0x08113c70   0x08113c70   0x000001a6   Code   RO           35    .text.udp_cb_func   task.o
    0x08113e16   0x08113e16   0x00000002   PAD
    0x08113e18   0x08113e18   0x000000be   Code   RO           58    .text.udp_cb_func   sock.o
    0x08113ed6   0x08113ed6   0x00000002   PAD
    0x08113ed8   0x08113ed8   0x00000010   Code   RO           87    .text.udp_cb_func   idle.o
    0x08113ee8   0x08113ee8   0x0000005c   Code   RO         2793    i.arp_cache_alloc   Net4_CM3_L.lib(net_arp.o)
    0x08113f44   0x08113f44   0x000000f4   Code   RO         2794    i.arp_cache_run     Net4_CM3_L.lib(net_arp.o)
    0x08114038   0x08114038   0x00000038   Code   RO         2795    i.arp_is_cacheable  Net4_CM3_L.lib(net_arp.o)
    0x08114070   0x08114070   0x00000048   Code   RO         2796    i.arp_probe_run     Net4_CM3_L.lib(net_arp.o)
    0x081140b8   0x081140b8   0x000000b6   Code   RO         2798    i.arp_proc_response  Net4_CM3_L.lib(net_arp.o)
    0x0811416e   0x0811416e   0x0000001a   Code   RO         2799    i.arp_que_free      Net4_CM3_L.lib(net_arp.o)
    0x08114188   0x08114188   0x00000080   Code   RO         2800    i.arp_send_reply    Net4_CM3_L.lib(net_arp.o)
    0x08114208   0x08114208   0x000000a8   Code   RO         2801    i.arp_send_request  Net4_CM3_L.lib(net_arp.o)
    0x081142b0   0x081142b0   0x00000068   Code   RO         2802    i.arp_sender_valid  Net4_CM3_L.lib(net_arp.o)
    0x08114318   0x08114318   0x00000028   Code   RO         3398    i.crc32_8bit        Net4_CM3_L.lib(net_common.o)
    0x08114340   0x08114340   0x0000009a   Code   RO         2737    i.eth_check_link    Net4_CM3_L.lib(net_eth.o)
    0x081143da   0x081143da   0x00000002   PAD
    0x081143dc   0x081143dc   0x00000020   Code   RO         2738    i.eth_if_map        Net4_CM3_L.lib(net_eth.o)
    0x081143fc   0x081143fc   0x000001ec   Code   RO         2739    i.eth_iface_init    Net4_CM3_L.lib(net_eth.o)
    0x081145e8   0x081145e8   0x000001d8   Code   RO         2740    i.eth_iface_run     Net4_CM3_L.lib(net_eth.o)
    0x081147c0   0x081147c0   0x00000008   Code   RO         2742    i.eth_lock          Net4_CM3_L.lib(net_eth.o)
    0x081147c8   0x081147c8   0x00000022   Code   RO         2743    i.eth_mtu_limit     Net4_CM3_L.lib(net_eth.o)
    0x081147ea   0x081147ea   0x0000002c   Code   RO         2744    i.eth_opt_len       Net4_CM3_L.lib(net_eth.o)
    0x08114816   0x08114816   0x00000088   Code   RO         2745    i.eth_receive       Net4_CM3_L.lib(net_eth.o)
    0x0811489e   0x0811489e   0x00000008   Code   RO         2746    i.eth_unlock        Net4_CM3_L.lib(net_eth.o)
    0x081148a6   0x081148a6   0x00000002   PAD
    0x081148a8   0x081148a8   0x0000007c   Code   RO         2877    i.frag_map_session  Net4_CM3_L.lib(net_ip4_frag.o)
    0x08114924   0x08114924   0x00000022   Code   RO         3399    i.hex2uc            Net4_CM3_L.lib(net_common.o)
    0x08114946   0x08114946   0x0000000c   Code   RO         3335    i.ip4_get_chksum    Net4_CM3_L.lib(net_ip4.o)
    0x08114952   0x08114952   0x0000002a   Code   RO         3336    i.ip4_get_mtu       Net4_CM3_L.lib(net_ip4.o)
    0x0811497c   0x0811497c   0x0000000c   Code   RO         3375    i.mem_lock          Net4_CM3_L.lib(net_mem.o)
    0x08114988   0x08114988   0x0000000c   Code   RO         3376    i.mem_unlock        Net4_CM3_L.lib(net_mem.o)
    0x08114994   0x08114994   0x00000064   Code   RO         3119    i.netCore_Thread    Net4_CM3_L.lib(net_sys.o)
    0x081149f8   0x081149f8   0x00000002   Code   RO         2747    i.netETH_Notify     Net4_CM3_L.lib(net_eth.o)
    0x081149fa   0x081149fa   0x00000002   Code   RO         2748    i.netETH_ReceiveRaw  Net4_CM3_L.lib(net_eth.o)
    0x081149fc   0x081149fc   0x00000072   Code   RO         2750    i.netETH_Thread     Net4_CM3_L.lib(net_eth.o)
    0x08114a6e   0x08114a6e   0x00000002   PAD
    0x08114a70   0x08114a70   0x0000007c   Code   RO         3120    i.netIF_GetOption   Net4_CM3_L.lib(net_sys.o)
    0x08114aec   0x08114aec   0x00000074   Code   RO         3123    i.netInitialize     Net4_CM3_L.lib(net_sys.o)
    0x08114b60   0x08114b60   0x0000005e   Code   RO         3465    i.netMAC_aton       Net4_CM3_L.lib(net_addr.o)
    0x08114bbe   0x08114bbe   0x00000018   Code   RO         2976    i.netTCP_Abort      Net4_CM3_L.lib(net_tcp.o)
    0x08114bd6   0x08114bd6   0x00000008   Code   RO         2979    i.netTCP_GetBuffer  Net4_CM3_L.lib(net_tcp.o)
    0x08114bde   0x08114bde   0x00000018   Code   RO         2983    i.netTCP_GetSocket  Net4_CM3_L.lib(net_tcp.o)
    0x08114bf6   0x08114bf6   0x00000004   Code   RO         2984    i.netTCP_GetState   Net4_CM3_L.lib(net_tcp.o)
    0x08114bfa   0x08114bfa   0x0000001c   Code   RO         2986    i.netTCP_Listen     Net4_CM3_L.lib(net_tcp.o)
    0x08114c16   0x08114c16   0x00000026   Code   RO         2989    i.netTCP_Send       Net4_CM3_L.lib(net_tcp.o)
    0x08114c3c   0x08114c3c   0x00000004   Code   RO         2990    i.netTCP_SendReady  Net4_CM3_L.lib(net_tcp.o)
    0x08114c40   0x08114c40   0x00000020   Code   RO         2991    i.netTCP_SetOption  Net4_CM3_L.lib(net_tcp.o)
    0x08114c60   0x08114c60   0x00000008   Code   RO         2919    i.netUDP_GetBuffer  Net4_CM3_L.lib(net_udp.o)
    0x08114c68   0x08114c68   0x00000018   Code   RO         2921    i.netUDP_GetSocket  Net4_CM3_L.lib(net_udp.o)
    0x08114c80   0x08114c80   0x0000001c   Code   RO         2922    i.netUDP_Open       Net4_CM3_L.lib(net_udp.o)
    0x08114c9c   0x08114c9c   0x00000026   Code   RO         2924    i.netUDP_Send       Net4_CM3_L.lib(net_udp.o)
    0x08114cc2   0x08114cc2   0x0000005e   Code   RO         3467    i.net_addr4_aton    Net4_CM3_L.lib(net_addr.o)
    0x08114d20   0x08114d20   0x0000001e   Code   RO         3469    i.net_addr4_to_mac  Net4_CM3_L.lib(net_addr.o)
    0x08114d3e   0x08114d3e   0x0000000e   Code   RO         3472    i.net_addr_find_route  Net4_CM3_L.lib(net_addr.o)
    0x08114d4c   0x08114d4c   0x00000014   Code   RO         3474    i.net_addr_get_local  Net4_CM3_L.lib(net_addr.o)
    0x08114d60   0x08114d60   0x00000014   Code   RO         3475    i.net_addr_is_unspec  Net4_CM3_L.lib(net_addr.o)
    0x08114d74   0x08114d74   0x000000a0   Code   RO         2810    i.net_arp_cache_add  Net4_CM3_L.lib(net_arp.o)
    0x08114e14   0x08114e14   0x00000086   Code   RO         2811    i.net_arp_cache_early  Net4_CM3_L.lib(net_arp.o)
    0x08114e9a   0x08114e9a   0x00000002   PAD
    0x08114e9c   0x08114e9c   0x00000080   Code   RO         2812    i.net_arp_cache_find  Net4_CM3_L.lib(net_arp.o)
    0x08114f1c   0x08114f1c   0x00000038   Code   RO         2813    i.net_arp_cache_init  Net4_CM3_L.lib(net_arp.o)
    0x08114f54   0x08114f54   0x0000001c   Code   RO         2814    i.net_arp_cache_run  Net4_CM3_L.lib(net_arp.o)
    0x08114f70   0x08114f70   0x00000066   Code   RO         2816    i.net_arp_enqueue   Net4_CM3_L.lib(net_arp.o)
    0x08114fd6   0x08114fd6   0x00000020   Code   RO         2818    i.net_arp_notify    Net4_CM3_L.lib(net_arp.o)
    0x08114ff6   0x08114ff6   0x00000162   Code   RO         2820    i.net_arp_process   Net4_CM3_L.lib(net_arp.o)
    0x08115158   0x08115158   0x00000042   Code   RO         3401    i.net_atoi          Net4_CM3_L.lib(net_common.o)
    0x0811519a   0x0811519a   0x00000030   Code   RO         3403    i.net_chksum_buf    Net4_CM3_L.lib(net_common.o)
    0x081151ca   0x081151ca   0x0000001e   Code   RO         3404    i.net_crc_buf       Net4_CM3_L.lib(net_common.o)
    0x081151e8   0x081151e8   0x0000000e   Code   RO         2751    i.net_eth_callback  Net4_CM3_L.lib(net_eth.o)
    0x081151f6   0x081151f6   0x00000052   Code   RO         2752    i.net_eth_config_mcast  Net4_CM3_L.lib(net_eth.o)
    0x08115248   0x08115248   0x00000082   Code   RO         2754    i.net_eth_get_option  Net4_CM3_L.lib(net_eth.o)
    0x081152ca   0x081152ca   0x00000002   PAD
    0x081152cc   0x081152cc   0x0000001c   Code   RO         2755    i.net_eth_iface_init  Net4_CM3_L.lib(net_eth.o)
    0x081152e8   0x081152e8   0x0000001c   Code   RO         2756    i.net_eth_iface_run  Net4_CM3_L.lib(net_eth.o)
    0x08115304   0x08115304   0x00000098   Code   RO         2758    i.net_eth_output    Net4_CM3_L.lib(net_eth.o)
    0x0811539c   0x0811539c   0x000000c0   Code   RO         2759    i.net_eth_send_frame  Net4_CM3_L.lib(net_eth.o)
    0x0811545c   0x0811545c   0x00000018   Code   RO         2899    i.net_icmp_init     Net4_CM3_L.lib(net_icmp.o)
    0x08115474   0x08115474   0x00000108   Code   RO         2900    i.net_icmp_process  Net4_CM3_L.lib(net_icmp.o)
    0x0811557c   0x0811557c   0x00000080   Code   RO         2901    i.net_icmp_send_echo  Net4_CM3_L.lib(net_icmp.o)
    0x081155fc   0x081155fc   0x0000000c   Code   RO         3127    i.net_if_map_all    Net4_CM3_L.lib(net_sys.o)
    0x08115608   0x08115608   0x00000108   Code   RO         3337    i.net_ip4_chk_frame  Net4_CM3_L.lib(net_ip4.o)
    0x08115710   0x08115710   0x0000002c   Code   RO         3338    i.net_ip4_chksum    Net4_CM3_L.lib(net_ip4.o)
    0x0811573c   0x0811573c   0x00000006   Code   RO         3339    i.net_ip4_chksum_buf  Net4_CM3_L.lib(net_ip4.o)
    0x08115742   0x08115742   0x00000002   PAD
    0x08115744   0x08115744   0x00000080   Code   RO         3341    i.net_ip4_find_route  Net4_CM3_L.lib(net_ip4.o)
    0x081157c4   0x081157c4   0x00000124   Code   RO         2878    i.net_ip4_frag_add  Net4_CM3_L.lib(net_ip4_frag.o)
    0x081158e8   0x081158e8   0x000000ac   Code   RO         2879    i.net_ip4_frag_get  Net4_CM3_L.lib(net_ip4_frag.o)
    0x08115994   0x08115994   0x00000010   Code   RO         2880    i.net_ip4_frag_init  Net4_CM3_L.lib(net_ip4_frag.o)
    0x081159a4   0x081159a4   0x0000003c   Code   RO         2881    i.net_ip4_frag_run  Net4_CM3_L.lib(net_ip4_frag.o)
    0x081159e0   0x081159e0   0x0000002c   Code   RO         3342    i.net_ip4_get_local  Net4_CM3_L.lib(net_ip4.o)
    0x08115a0c   0x08115a0c   0x00000018   Code   RO         3343    i.net_ip4_init      Net4_CM3_L.lib(net_ip4.o)
    0x08115a24   0x08115a24   0x00000020   Code   RO         3344    i.net_ip4_is_onlink  Net4_CM3_L.lib(net_ip4.o)
    0x08115a44   0x08115a44   0x00000026   Code   RO         3345    i.net_ip4_is_subcast  Net4_CM3_L.lib(net_ip4.o)
    0x08115a6a   0x08115a6a   0x0000000e   Code   RO         3346    i.net_ip4_reass_frame  Net4_CM3_L.lib(net_ip4.o)
    0x08115a78   0x08115a78   0x00000124   Code   RO         3347    i.net_ip4_send_frame  Net4_CM3_L.lib(net_ip4.o)
    0x08115b9c   0x08115b9c   0x0000002a   Code   RO         3349    i.net_ip4_tx_offl_hl  Net4_CM3_L.lib(net_ip4.o)
    0x08115bc6   0x08115bc6   0x00000002   PAD
    0x08115bc8   0x08115bc8   0x0000001c   Code   RO         2860    i.net_loop_iface_init  Net4_CM3_L.lib(net_loopback.o)
    0x08115be4   0x08115be4   0x00000078   Code   RO         2861    i.net_loop_iface_run  Net4_CM3_L.lib(net_loopback.o)
    0x08115c5c   0x08115c5c   0x00000058   Code   RO         2863    i.net_loop_send_frame  Net4_CM3_L.lib(net_loopback.o)
    0x08115cb4   0x08115cb4   0x0000008c   Code   RO         3377    i.net_mem_alloc     Net4_CM3_L.lib(net_mem.o)
    0x08115d40   0x08115d40   0x0000001c   Code   RO         3378    i.net_mem_avail     Net4_CM3_L.lib(net_mem.o)
    0x08115d5c   0x08115d5c   0x0000007c   Code   RO         3379    i.net_mem_free      Net4_CM3_L.lib(net_mem.o)
    0x08115dd8   0x08115dd8   0x0000005c   Code   RO         3380    i.net_mem_init      Net4_CM3_L.lib(net_mem.o)
    0x08115e34   0x08115e34   0x00000038   Code   RO         3381    i.net_mem_shrink    Net4_CM3_L.lib(net_mem.o)
    0x08115e6c   0x08115e6c   0x00000010   Code   RO         3100    i.net_ping_client_init  Net4_CM3_L.lib(net_ping_core.o)
    0x08115e7c   0x08115e7c   0x00000040   Code   RO         3101    i.net_ping_client_run  Net4_CM3_L.lib(net_ping_core.o)
    0x08115ebc   0x08115ebc   0x0000001c   Code   RO         3130    i.net_rand32        Net4_CM3_L.lib(net_sys.o)
    0x08115ed8   0x08115ed8   0x0000000c   Code   RO         3131    i.net_sys_lock      Net4_CM3_L.lib(net_sys.o)
    0x08115ee4   0x08115ee4   0x00000016   Code   RO         3132    i.net_sys_resume    Net4_CM3_L.lib(net_sys.o)
    0x08115efa   0x08115efa   0x00000002   PAD
    0x08115efc   0x08115efc   0x00000014   Code   RO         3134    i.net_sys_tick      Net4_CM3_L.lib(net_sys.o)
    0x08115f10   0x08115f10   0x0000000c   Code   RO         3135    i.net_sys_unlock    Net4_CM3_L.lib(net_sys.o)
    0x08115f1c   0x08115f1c   0x00000020   Code   RO         3137    i.net_sys_wakeup    Net4_CM3_L.lib(net_sys.o)
    0x08115f3c   0x08115f3c   0x00000058   Code   RO         2992    i.net_tcp_abort     Net4_CM3_L.lib(net_tcp.o)
    0x08115f94   0x08115f94   0x0000003c   Code   RO         2994    i.net_tcp_check_send  Net4_CM3_L.lib(net_tcp.o)
    0x08115fd0   0x08115fd0   0x0000001e   Code   RO         2998    i.net_tcp_get_buf   Net4_CM3_L.lib(net_tcp.o)
    0x08115fee   0x08115fee   0x00000002   PAD
    0x08115ff0   0x08115ff0   0x00000044   Code   RO         3005    i.net_tcp_get_socket  Net4_CM3_L.lib(net_tcp.o)
    0x08116034   0x08116034   0x00000028   Code   RO         3006    i.net_tcp_get_state  Net4_CM3_L.lib(net_tcp.o)
    0x0811605c   0x0811605c   0x00000070   Code   RO         3008    i.net_tcp_listen    Net4_CM3_L.lib(net_tcp.o)
    0x081160cc   0x081160cc   0x000004ce   Code   RO         3010    i.net_tcp_process   Net4_CM3_L.lib(net_tcp.o)
    0x0811659a   0x0811659a   0x00000002   PAD
    0x0811659c   0x0811659c   0x000000e0   Code   RO         3014    i.net_tcp_send      Net4_CM3_L.lib(net_tcp.o)
    0x0811667c   0x0811667c   0x00000094   Code   RO         3016    i.net_tcp_set_option  Net4_CM3_L.lib(net_tcp.o)
    0x08116710   0x08116710   0x00000014   Code   RO         3017    i.net_tcp_socket_init  Net4_CM3_L.lib(net_tcp.o)
    0x08116724   0x08116724   0x000002c4   Code   RO         3018    i.net_tcp_socket_run  Net4_CM3_L.lib(net_tcp.o)
    0x081169e8   0x081169e8   0x0000001e   Code   RO         2929    i.net_udp_get_buf   Net4_CM3_L.lib(net_udp.o)
    0x08116a06   0x08116a06   0x00000002   PAD
    0x08116a08   0x08116a08   0x00000048   Code   RO         2932    i.net_udp_get_socket  Net4_CM3_L.lib(net_udp.o)
    0x08116a50   0x08116a50   0x0000006c   Code   RO         2934    i.net_udp_open      Net4_CM3_L.lib(net_udp.o)
    0x08116abc   0x08116abc   0x000000d4   Code   RO         2935    i.net_udp_process   Net4_CM3_L.lib(net_udp.o)
    0x08116b90   0x08116b90   0x00000168   Code   RO         2938    i.net_udp_send_if   Net4_CM3_L.lib(net_udp.o)
    0x08116cf8   0x08116cf8   0x00000010   Code   RO         2940    i.net_udp_socket_init  Net4_CM3_L.lib(net_udp.o)
    0x08116d08   0x08116d08   0x0000001a   Code   RO         3423    i.net_xtouc         Net4_CM3_L.lib(net_common.o)
    0x08116d22   0x08116d22   0x00000002   PAD
    0x08116d24   0x08116d24   0x00000014   Code   RO         3104    i.ping_send_req     Net4_CM3_L.lib(net_ping_core.o)
    0x08116d38   0x08116d38   0x0000001a   Code   RO         2883    i.que_free_list     Net4_CM3_L.lib(net_ip4_frag.o)
    0x08116d52   0x08116d52   0x00000018   Code   RO         3138    i.sys_map_if        Net4_CM3_L.lib(net_sys.o)
    0x08116d6a   0x08116d6a   0x00000002   PAD
    0x08116d6c   0x08116d6c   0x0000004c   Code   RO         3139    i.sys_proc_tick     Net4_CM3_L.lib(net_sys.o)
    0x08116db8   0x08116db8   0x000000a8   Code   RO         3020    i.tcp_map_socket    Net4_CM3_L.lib(net_tcp.o)
    0x08116e60   0x08116e60   0x0000005e   Code   RO         3021    i.tcp_parse_opt     Net4_CM3_L.lib(net_tcp.o)
    0x08116ebe   0x08116ebe   0x00000002   PAD
    0x08116ec0   0x08116ec0   0x000000c4   Code   RO         3022    i.tcp_proc_acknr    Net4_CM3_L.lib(net_tcp.o)
    0x08116f84   0x08116f84   0x00000052   Code   RO         3023    i.tcp_proc_dupack   Net4_CM3_L.lib(net_tcp.o)
    0x08116fd6   0x08116fd6   0x0000001a   Code   RO         3024    i.tcp_que_free      Net4_CM3_L.lib(net_tcp.o)
    0x08116ff0   0x08116ff0   0x0000001a   Code   RO         3025    i.tcp_que_init      Net4_CM3_L.lib(net_tcp.o)
    0x0811700a   0x0811700a   0x00000002   PAD
    0x0811700c   0x0811700c   0x00000094   Code   RO         3026    i.tcp_que_resend    Net4_CM3_L.lib(net_tcp.o)
    0x081170a0   0x081170a0   0x0000007a   Code   RO         3027    i.tcp_send_ctrl     Net4_CM3_L.lib(net_tcp.o)
    0x0811711a   0x0811711a   0x0000005e   Code   RO         3028    i.tcp_send_data     Net4_CM3_L.lib(net_tcp.o)
    0x08117178   0x08117178   0x00000070   Code   RO         3029    i.tcp_send_reset    Net4_CM3_L.lib(net_tcp.o)
    0x081171e8   0x081171e8   0x00000026   Code   RO         3030    i.tcp_set_cwnd      Net4_CM3_L.lib(net_tcp.o)
    0x0811720e   0x0811720e   0x00000002   PAD
    0x08117210   0x08117210   0x00000068   Code   RO         3031    i.tcp_transit       Net4_CM3_L.lib(net_tcp.o)
    0x08117278   0x08117278   0x000000c8   Code   RO         3032    i.tcp_write         Net4_CM3_L.lib(net_tcp.o)
    0x08117340   0x08117340   0x0000002c   Code   RO         2942    i.udp_port_in_use   Net4_CM3_L.lib(net_udp.o)
    0x0811736c   0x0811736c   0x0000005a   Code   RO         3531    x$fpl$dfixu         fz_wm.l(dfixu.o)
    0x081173c6   0x081173c6   0x00000026   Code   RO         3535    x$fpl$dfltu         fz_wm.l(dflt_clz.o)
    0x081173ec   0x081173ec   0x00000154   Code   RO         3541    x$fpl$dmul          fz_wm.l(dmul.o)
    0x08117540   0x08117540   0x0000009c   Code   RO         3550    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x081175dc   0x081175dc   0x0000000c   Code   RO         3552    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x081175e8   0x081175e8   0x0000001a   Code   RO         3657    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08117602   0x08117602   0x00000000   Code   RO         3554    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x08117602   0x08117602   0x00000002   PAD
    0x08117604   0x08117604   0x0000002c   Data   RO         2864    .constdata          Net4_CM3_L.lib(net_loopback.o)
    0x08117630   0x08117630   0x0000000c   Data   RO         2865    .constdata          Net4_CM3_L.lib(net_loopback.o)
    0x0811763c   0x0811763c   0x00000012   Data   RO         3106    .constdata          Net4_CM3_L.lib(net_ping_core.o)
    0x0811764e   0x0811764e   0x00000004   Data   RO         3351    .constdata          Net4_CM3_L.lib(net_ip4.o)
    0x08117652   0x08117652   0x00000006   Data   RO         3479    .constdata          Net4_CM3_L.lib(net_addr.o)
    0x08117658   0x08117658   0x00000006   Data   RO         3480    .constdata          Net4_CM3_L.lib(net_addr.o)
    0x0811765e   0x0811765e   0x00000002   PAD
    0x08117660   0x08117660   0x00000004   Data   RO         3504    .constdata          Net4_CM3_L.lib(net_version.o)
    0x08117664   0x08117664   0x000000a8   Data   RO          459    .rodata             rtx_lib.o
    0x0811770c   0x0811770c   0x00000014   Data   RO          166    .rodata..L__const.HAL_ETH_MspInit.GPIO_InitStruct  msp_stm32h7.o
    0x08117720   0x08117720   0x00000014   Data   RO           89    .rodata..L__const.app_idle_task.addr  idle.o
    0x08117734   0x08117734   0x00000010   Data   RO         2261    .rodata.D1CorePrescTable  system_stm32h7xx_dualcore_boot_cm4_cm7.o
    0x08117744   0x08117744   0x00000008   Data   RO         1116    .rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset  stm32h7xx_hal_dma.o
    0x0811774c   0x0811774c   0x00000004   Data   RO          241    .rodata.DriverCapabilities  eth_stm32h7.o
    0x08117750   0x08117750   0x00000004   Data   RO          240    .rodata.DriverVersion  eth_stm32h7.o
    0x08117754   0x08117754   0x00000004   Data   RO          504    .rodata.DriverVersion  phy_lan8742a.o
    0x08117758   0x08117758   0x00000044   Data   RO          239    .rodata.Driver_ETH_MAC0  eth_stm32h7.o
    0x0811779c   0x0811779c   0x00000020   Data   RO          503    .rodata.Driver_ETH_PHY0  phy_lan8742a.o
    0x081177bc   0x081177bc   0x00000018   Data   RO          572    .rodata.EventRecorderInfo  eventrecorder.o
    0x081177d4   0x081177d4   0x00000006   Data   RO          242    .rodata.Initialize.mac_def  eth_stm32h7.o
    0x081177da   0x081177da   0x00000002   PAD
    0x081177dc   0x081177dc   0x00000004   Data   RO          180    .rodata.LED0        led_stm32h7.o
    0x081177e0   0x081177e0   0x00000004   Data   RO          181    .rodata.LED1        led_stm32h7.o
    0x081177e4   0x081177e4   0x00000018   Data   RO          179    .rodata.LED_Struct  led_stm32h7.o
    0x081177fc   0x081177fc   0x00000200   Data   RO          402    .rodata.R_Registers  modbus.o
    0x081179fc   0x081179fc   0x00000400   Data   RO          403    .rodata.W_Registers  modbus.o
    0x08117dfc   0x08117dfc   0x00000024   Data   RO           43    .rodata.app_idle_attr  task.o
    0x08117e20   0x08117e20   0x00000024   Data   RO           40    .rodata.app_main_attr  task.o
    0x08117e44   0x08117e44   0x00000024   Data   RO           41    .rodata.app_sock_attr  task.o
    0x08117e68   0x08117e68   0x00000024   Data   RO           42    .rodata.app_test_attr  task.o
    0x08117e8c   0x08117e8c   0x00000020   Data   RO          428    .rodata.cst32       eeprom.o
    0x08117eac   0x08117eac   0x00000014   Data   RO         2353    .rodata.eth0_arp_config  net_config.o
    0x08117ec0   0x08117ec0   0x0000000c   Data   RO         2355    .rodata.eth0_icmp_config  net_config.o
    0x08117ecc   0x08117ecc   0x00000028   Data   RO         2346    .rodata.eth0_ip4_config  net_config.o
    0x08117ef4   0x08117ef4   0x00000020   Data   RO         2339    .rodata.eth0_ll_config  net_config.o
    0x08117f14   0x08117f14   0x00000010   Data   RO         2338    .rodata.eth0_lock_attr  net_config.o
    0x08117f24   0x08117f24   0x00000024   Data   RO         2340    .rodata.eth0_thread_attr  net_config.o
    0x08117f48   0x08117f48   0x00000010   Data   RO         2337    .rodata.mem_lock_attr  net_config.o
    0x08117f58   0x08117f58   0x00000008   Data   RO         2354    .rodata.net_arp_list  net_config.o
    0x08117f60   0x08117f60   0x0000002c   Data   RO         2347    .rodata.net_eth0_if_config  net_config.o
    0x08117f8c   0x08117f8c   0x00000008   Data   RO         2348    .rodata.net_eth_list  net_config.o
    0x08117f94   0x08117f94   0x00000008   Data   RO         2356    .rodata.net_icmp_list  net_config.o
    0x08117f9c   0x08117f9c   0x00000004   Data   RO         2351    .rodata.net_if_inet_def  net_config.o
    0x08117fa0   0x08117fa0   0x00000004   Data   RO         2352    .rodata.net_if_link_def  net_config.o
    0x08117fa4   0x08117fa4   0x00000008   Data   RO         2350    .rodata.net_if_list_all  net_config.o
    0x08117fac   0x08117fac   0x00000008   Data   RO         2358    .rodata.net_ip4_frag_config  net_config.o
    0x08117fb4   0x08117fb4   0x00000010   Data   RO         2336    .rodata.net_lock_attr  net_config.o
    0x08117fc4   0x08117fc4   0x0000001c   Data   RO         2343    .rodata.net_sys_config  net_config.o
    0x08117fe0   0x08117fe0   0x00000018   Data   RO         2362    .rodata.net_tcp_config  net_config.o
    0x08117ff8   0x08117ff8   0x00000024   Data   RO         2334    .rodata.net_thread_attr  net_config.o
    0x0811801c   0x0811801c   0x00000010   Data   RO         2335    .rodata.net_timer_attr  net_config.o
    0x0811802c   0x0811802c   0x0000000c   Data   RO         2360    .rodata.net_udp_config  net_config.o
    0x08118038   0x08118038   0x00000010   Data   RO         2364    .rodata.netif_getopt_func  net_config.o
    0x08118048   0x08118048   0x00000004   Data   RO          461    .rodata.osRtxUserSVC  rtx_lib.o
    0x0811804c   0x0811804c   0x00000024   Data   RO          456    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08118070   0x08118070   0x00000018   Data   RO          458    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08118088   0x08118088   0x00000024   Data   RO          457    .rodata.os_timer_thread_attr  rtx_lib.o
    0x081180ac   0x081180ac   0x00000023   Data   RO           20    .rodata.str1.1      main.o
    0x081180cf   0x081180cf   0x00000227   Data   RO           39    .rodata.str1.1      task.o
    0x081182f6   0x081182f6   0x000011f8   Data   RO           64    .rodata.str1.1      sock.o
    0x081194ee   0x081194ee   0x00000033   Data   RO           78    .rodata.str1.1      test.o
    0x08119521   0x08119521   0x000000ac   Data   RO           90    .rodata.str1.1      idle.o
    0x081195cd   0x081195cd   0x0000001c   Data   RO          102    .rodata.str1.1      bsp_stm32h7.o
    0x081195e9   0x081195e9   0x0000001c   Data   RO          142    .rodata.str1.1      irq_stm32h7.o
    0x08119605   0x08119605   0x0000001c   Data   RO          289    .rodata.str1.1      com_stm32h7.o
    0x08119621   0x08119621   0x0000001c   Data   RO          303    .rodata.str1.1      adc_stm32h7.o
    0x0811963d   0x0811963d   0x0000001c   Data   RO          319    .rodata.str1.1      eep_stm32h7.o
    0x08119659   0x08119659   0x0000001b   Data   RO          349    .rodata.str1.1      fifo.o
    0x08119674   0x08119674   0x00000070   Data   RO          735    .rodata.str1.1      stm32h7xx_hal.o
    0x081196e4   0x081196e4   0x00000074   Data   RO          877    .rodata.str1.1      stm32h7xx_hal_adc.o
    0x08119758   0x08119758   0x00000077   Data   RO          999    .rodata.str1.1      stm32h7xx_hal_adc_ex.o
    0x081197cf   0x081197cf   0x00000077   Data   RO         1073    .rodata.str1.1      stm32h7xx_hal_cortex.o
    0x08119846   0x08119846   0x00000074   Data   RO         1115    .rodata.str1.1      stm32h7xx_hal_dma.o
    0x081198ba   0x081198ba   0x00000076   Data   RO         1334    .rodata.str1.1      stm32h7xx_hal_flash.o
    0x08119930   0x08119930   0x00000079   Data   RO         1403    .rodata.str1.1      stm32h7xx_hal_flash_ex.o
    0x081199a9   0x081199a9   0x00000075   Data   RO         1427    .rodata.str1.1      stm32h7xx_hal_gpio.o
    0x08119a1e   0x08119a1e   0x00000077   Data   RO         1593    .rodata.str1.1      stm32h7xx_hal_pwr_ex.o
    0x08119a95   0x08119a95   0x000000ae   Data   RO         2342    .rodata.str1.1      net_config.o
    0x08119b43   0x08119b43   0x00000001   PAD
    0x08119b44   0x08119b44   0x0000000b   Data   RO         2445    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x08119b4f   0x08119b4f   0x00000001   PAD
    0x08119b50   0x08119b50   0x00000020   Data   RO         2374    .rodata.sys_fn_init  net_config.o
    0x08119b70   0x08119b70   0x0000001c   Data   RO         2375    .rodata.sys_fn_run  net_config.o
    0x08119b8c   0x08119b8c   0x00000020   Data   RO         3717    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x10000000, Load base: 0x08119bc0, Size: 0x000192c8, Max: 0x00048000, ABSOLUTE, COMPRESSED[0x00000080])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   COMPRESSED   0x00000004   Data   RW         2866    .data               Net4_CM3_L.lib(net_loopback.o)
    0x10000004   COMPRESSED   0x00000004   Data   RW         2884    .data               Net4_CM3_L.lib(net_ip4_frag.o)
    0x10000008   COMPRESSED   0x00000001   Data   RW         2902    .data               Net4_CM3_L.lib(net_icmp.o)
    0x10000009   COMPRESSED   0x00000001   PAD
    0x1000000a   COMPRESSED   0x00000002   Data   RW         2944    .data               Net4_CM3_L.lib(net_udp.o)
    0x1000000c   COMPRESSED   0x00000004   Data   RW         3035    .data               Net4_CM3_L.lib(net_tcp.o)
    0x10000010   COMPRESSED   0x00000008   Data   RW         3352    .data               Net4_CM3_L.lib(net_ip4.o)
    0x10000018   COMPRESSED   0x00000004   Data   RW         2259    .data.SystemCoreClock  system_stm32h7xx_dualcore_boot_cm4_cm7.o
    0x1000001c   COMPRESSED   0x00000004   Data   RW         2260    .data.SystemD2Clock  system_stm32h7xx_dualcore_boot_cm4_cm7.o
    0x10000020   COMPRESSED   0x00000064   Data   RW          301    .data.hADC1         adc_stm32h7.o
    0x10000084   COMPRESSED   0x00000090   Data   RW          275    .data.hUART1        com_stm32h7.o
    0x10000114   COMPRESSED   0x00000090   Data   RW          276    .data.hUART2        com_stm32h7.o
    0x100001a4   COMPRESSED   0x00000090   Data   RW          277    .data.hUART3        com_stm32h7.o
    0x10000234   COMPRESSED   0x00000090   Data   RW          278    .data.hUART4        com_stm32h7.o
    0x100002c4   COMPRESSED   0x00000090   Data   RW          279    .data.hUART5        com_stm32h7.o
    0x10000354   COMPRESSED   0x00000090   Data   RW          280    .data.hUART6        com_stm32h7.o
    0x100003e4   COMPRESSED   0x00000090   Data   RW          281    .data.hUART7        com_stm32h7.o
    0x10000474   COMPRESSED   0x00000090   Data   RW          282    .data.hUART8        com_stm32h7.o
    0x10000504   COMPRESSED   0x000000a4   Data   RW         2446    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x100005a8   COMPRESSED   0x00000018   Data   RW          455    .data.os.thread.mpi  rtx_lib.o
    0x100005c0   COMPRESSED   0x00000020   Data   RW           66    .data.tcp_soc       sock.o
    0x100005e0   COMPRESSED   0x00000004   Data   RW           65    .data.udp_soc       sock.o
    0x100005e4   COMPRESSED   0x0000001c   PAD
    0x10000600        -       0x000000a0   Zero   RW         2761    .bss                Net4_CM3_L.lib(net_eth.o)
    0x100006a0        -       0x00000018   Zero   RW         2821    .bss                Net4_CM3_L.lib(net_arp.o)
    0x100006b8        -       0x00000010   Zero   RW         2943    .bss                Net4_CM3_L.lib(net_udp.o)
    0x100006c8        -       0x00000020   Zero   RW         3105    .bss                Net4_CM3_L.lib(net_ping_core.o)
    0x100006e8        -       0x00000038   Zero   RW         3140    .bss                Net4_CM3_L.lib(net_sys.o)
    0x10000720        -       0x00000014   Zero   RW         3383    .bss                Net4_CM3_L.lib(net_mem.o)
    0x10000734        -       0x00000060   Zero   RW         3585    .bss                c_w.l(libspace.o)
    0x10000794        -       0x00000060   Zero   RW          244    .bss.DMARxDscrTab   eth_stm32h7.o
    0x100007f4        -       0x00000060   Zero   RW          243    .bss.DMATxDscrTab   eth_stm32h7.o
    0x10000854        -       0x00000004   Zero   RW          427    .bss.DataVar        eeprom.o
    0x10000858        -       0x00000024   Zero   RW          238    .bss.Emac           eth_stm32h7.o
    0x1000087c        -       0x00000078   Zero   RW          167    .bss.HAL_ADC_MspInit.DMA_HandleStruct  msp_stm32h7.o
    0x100008f4        -       0x00000004   Zero   RW           21    .bss.HAL_GetTick.ticks  main.o
    0x100008f8        -       0x00000040   Zero   RW           22    .bss.LocalMS        main.o
    0x10000938        -       0x00000064   Zero   RW          248    .bss.MAC_Config     eth_stm32h7.o
    0x1000099c        -       0x00000010   Zero   RW          249    .bss.MAC_Filter     eth_stm32h7.o
    0x100009ac        -       0x00000004   Zero   RW          395    .bss.MODBUS_SetRegister.lValue  modbus.o
    0x100009b0        -       0x00000004   Zero   RW          396    .bss.MODBUS_SetRegister.lValue.1  modbus.o
    0x100009b4        -       0x00000004   Zero   RW          397    .bss.MODBUS_SetRegister.lValue.2  modbus.o
    0x100009b8        -       0x00000004   Zero   RW          398    .bss.MODBUS_SetRegister.lValue.3  modbus.o
    0x100009bc        -       0x00000004   Zero   RW          399    .bss.MODBUS_SetRegister.lValue.4  modbus.o
    0x100009c0        -       0x00000004   Zero   RW          400    .bss.MODBUS_SetRegister.lValue.5  modbus.o
    0x100009c4        -       0x00000004   Zero   RW          401    .bss.MODBUS_SetRegister.lValue.6  modbus.o
    0x100009c8        -       0x0000000c   Zero   RW          505    .bss.PHY            phy_lan8742a.o
    0x100009d4        -       0x000017e0   Zero   RW          246    .bss.Rx_Buff        eth_stm32h7.o
    0x100021b4        -       0x00002000   Zero   RW           68    .bss.TCP_QueueSpaces  sock.o
    0x100041b4        -       0x00000080   Zero   RW           67    .bss.TCP_QueueStruct  sock.o
    0x10004234        -       0x00000001   Zero   RW          573    .bss.TS_OverflowLock  eventrecorder.o
    0x10004235        -       0x000017e0   Zero   RW          247    .bss.TX_Buff        eth_stm32h7.o
    0x10005a15   COMPRESSED   0x00000003   PAD
    0x10005a18        -       0x00000034   Zero   RW          245    .bss.TX_Config      eth_stm32h7.o
    0x10005a4c        -       0x00000004   Zero   RW           47    .bss.app_idle_tid   task.o
    0x10005a50        -       0x00000004   Zero   RW           44    .bss.app_main_tid   task.o
    0x10005a54        -       0x00000004   Zero   RW           45    .bss.app_sock_tid   task.o
    0x10005a58        -       0x00000004   Zero   RW           46    .bss.app_test_tid   task.o
    0x10005a5c        -       0x000000c8   Zero   RW         2373    .bss.eth0_arp_table  net_config.o
    0x10005b24        -       0x00000018   Zero   RW         2345    .bss.eth0_localm    net_config.o
    0x10005b3c        -       0x00000006   Zero   RW         2366    .bss.eth0_mac_addr  net_config.o
    0x10005b42   COMPRESSED   0x00000006   PAD
    0x10005b48        -       0x00000400   Zero   RW         2372    .bss.eth0_stack     net_config.o
    0x10005f48        -       0x00000004   Zero   RW         2344    .bss.eth0_state     net_config.o
    0x10005f4c        -       0x00000088   Zero   RW          237    .bss.hETH           eth_stm32h7.o
    0x10005fd4        -       0x00000028   Zero   RW         2357    .bss.ip4_frag_scb   net_config.o
    0x10005ffc        -       0x00000004   Zero   RW         2333    .bss.k_mul          net_config.o
    0x10006000        -       0x00008000   Zero   RW         2341    .bss.mem_pool       net_config.o
    0x1000e000        -       0x00000800   Zero   RW         2368    .bss.net_stack      net_config.o
    0x1000e800        -       0x000004a4   Zero   RW          571    .bss.noinit         eventrecorder.o
    0x1000eca4   COMPRESSED   0x00000004   PAD
    0x1000eca8        -       0x00008040   Zero   RW          454    .bss.os             rtx_lib.o
    0x10016ce8        -       0x00000001   Zero   RW         3327    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x10016ce9   COMPRESSED   0x00000003   PAD
    0x10016cec        -       0x00000034   Zero   RW          466    .bss.os.msgqueue.cb  rtx_lib.o
    0x10016d20        -       0x00000050   Zero   RW          467    .bss.os.msgqueue.mem  rtx_lib.o
    0x10016d70        -       0x00000038   Zero   RW         2370    .bss.os.mutex.cb    net_config.o
    0x10016da8        -       0x00000010   Zero   RW         2371    .bss.os.semaphore.cb  net_config.o
    0x10016db8        -       0x000004c8   Zero   RW          463    .bss.os.thread.cb   rtx_lib.o
    0x10017280        -       0x00000088   Zero   RW         2367    .bss.os.thread.cb   net_config.o
    0x10017308        -       0x00000200   Zero   RW          464    .bss.os.thread.idle.stack  rtx_lib.o
    0x10017508        -       0x00000200   Zero   RW          465    .bss.os.thread.timer.stack  rtx_lib.o
    0x10017708        -       0x00000020   Zero   RW         2369    .bss.os.timer.cb    net_config.o
    0x10017728        -       0x00000001   Zero   RW          468    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x10017729   COMPRESSED   0x00000003   PAD
    0x1001772c        -       0x0000001c   Zero   RW         1335    .bss.pFlash         stm32h7xx_hal_flash.o
    0x10017748        -       0x00000640   Zero   RW         2361    .bss.tcp_scb        net_config.o
    0x10017d88        -       0x00000140   Zero   RW         2359    .bss.udp_scb        net_config.o
    0x10017ec8        -       0x00001000   Zero   RW         2246    HEAP                startup_stm32h755xx.o
    0x10018ec8        -       0x00000400   Zero   RW         2245    STACK               startup_stm32h755xx.o



  Load Region LR$$.bss.ARM.__at_0x30046000 (Base: 0x30046000, Size: 0x00000000, Max: 0x00000008, ABSOLUTE)

    Execution Region ER$$.bss.ARM.__at_0x30046000 (Exec base: 0x30046000, Load base: 0x30046000, Size: 0x00000008, Max: 0x00000008, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30046000        -       0x00000006   Zero   RW          302    .bss.ARM.__at_0x30046000  adc_stm32h7.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       630         16         28        100          6      12878   adc_stm32h7.o
       302         14         28          0          0       1238   bsp_stm32h7.o
       312          0         28       1152          0      14062   com_stm32h7.o
       178          0         28          0          0       1348   eep_stm32h7.o
      2592          0         32          0          4       6255   eeprom.o
      2836         12         82          0      12756      15790   eth_stm32h7.o
      1676          0         24          0       1189       8788   eventrecorder.o
       498          0         27          0          0       2627   fifo.o
       348          0        192          0          0       2000   idle.o
       262          0         28          0          0       1777   irq_stm32h7.o
         0          0         32          0          0       3767   led_stm32h7.o
       474          0         35          0         68       5982   main.o
      3460          0       1536          0         28      13976   modbus.o
       828          0         20          0        120      18380   msp_stm32h7.o
       574          0        646          0      38278      17718   net_config.o
       894          0         36          0         12       3485   phy_lan8742a.o
         8          0          0          0          0        723   rtx_config.o
       470          0        268         24      35213       7459   rtx_lib.o
      6344          0       4600         36       8320       5144   sock.o
        64         26        664          0       5120        908   startup_stm32h755xx.o
       260          0        112          0          0      16324   stm32h7xx_hal.o
      8860          0        116          0          0      22678   stm32h7xx_hal_adc.o
       408          0        119          0          0      22149   stm32h7xx_hal_adc_ex.o
       664          0        119          0          0      11253   stm32h7xx_hal_cortex.o
     17812          8        124          0          0      13015   stm32h7xx_hal_dma.o
      7040          0          0          0          0      25133   stm32h7xx_hal_eth.o
      1100          0        118          0         28       7019   stm32h7xx_hal_flash.o
      1054          0        121          0          0      11049   stm32h7xx_hal_flash_ex.o
      2506          0        117          0          0       7635   stm32h7xx_hal_gpio.o
        86          0          0          0          0       3200   stm32h7xx_hal_hsem.o
       416          0        119          0          0      11465   stm32h7xx_hal_pwr_ex.o
       870         66          0          0          0      12196   stm32h7xx_hal_rcc.o
      4866         54          0          0          0      19409   stm32h7xx_hal_rcc_ex.o
      1630          0          0          0          0      25881   stm32h7xx_hal_uart.o
        24          0          0          0          0       8814   stm32h7xx_hal_uart_ex.o
        48          0         16          8          0       3994   system_stm32h7xx_dualcore_boot_cm4_cm7.o
      1992          0        695          0         16      14895   task.o
       170          0         51          0          0        825   test.o

    ----------------------------------------------------------------------
     72810        196      10196       1320     101204     381239   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       254          0          3          0         46          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       272          6         12          0          0        436   net_addr.o
      2066         58          0          0         24       1432   net_arp.o
       244          6          0          0          0        456   net_common.o
      2124         58          0          0        160       1504   net_eth.o
       416         26          0          1          0        232   net_icmp.o
       982         60          4          8          0        948   net_ip4.o
       690         30          0          4          0        476   net_ip4_frag.o
       236         20         56          4          0        256   net_loopback.o
       464         46          0          0         20        556   net_mem.o
       100         20         18          0         32        212   net_ping_core.o
       578         66          0          0         56        848   net_sys.o
      4300        144          0          4          0       2620   net_tcp.o
       940         46          0          2         16        880   net_udp.o
         0          0          4          0          0          0   net_version.o
       200         12          0          0          0        634   irq_armv7m.o
       114         20          0          0          1       3200   os_systick.o
        58          4          0          0          0       2791   rtx_delay.o
       634         48         11        164          0      16501   rtx_kernel.o
       228          0          0          0          0       2537   rtx_memory.o
       188          0          0          0          0      16008   rtx_mempool.o
      1310         24          0          0          0      18657   rtx_msgqueue.o
       882         28          0          0          0       9962   rtx_mutex.o
       560         20          0          0          0      10527   rtx_semaphore.o
       368         18          0          0          0       5296   rtx_system.o
      2232         88          0          0          0      31847   rtx_thread.o
       548         32          0          0          0      10397   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        88          0          0          0          0         76   memcmp.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        90          4          0          0          0        140   dfixu.o
        38          0          0          0          0        116   dflt_clz.o
       340         12          0          0          0        152   dmul.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
        26          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
     22274        916        108        188        408     140949   Library Totals
        58          0          3          1          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

     13412        586         94         23        308      10856   Net4_CM3_L.lib
      7322        294         11        164          1     128357   RTX_CM4F.lib
       820         16          0          0         96        956   c_w.l
       662         20          0          0          0        780   fz_wm.l

    ----------------------------------------------------------------------
     22274        916        108        188        408     140949   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     95084       1112      10304       1508     101612     513444   Grand Totals
     95084       1112      10304        128     101612     513444   ELF Image Totals (compressed)
     95084       1112      10304        128          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)               105388 ( 102.92kB)
    Total RW  Size (RW Data + ZI Data)            103120 ( 100.70kB)
    Total ROM Size (Code + RO Data + RW Data)     105516 ( 103.04kB)

==============================================================================

